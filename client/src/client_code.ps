%!PS-Adobe-3.0
%%Title: air_strike.cpp, air_strike.h, banana.cpp, banana.h, bazooka.cpp, bazooka.h, breathing.cpp, breathing.h, camera.cpp, camera.h
%%For: Gabriel Robles
%%Creator: a2ps version 4.14
%%CreationDate: Tue Jun 26 12:47:04 2018
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 80
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1,1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(air_strike.h) str
(") p n
() N
(#define) K
( AIR_STRIKE 3) p n
() N
(View::AirStrike::AirStrike\(SDL_Renderer * r, ) S
(int) k
( ratioExplosion\) :) p n
(  sprite\(AIR_STRIKE, DEPENDENT_ON_GRADES\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Bazooka) str
("\) {) p n
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_AIR_STRIKE, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_AIR_STRIKE\);) p n
(  ) S
(this) K
(->sound.playSound\(0\);) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
() N
() S 8 T () S
(this) K
(->playedAboutToExplode = ) p
(false) k
(;) p n
(}) N
() N
(View::AirStrike::~AirStrike\(\) {) N
() N
(}) N
() N
(void) k
( View::AirStrike::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render AirStrike animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\() p
(this) K
(->angleDirection\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(air_strike.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __AIR_STRIKE_H__) p n
(#define) K
( __AIR_STRIKE_H__) p n
() N
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
() N
(namespace View {) N
(  class AirStrike: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
() N
(    public:) N
(      AirStrike\(SDL_Renderer * r, ) S
(int) k
( ratioExplosion = 100\);) p n
(      ~AirStrike\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(air_strike.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(air_strike.cpp, air_strike.h) (1/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(banana.h) str
(") p n
() N
(#define) K
( BANANA_FPC 3) p n
() N
(View::Banana::Banana\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion\) :) p n
(  sprite\(BANANA_FPC, INFINITE_GOING\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Banana) str
("\),) p n
() S 8 T (countdownText\(COUNTDOWN_TEXT_SIZE\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_BANANA, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_THROW_PROJECTIL\);) p n
(  ) S
(this) K
(->sound.playSound\(0\);) p n
() S 8 T () S
(this) K
(->countdown = countdown;) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
() N
() S 8 T () S
(this) K
(->playedAboutToExplode = ) p
(false) k
(;) p n
(}) N
() N
(View::Banana::~Banana\(\) {) N
() N
(}) N
() N
(void) k
( View::Banana::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render Banana animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() N
() S 8 T () S 16 T () S
(// Render countdown text) c n
() p 8 T () S 16 T () S
(this) K
(->countdownText.setText\(r, std::to_string\() p
(this) K
(->countdown\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setX\() p
(this) K
(->x + ) p
(this) K
(->texture.getWidth\(\) +  ) p
(t) K n
(his) S
(->countdownText.getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setY\() p
(this) K
(->y - ) p
(this) K
(->countdownText.getHeight) p n
(\(\) / 2\);) N
() S 8 T () S 16 T () S
(this) K
(->countdownText.render\(r, camX, camY\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(banana.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __BANANA_H__) p n
(#define) K
( __BANANA_H__) p n
() N
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
() N
(namespace View {) N
(  class Banana: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
(      RectangleText countdownText;) N
(    public:) N
(      Banana\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion = 100\);) p n
(      ~Banana\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(banana.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(banana.cpp, banana.h) (2/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(bazooka.h) str
(") p n
() N
(#define) K
( BAZOOKA_FPC 3) p n
() N
(View::Bazooka::Bazooka\(SDL_Renderer * r, ) S
(int) k
( ratioExplosion, weapon_t weapon\) :) p n
(  sprite\(BAZOOKA_FPC, DEPENDENT_ON_GRADES\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Bazooka) str
("\) {) p n
() S 8 T () S
(if) K
( \(weapon == w_mortar\) {) p n
() S 8 T () S 16 T () S
(this) K
(->texture.loadFromFile\(gPath.PATH_MORTAR, r\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(this) K
(->texture.loadFromFile\(gPath.PATH_BAZOOKA, r\);) p n
() S 8 T (}) N
() N
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_THROW_PROJECTIL\);) p n
(  ) S
(this) K
(->sound.playSound\(0\);) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
() N
() S 8 T () S
(this) K
(->playedAboutToExplode = ) p
(false) k
(;) p n
(}) N
() N
(View::Bazooka::~Bazooka\(\) {) N
() N
(}) N
() N
(void) k
( View::Bazooka::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render Bazooka animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\() p
(this) K
(->angleDirection\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(bazooka.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __BAZOOKA_H__) p n
(#define) K
( __BAZOOKA_H__) p n
() N
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(namespace View {) N
(  class Bazooka: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
() N
(    public:) N
(      Bazooka\(SDL_Renderer * r, ) S
(int) k
( ratioExplosion = 100, weapon_t w = w_bazooka) p n
(\);) N
(      ~Bazooka\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(bazooka.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(bazooka.cpp, bazooka.h) (3/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(breathing.h) str
(") p n
() N
(View::Breathing::Breathing\(View::Worm * worm, SDL_Renderer * r\) {) N
(  ) S
(this) K
(->state = WS_BREATHING;) p n
(  ) S
(this) K
(->context = worm;) p n
(  ) S
(this) K
(->textures[NONE].loadFromFile\(gPath.PATH_WORM_BREATH_1, r\);) p n
(  ) S
(this) K
(->textures[UP].loadFromFile\(gPath.PATH_WORM_BREATH_1_UP, r\);) p n
(  ) S
(this) K
(->textures[DOWN].loadFromFile\(gPath.PATH_WORM_BREATH_1_DOWN, r\);) p n
(  ) S
(this) K
(->sprites[NONE].setSpriteSheet\(&) p
(this) K
(->textures[NONE]\);) p n
(  ) S
(this) K
(->sprites[UP].setSpriteSheet\(&) p
(this) K
(->textures[UP]\);) p n
(  ) S
(this) K
(->sprites[DOWN].setSpriteSheet\(&) p
(this) K
(->textures[DOWN]\);) p n
(}) N
() N
(View::Breathing::~Breathing\(\) {) N
() N
(}) N
() N
(void) k
( View::Breathing::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY, worm_inclinat) p n
(ion_t incl, ) S
(bool) k
( mirrored, ) p
(int) k
( angle\) {) p n
(  SDL_Rect clip = ) S
(this) K
(->sprites[incl].getNextClip\(\);) p n
(  View::Texture & current = ) S
(this) K
(->textures[incl];) p n
(  ) S
(if) K
( \(mirrored\) {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip, ) N
(      0, ) N
(      ) S
(NULL) K
(, ) p n
(      SDL_FLIP_HORIZONTAL) N
(    \);) N
(  } ) S
(else) K
( {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip) N
(    \);) N
(  }) N
(}) N
() N
(void) k
( View::Breathing::resetAnimation\() p
(void) k
(\) {) p n
(  std::map<worm_inclination_t, SpriteAnimation>::iterator it = ) S
(this) K
(->sprites.beg) p n
(in\(\);) N
(  ) S
(for) K
( \(; it != ) p
(this) K
(->sprites.end\(\) ; it++\) {) p n
(    it->second.reset\(\);) N
(  }) N
(}) S
(breathing.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __BREATHING_H__) p n
(#define) K
( __BREATHING_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
(  ) N
(  class Breathing: public WormState {) N
(    private:) N
(      std::map<worm_inclination_t, View::Texture> textures;) N
(      std::map<worm_inclination_t, View::SpriteAnimation> sprites;) N
() N
(    public:) N
(      Breathing\(View::Worm * context, SDL_Renderer * r\);) N
(      ~Breathing\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
(\);) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(breathing.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(breathing.cpp, breathing.h) (4/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(#define) K
( OFFSET_NEAR 25) p n
(#define) K
( MOVE_PER_FRAME 10) p n
(#define) K
( MAX_MANUAL_QUIET_MS 1500) p n
() N
(View::Camera::Camera\() S
(int) k
( camW, ) p
(int) k
( camH, ) p
(int) k
( levelW, ) p
(int) k
( levelH\) :) p n
(  width\(camW\), height\(camH\), levelWidth\(levelW\), levelHeight\(levelH\) {) N
(    ) S
(// Inicializamos la camara centrada al nivel) c n
(    ) p
(this) K
(->camera = {) p n
(      \() S
(this) K
(->levelWidth - ) p
(this) K
(->width\) / 2,) p n
(      \() S
(this) K
(->levelHeight - ) p
(this) K
(->height\) / 2,) p n
(      ) S
(this) K
(->width,) p n
(      ) S
(this) K
(->height) p n
(    };) N
() N
(    ) S
(this) K
(->movingLeft = ) p
(false) k
(;) p n
(    ) S
(this) K
(->movingRight = ) p
(false) k
(;) p n
(    ) S
(this) K
(->movingUp = ) p
(false) k
(;) p n
(    ) S
(this) K
(->movingDown = ) p
(false) k
(;) p n
(    ) S
(this) K
(->mode = CAMERA_AUTOMATIC;) p n
(}) N
() N
(View::Camera::~Camera\(\) {}) N
() N
(int) k
( View::Camera::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->camera.x;) p n
(}) N
() N
(int) k
( View::Camera::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->camera.y;) p n
(}) N
() N
(SDL_Rect View::Camera::getCamera\() S
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->camera;) p n
(}) N
() N
(void) k
( View::Camera::setX\() p
(int) k
( x\) {) p n
(  ) S
(if) K
( \(x < 0\) {) p n
(    ) S
(this) K
(->camera.x = 0;) p n
(    ) S
(return) K
(;) p n
(  }) N
() N
(  ) S
(if) K
( \(x > ) p
(this) K
(->levelWidth - ) p
(this) K
(->width\) {) p n
(    ) S
(this) K
(->camera.x = ) p
(this) K
(->levelWidth - ) p
(this) K
(->width;) p n
(    ) S
(return) K
(;) p n
(  }) N
() N
(  ) S
(this) K
(->camera.x = x;) p n
(}) N
() N
(void) k
( View::Camera::setY\() p
(int) k
( y\) {) p n
(  ) S
(if) K
( \(y < 0\) {) p n
(    ) S
(this) K
(->camera.y = 0;) p n
(    ) S
(return) K
(;) p n
(  }) N
() N
(  ) S
(if) K
( \(y > ) p
(this) K
(->levelHeight - ) p
(this) K
(->height\) {) p n
(    ) S
(this) K
(->camera.y = ) p
(this) K
(->levelHeight - ) p
(this) K
(->height;) p n
(    ) S
(return) K
(;) p n
(  }) N
(camera.cpp) (Page 1/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p n
(  ) S
(this) K
(->camera.y = y;) p n
(}) N
() N
(void) k
( View::Camera::setXY\() p
(int) k
( x, ) p
(int) k
( y\) {) p n
(  ) S
(this) K
(->setX\(x\);) p n
(  ) S
(this) K
(->setY\(y\);) p n
(  ) S
(return) K
(;) p n
(}) N
() N
(void) k
( View::Camera::focus\() p
(const) K
( Drawable & d\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->mode == CAMERA_MANUAL\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->timer.getTicks\(\) > MAX_MANUAL_QUIET_MS\) {) p n
(      ) S
(this) K
(->mode = CAMERA_AUTOMATIC;) p n
(      ) S
(this) K
(->timer.stop\(\);) p n
(    }) N
(  }) N
(  ) N
(  ) S
(if) K
( \() p
(this) K
(->mode == CAMERA_AUTOMATIC\) {) p n
(    ) S
(this) K
(->setX\(d.getX\(\) - ) p
(this) K
(->width / 2\);) p n
(    ) S
(this) K
(->setY\(d.getY\(\) - ) p
(this) K
(->height / 2\);) p n
(  }) N
(}) N
() N
(void) k
( View::Camera::setManualMode\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->mode = CAMERA_MANUAL;) p n
(  ) S
(this) K
(->restartTimer\(\);) p n
(}) N
() N
(void) k
( View::Camera::restartTimer\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->timer.stop\(\);) p n
(  ) S
(this) K
(->timer.start\(\);) p n
(}) N
() N
(void) k
( View::Camera::handleEvent\(SDL_Event & e\) {) p n
(  ) S
(if) K
( \(e.type == SDL_KEYDOWN\) {) p n
(    ) S
(if) K
( \(e.key.keysym.sym == SDLK_LEFT\) {) p n
(      ) S
(this) K
(->setX\() p
(this) K
(->camera.x - 25\);) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(if) K
( \(e.key.keysym.sym == SDLK_RIGHT\) {) p n
(      ) S
(this) K
(->setX\() p
(this) K
(->camera.x + 25\);) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(if) K
( \(e.key.keysym.sym == SDLK_UP\) {) p n
(      ) S
(this) K
(->setY\() p
(this) K
(->camera.y - 25\);) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(if) K
( \(e.key.keysym.sym == SDLK_DOWN\) {) p n
(      ) S
(this) K
(->setY\() p
(this) K
(->camera.y + 25\);) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(  }) N
(}) N
() N
(void) k
( View::Camera::updateCameraPosition\() p
(void) k
(\) {) p n
(  ) S
(int) k
( mouseX, mouseY;) p n
(  SDL_GetMouseState\(&mouseX, &mouseY\);) N
() N
(  ) S
(if) K
( \() p n
(    mouseX > 0 + OFFSET_NEAR &&) N
(    mouseX < ) S
(this) K
(->width - OFFSET_NEAR &&) p n
(camera.cpp) (Page 2/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(camera.cpp) (5/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3,1) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    mouseY > 0 + OFFSET_NEAR &&) p n
(    mouseY < ) S
(this) K
(->height - OFFSET_NEAR) p n
(  \) {) N
(    ) S
(this) K
(->movingLeft = ) p
(false) k
(;) p n
(    ) S
(this) K
(->movingRight = ) p
(false) k
(;) p n
(    ) S
(this) K
(->movingUp = ) p
(false) k
(;) p n
(    ) S
(this) K
(->movingDown = ) p
(false) k
(;) p n
(  } ) S
(else) K
( {) p n
(    ) S
(if) K
( \(mouseX < 0 + OFFSET_NEAR || ) p
(this) K
(->movingLeft\) {) p n
(      ) S
(this) K
(->setX\() p
(this) K
(->camera.x - MOVE_PER_FRAME\);) p n
(      ) S
(this) K
(->movingLeft = ) p
(true) k
(;) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(if) K
( \(mouseX > ) p
(this) K
(->width - OFFSET_NEAR || ) p
(this) K
(->movingRight\) {) p n
(      ) S
(this) K
(->setX\() p
(this) K
(->camera.x + MOVE_PER_FRAME\);) p n
(      ) S
(this) K
(->movingRight = ) p
(true) k
(;) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(if) K
( \(mouseY < 0 + OFFSET_NEAR || ) p
(this) K
(->movingUp\) {) p n
(      ) S
(this) K
(->setY\() p
(this) K
(->camera.y - MOVE_PER_FRAME\);) p n
(      ) S
(this) K
(->movingUp = ) p
(true) k
(;) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(if) K
( \(mouseY > ) p
(this) K
(->height -OFFSET_NEAR || ) p
(this) K
(->movingDown\) {) p n
(      ) S
(this) K
(->setY\() p
(this) K
(->camera.y + MOVE_PER_FRAME\);) p n
(      ) S
(this) K
(->movingDown = ) p
(true) k
(;) p n
(      ) S
(this) K
(->setManualMode\(\);) p n
(    }) N
(    ) S
(return) K
(;) p n
(  }) N
(}) S
(camera.cpp) (Page 3/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CAMERA_H__) p n
(#define) K
( __CAMERA_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(sdl_timer.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(namespace View {) N
(  class Camera {) N
(    private:) N
(      SDL_Rect camera;) N
(      camera_mode_t mode;) N
(      Timer timer;) N
() N
(      ) S
(// Dimensiones de la camara) c n
(      ) p
(int) k
( width;) p n
(      ) S
(int) k
( height;) p n
() N
(      ) S
(// Dimensiones del nivel) c n
(      ) p
(int) k
( levelWidth;) p n
(      ) S
(int) k
( levelHeight;) p n
() N
(      bool movingLeft;) N
(      bool movingRight;) N
(      bool movingUp;) N
(      bool movingDown;) N
() N
(      ) S
(void) k
( setManualMode\() p
(void) k
(\);) p n
(      ) S
(void) k
( restartTimer\() p
(void) k
(\);) p n
() N
(    public:) N
(      Camera\() S
(int) k
( camW, ) p
(int) k
( camH, ) p
(int) k
( levelW, ) p
(int) k
( levelH\);) p n
(      ~Camera\(\);) N
() N
(      ) S
(// Getters de la posicion de la camara) c n
(      ) p
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
() N
(      ) S
(// Getter del rectangulo de la camara) c n
(      SDL_Rect getCamera\() p
(void) k
(\) ) p
(const) K
(;) p n
() N
(      ) S
(// Seters de la posicion de la camara) c n
(      ) p
(void) k
( setX\() p
(int) k
(\);) p n
(      ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      ) S
(void) k
( setXY\() p
(int) k
(, ) p
(int) k
(\);) p n
() N
(      ) S
(// Centra la camara en un dibujable) c n
(      ) p
(void) k
( focus\() p
(const) K
( Drawable &\);) p n
() N
(      ) S
(// Mueve la camara si recibe el evento correspondiente) c n
(      ) p
(void) k
( handleEvent\(SDL_Event &\);) p n
() N
(      ) S
(// Actualiza la posicion de la camara ) c n
(      ) p
(// respecto de donde) c n
(      ) p
(// esta ubicado el mouse) c n
(      ) p
(void) k
( updateCameraPosition\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(camera.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(camera.cpp, camera.h) (6/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(client_configuration.h) str
(") p n
() N
(#define) K
( CHOP_ANGLE 3) p n
(#define) K
( MAX_SIGHT_ANGLE 90) p n
(#define) K
( MIN_SIGHT_ANGLE -90) p n
(#define) K
( MAX_TIME_SHOOTING 1500) p n
() N
(#define) K
( VIEW_SHOOT_POWER_WIDTH 300) p n
(#define) K
( VIEW_SHOOT_POWER_HEIGHT 50) p n
() N
(#define) K
( SCREEN_PADDING 10) p n
() N
(#define) K
( MAX_WEAPONS 10) p n
(#define) K
( SCREEN_PERCENT_CLOCK 10) p n
(#define) K
( SCREEN_PERCENT_INVENTORY 50) p n
(#define) K
( SCREEN_PERCENT_SHOOT_POWER_HEIGHT 5) p n
(#define) K
( SCREEN_PERCENT_SHOOT_POWER_WIDTH 30) p n
() N
(#define) K
( SCREEN_PERCENT_WIND_HEIGHT 5) p n
(#define) K
( SCREEN_PERCENT_WIND_WIDTH 30) p n
() N
(#define) K
( SCREEN_PERCENT_TEAMS_HEALTH_HEIGHT 10) p n
(#define) K
( SCREEN_PERCENT_TEAMS_HEALTH_WIDTH 20) p n
() N
(ClientConfiguration::ClientConfiguration\(SDL_Renderer * r, ) S
(int) k
( screenW, ) p
(int) k
( scre) p n
(enH, ) S
(const) K
( YAML::Node & staticMap, size_t teamId\) :) p n
(  notice\(screenW, screenH\),) N
(  renderer\(r\),) N
(  teamId\(teamId\),) N
(  shootPower\() N
(    screenW / \(100 / SCREEN_PERCENT_SHOOT_POWER_WIDTH\), ) N
(    screenH / \(100 / SCREEN_PERCENT_SHOOT_POWER_HEIGHT\), ) N
(    MAX_TIME_SHOOTING) N
(  \),) N
(  clock\( ) N
(    screenH / \(100 / SCREEN_PERCENT_CLOCK\), ) N
(    screenH / \(100 / SCREEN_PERCENT_CLOCK\)) N
(  \),) N
(  inventory\() N
(    r,) N
(    staticMap[") S
(init_inventory) str
("]) p n
(  \),) N
(  wind\() N
(    r,) N
(    screenW / \(100 / SCREEN_PERCENT_WIND_WIDTH\), ) N
(    screenH / \(100 / SCREEN_PERCENT_WIND_HEIGHT\) ) N
(  \),) N
(  teamsHealth\() N
(    r,) N
(    screenW / \(100 / SCREEN_PERCENT_TEAMS_HEALTH_WIDTH\), ) N
(    screenH / \(100 / SCREEN_PERCENT_TEAMS_HEALTH_HEIGHT\),) N
(    staticMap[") S
(teams_amount) str
("].as<) p
(int) k
(>\(\),) p n
(    staticMap[") S
(worms_health) str
("].as<) p
(int) k
(>\(\),) p n
(    staticMap[") S
(max_worms) str
("].as<) p
(int) k
(>\(\)) p n
(  \) {) N
() N
(  ) S
(int) k
( clockX = SCREEN_PADDING + ) p
(this) K
(->clock.getWidth\(\) / 2;) p n
(  ) S
(int) k
( clockY = screenH - SCREEN_PADDING - ) p
(this) K
(->clock.getHeight\(\) / 2;) p n
(  ) S
(this) K
(->clock.setX\(clockX\);) p n
(  ) S
(this) K
(->clock.setY\(clockY\);) p n
() N
(  ) S
(int) k
( shootX = screenW - SCREEN_PADDING - ) p
(this) K
(->shootPower.getWidth\(\) / 2;) p n
(client_configuration.cpp) (Page 1/5) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(int) k
( shootY = screenH - SCREEN_PADDING - ) p
(this) K
(->shootPower.getHeight\(\) / 2 - ) p
(thi) K n
(s) S
(->wind.getHeight\(\) - SCREEN_PADDING;) p n
(  ) S
(this) K
(->shootPower.setX\(shootX\);) p n
(  ) S
(this) K
(->shootPower.setY\(shootY\);) p n
() N
(  ) S
(int) k
( windX = screenW - SCREEN_PADDING - ) p
(this) K
(->wind.getWidth\(\) / 2;) p n
(  ) S
(int) k
( windY = screenH - SCREEN_PADDING - ) p
(this) K
(->wind.getHeight\(\) / 2;) p n
(  ) S
(this) K
(->wind.setX\(windX\);) p n
(  ) S
(this) K
(->wind.setY\(windY\);) p n
() N
(  ) S
(int) k
( teamsHealthX = SCREEN_PADDING + ) p
(this) K
(->clock.getWidth\(\) + SCREEN_PADDING + ) p
() K n
(this) S
(->teamsHealth.getWidth\(\) / 2;) p n
(  ) S
(int) k
( teamsHealthY = screenH - SCREEN_PADDING - ) p
(this) K
(->teamsHealth.getHeight\(\) / ) p n
(2;) N
(  ) S
(this) K
(->teamsHealth.setX\(teamsHealthX\);) p n
(  ) S
(this) K
(->teamsHealth.setY\(teamsHealthY\);) p n
() N
(  ) S
(this) K
(->inventory.setIconSide\(screenH / \(100 / SCREEN_PERCENT_INVENTORY\) / MAX_W) p n
(EAPONS\);) N
(  ) N
(  ) S
(this) K
(->sightAngle = 0;) p n
(  ) S
(this) K
(->weaponsCountdown = 5;) p n
(  ) S
(this) K
(->wormDataConfig = ALL;) p n
(  ) S
(this) K
(->shooting = ) p
(false) k
(;) p n
(  ) S
(this) K
(->shooted = ) p
(false) k
(;) p n
(  ) S
(this) K
(->powerShoot = -1;) p n
(  ) S
(this) K
(->shootingSound.setSound\(gPath.PATH_SOUND_THROW_POWER_UP\);) p n
() N
(  ) S
(this) K
(->remoteControlX = 0;) p n
(  ) S
(this) K
(->remoteControlY = 0;) p n
() N
(  ) S
(this) K
(->wormProtagonicId = 1;) p n
() N
(  ) S
(this) K
(->beginTurn.setSound\(gPath.PATH_SOUND_BEGIN_TURN\);) p n
(  ) S
(this) K
(->beginTurnPlayed = ) p
(false) k
(;) p n
() N
(  ) S
(this) K
(->music.setMusic\(gPath.PATH_MUSIC_DEFAULT\);) p n
(  ) S
(this) K
(->music.playMusic\(\);) p n
(}) N
() N
(ClientConfiguration::~ClientConfiguration\(\) {) N
() N
(}) N
() N
(void) k
( ClientConfiguration::handleEvent\(SDL_Event & e\) {) p n
(  ) S
(this) K
(->inventory.handleEvent\(e\);) p n
(  weapon_t weapon = ) S
(this) K
(->inventory.getSelectedWeapon\(\);) p n
() N
(  ) S
(if) K
( \(e.type == SDL_MOUSEBUTTONDOWN\) {) p n
(    ) S
(if) K
( \(e.button.button == SDL_BUTTON_LEFT\) {) p n
(      ) S
(if) K
( \(weapon == w_air_strike || weapon == w_teleport\) {) p n
(        ) S
(this) K
(->shooted = ) p
(true) k
(;) p n
(        SDL_GetMouseState\(&) S
(this) K
(->remoteControlX, &) p
(this) K
(->remoteControlY\);) p n
(      }) N
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(e.type == SDL_KEYDOWN\) {) p n
(    SDL_Keycode code = e.key.keysym.sym;) N
(    ) S
(if) K
( \(code == SDLK_PLUS || code == SDLK_KP_PLUS\) {) p n
(      ) S
(this) K
(->music.increaseMusicVolume\(\);) p n
(    }) N
(client_configuration.cpp) (Page 2/5) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_configuration.cpp) (7/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    ) S
(if) K
( \(code == SDLK_MINUS || code == SDLK_KP_MINUS\) {) p n
(      ) S
(this) K
(->music.decreaseMusicVolume\(\);) p n
(    }) N
() N
() S 8 T () S 16 T () S
(if) K
( \(code == SDLK_1\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->weaponsCountdown = 1;) p n
(      ) S
(this) K
(->notice.showFlashNotice\() p
(this) K
(->renderer, ") p
(Countdown set to 1 second) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(if) K
( \(code == SDLK_2\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->weaponsCountdown = 2;) p n
(      ) S
(this) K
(->notice.showFlashNotice\() p
(this) K
(->renderer, ") p
(Countdown set to 2 seconds) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(if) K
( \(code == SDLK_3\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->weaponsCountdown = 3;) p n
(      ) S
(this) K
(->notice.showFlashNotice\() p
(this) K
(->renderer, ") p
(Countdown set to 3 seconds) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(if) K
( \(code == SDLK_4\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->weaponsCountdown = 4;) p n
(      ) S
(this) K
(->notice.showFlashNotice\() p
(this) K
(->renderer, ") p
(Countdown set to 4 seconds) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(if) K
( \(code == SDLK_5\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->weaponsCountdown = 5;) p n
(      ) S
(this) K
(->notice.showFlashNotice\() p
(this) K
(->renderer, ") p
(Countdown set to 5 seconds) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
(    ) S
(if) K
( \(code == SDLK_w\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->sightAngle + CHOP_ANGLE > MAX_SIGHT_ANGLE\) {) p n
(        ) S
(this) K
(->sightAngle = MAX_SIGHT_ANGLE;) p n
(      } ) S
(else) K
( {) p n
(        ) S
(this) K
(->sightAngle += CHOP_ANGLE;) p n
(      }) N
(    }) N
() N
(    ) S
(if) K
( \(code == SDLK_s\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->sightAngle - CHOP_ANGLE < MIN_SIGHT_ANGLE\) {) p n
(        ) S
(this) K
(->sightAngle = MIN_SIGHT_ANGLE;) p n
(      } ) S
(else) K
( {) p n
(        ) S
(this) K
(->sightAngle -= CHOP_ANGLE;) p n
(      }) N
() S 8 T (  }) N
() N
(    ) S
(if) K
( \(code == SDLK_DELETE\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->wormDataConfig == ALL\) {) p n
(        ) S
(this) K
(->wormDataConfig = ONLY_HEALTH;) p n
(        ) S
(return) K
(;) p n
(      }) N
() N
(      ) S
(if) K
( \() p
(this) K
(->wormDataConfig == ONLY_HEALTH\) {) p n
(        ) S
(this) K
(->wormDataConfig = NO_DATA;) p n
(        ) S
(return) K
(;) p n
(      }) N
() N
(      ) S
(if) K
( \() p
(this) K
(->wormDataConfig == NO_DATA\) {) p n
(        ) S
(this) K
(->wormDataConfig = ALL;) p n
(        ) S
(return) K
(;) p n
(      }) N
(    }) N
(client_configuration.cpp) (Page 3/5) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    ) S
(if) K
( \(code == SDLK_h\) {) p n
(      ) S
(this) K
(->teamsHealth.toggleHide\(\);) p n
(    }) N
() N
(    ) S
(if) K
( \(code == SDLK_SPACE && weapon != w_air_strike && weapon != w_teleport\) {) p n
(      ) S
(if) K
( \(!) p
(this) K
(->shootingTimer.isStarted\(\)\) {) p n
(        ) S
(this) K
(->shootingSound.playSound\(0\);) p n
(        ) S
(this) K
(->shootingTimer.start\(\);) p n
(        ) S
(this) K
(->shooting = ) p
(true) k
(;) p n
(      }) N
(    }) N
(  }) N
() N
(  ) S
(if) K
( \() p
(this) K
(->shootingTimer.isStarted\(\)\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->shootingTimer.getTicks\(\) >= MAX_TIME_SHOOTING\) {) p n
(      ) S
(this) K
(->shootingSound.stopSound\(\);) p n
(      ) S
(this) K
(->powerShoot = MAX_TIME_SHOOTING;) p n
(      ) S
(this) K
(->shootingTimer.stop\(\);) p n
(      ) S
(this) K
(->shooting = ) p
(false) k
(;) p n
(      ) S
(this) K
(->shooted = ) p
(true) k
(;) p n
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(e.type == SDL_KEYUP\) {) p n
(    SDL_Keycode code = e.key.keysym.sym;) N
(    ) S
(if) K
( \(code == SDLK_SPACE && ) p
(this) K
(->shooting\) {) p n
(      ) S
(this) K
(->shootingSound.stopSound\(\);) p n
(      ) S
(this) K
(->shooting = ) p
(false) k
(;) p n
(      ) S
(this) K
(->shooted = ) p
(true) k
(;) p n
(      ) S
(this) K
(->powerShoot = ) p
(this) K
(->shootingTimer.getTicks\(\);) p n
(      ) S
(this) K
(->shootingTimer.stop\(\);) p n
(    }) N
(  }) N
(}) N
() N
(int) k
( ClientConfiguration::getWeaponsCountdown\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->weaponsCountdown;) p n
(}) N
() N
(bool) k
( ClientConfiguration::hasShooted\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->shooted;) p n
(}) N
() N
(int) k
( ClientConfiguration::getPowerShoot\() p
(void) k
(\) {) p n
(  ) S
(int) k
( pshoot = ) p
(this) K
(->powerShoot;) p n
(  ) S
(this) K
(->shooted = ) p
(false) k
(;) p n
(  ) S
(this) K
(->powerShoot = -1;) p n
(  ) S
(return) K
( pshoot;) p n
(}) N
() N
(void) k
( ClientConfiguration::render\(SDL_Renderer * r\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->shooting\) {) p n
(    ) S
(this) K
(->shootPower.render\(r, ) p
(this) K
(->shootingTimer.getTicks\(\)\);) p n
(  }) N
() N
(  ) S
(this) K
(->notice.render\(r\);) p n
() N
(  ) S
(this) K
(->wind.render\(r, 0, 0\);) p n
() N
(  ) S
(this) K
(->inventory.render\(r\);) p n
(  ) S
(this) K
(->clock.render\(r, 0, 0\);) p n
(client_configuration.cpp) (Page 4/5) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_configuration.cpp) (8/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5,1) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(  ) S
(this) K
(->teamsHealth.render\(r, 0, 0\);) p n
(}) N
() N
(weapon_t ClientConfiguration::getSelectedWeapon\() S
(void) k
(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->inventory.getSelectedWeapon\(\);) p n
(}) N
() N
(void) k
( ClientConfiguration::update\() p
(const) K
( YAML::Node & gameStatus, ) p
(const) K
( YAML::Node) p n
( & inventory\) {) N
(  size_t teamWithTurn = gameStatus[") S
(team_turn) str
("].as<size_t>\(\);) p n
(  ) S
(if) K
( \() p
(this) K
(->teamId == teamWithTurn && !) p
(this) K
(->beginTurnPlayed\) {) p n
(    ) S
(this) K
(->beginTurn.playSound\(0\);) p n
(    ) S
(this) K
(->beginTurnPlayed = ) p
(true) k
(;) p n
(  }) N
() N
(  ) S
(if) K
( \() p
(this) K
(->teamId != teamWithTurn && ) p
(this) K
(->beginTurnPlayed\) {) p n
(    ) S
(this) K
(->beginTurnPlayed = ) p
(false) k
(;) p n
(  }) N
() N
(  ) S
(int) k
( newTime = gameStatus[") p
(turn_timeleft) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(int) k
( windForce = gameStatus[") p
(wind_force) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(this) K
(->wormProtagonicId = gameStatus[") p
(protagonic_worm) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(const) K
( YAML::Node & teamsHealthNode = gameStatus[") p
(teams_health) str
("];) p n
() N
(  ) S
(if) K
( \(newTime\) {) p n
(    ) S
(this) K
(->clock.toggleHide\() p
(false) k
(\);) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->clock.toggleHide\() p
(true) k
(\);) p n
(  }) N
() N
(  ) S
(this) K
(->clock.setTime\(newTime\);) p n
(  ) S
(this) K
(->wind.setWindPower\(windForce\);) p n
(  ) S
(this) K
(->teamsHealth.update\(teamsHealthNode\);) p n
(  ) S
(this) K
(->inventory.update\(inventory\);) p n
(}) N
() N
(int) k
( ClientConfiguration::getSightAngle\() p
(void) k
(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->sightAngle;) p n
(}) N
() N
(worm_data_cfg_t ClientConfiguration::getWormDataConfiguration\() S
(void) k
(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->wormDataConfig;) p n
(}) N
() N
(int) k
( ClientConfiguration::getRemoteControlX\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->shooted = ) p
(false) k
(;) p n
(  ) S
(return) K
( ) p
(this) K
(->remoteControlX;) p n
(}) N
() N
(int) k
( ClientConfiguration::getRemoteControlY\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->shooted = ) p
(false) k
(;) p n
(  ) S
(return) K
( ) p
(this) K
(->remoteControlY;) p n
(}) N
() N
(size_t ClientConfiguration::getWormProtagonicId\() S
(void) k
(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->wormProtagonicId;) p n
(}) N
() N
(client_configuration.cpp) (Page 5/5) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CLIENT_CONFIGURATION_H__) p n
(#define) K
( __CLIENT_CONFIGURATION_H__) p n
() N
(#include) K
( <iostream>) p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(clock.h) str
(") p n
(#include) K
( ") p
(inventory_weapons.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(sdl_timer.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(shoot_power.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(teams_health.h) str
(") p n
(#include) K
( ") p
(wind.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(flash_notice.h) str
(") p n
() N
(class ClientConfiguration {) N
(  private:) N
(    worm_data_cfg_t wormDataConfig;) N
(    ) S
(int) k
( weaponsCountdown;) p n
(    ) S
(int) k
( sightAngle;) p n
(    ) S
(int) k
( powerShoot;) p n
(    ) S
(int) k
( remoteControlX;) p n
(    ) S
(int) k
( remoteControlY;) p n
(    bool shooting;) N
(    bool shooted;) N
(    bool beginTurnPlayed;) N
(    size_t wormProtagonicId;) N
(    size_t teamId;) N
(    Timer shootingTimer;) N
(    SoundEffect shootingSound;) N
(    View::ShootPower shootPower;) N
(    View::Clock clock;) N
(    View::WeaponsInventory inventory;) N
(    View::Wind wind;) N
(    View::TeamsHealth teamsHealth;) N
(    SDL_Renderer * renderer;) N
(    FlashNotice notice;) N
() N
(    SoundEffect beginTurn;) N
(    SoundEffect music;) N
() N
(  public:) N
(    ClientConfiguration\(SDL_Renderer *, ) S
(int) k
(, ) p
(int) k
(, ) p
(const) K
( YAML::Node &, size_t\);) p n
(    ~ClientConfiguration\(\);) N
() N
(    ) S
(void) k
( handleEvent\(SDL_Event &\);) p n
() N
(    ) S
(int) k
( getWeaponsCountdown\() p
(void) k
(\) ) p
(const) K
(;) p n
(    bool hasShooted\() S
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(int) k
( getPowerShoot\() p
(void) k
(\);) p n
(    ) S
(void) k
( render\(SDL_Renderer *\);) p n
() N
(    ) S
(// Retorna el weapon_t seleccionado) c n
(    weapon_t getSelectedWeapon\() p
(void) k
(\);) p n
() N
(    ) S
(// Retorna el worm_data_cfg_t configurado) c n
(    worm_data_cfg_t getWormDataConfiguration\() p
(void) k
(\);) p n
() N
(    ) S
(// Retorna el sight_angle configurado) c n
(    ) p
(int) k
( getSightAngle\() p
(void) k
(\);) p n
(client_configuration.h) (Page 1/2) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_configuration.cpp, client_configuration.h) (9/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    ) S
(// Retorna la posicion X/Y del teledirigido) c n
(    ) p
(int) k
( getRemoteControlX\() p
(void) k
(\);) p n
(    ) S
(int) k
( getRemoteControlY\() p
(void) k
(\);) p n
() N
(    ) S
(// Updatea la configuracion que muestra el cliente) c n
(    ) p
(void) k
( update\() p
(const) K
( YAML::Node &, ) p
(const) K
( YAML::Node &\);) p n
() N
(    ) S
(// Devuelve el id del worm protagonico) c n
(    size_t getWormProtagonicId\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(client_configuration.h) (Page 2/2) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <SDL2/SDL_image.h>) p n
(#include) K
( <SDL2/SDL_ttf.h>) p n
(#include) K
( <SDL2/SDL_mixer.h>) p n
(#include) K
( <qt5/QtWidgets/QMessageBox>) p n
(#include) K
( <fstream>) p n
(#include) K
( <string>) p n
(#include) K
( <sstream>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( ") p
(client_game.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(event_sender.h) str
(") p n
(#include) K
( ") p
(model_receiver.h) str
(") p n
(#include) K
( ") p
(window_game.h) str
(") p n
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(socket_error.h) str
(") p n
(#include) K
( ") p
(protocol_error.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(sdl_timer.h) str
(") p n
(#include) K
( ") p
(client_configuration.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(worms_status.h) str
(") p n
(#include) K
( ") p
(projectiles.h) str
(") p n
(#include) K
( ") p
(inventory.h) str
(") p n
(#include) K
( ") p
(client_settings.h) str
(") p n
() N
(#define) K
( TIE_GAME_CODE 0) p n
(#define) K
( CONSTANT_WAIT 100/6) p n
(#define) K
( MAX_QUEUE_MODELS 256) p n
(#define) K
( MAP_RECEIVED_NAME ") p
(/usr/etc/worms/temp/map.tar.gz) str
(") p n
(#define) K
( MAP_YML_PATH ") p
(/usr/etc/worms/temp/map.yml) str
(") p n
() N
(extern) K
( ClientSettings gClientSettings;) p n
() N
(ClientGame::ClientGame\(Protocol * prt, size_t tid\) :) N
(protocol\(prt\),) N
(events\(MAX_QUEUE_MODELS\),) N
(team_id\(tid\) {) N
() S 8 T (std::string map_received_name\(MAP_RECEIVED_NAME\);) N
() S 8 T (std::fstream file_map\(map_received_name, std::fstream::out | std::fstrea) N
(m::binary | std::fstream::trunc\);) N
() S 8 T (std::cout << ") S
(Esperando mapa del sevidor.) str
(" << std::endl;) p n
(    ) S
(this) K
(->protocol->rcvFile\(file_map\);) p n
() S 8 T (std::cout << ") S
(Mapa recibido del servidor.) str
(" << std::endl;) p n
() S 8 T (file_map.close\(\);) N
() S 8 T (std::string cmd_unzip_tar_gz = ") S
(tar -xf ) str
(" + map_received_name + ") p
( -C /usr/etc/w) str n
(orms/temp) S
(";) p n
() S 8 T (std::system\(cmd_unzip_tar_gz.c_str\(\)\);) N
() S 8 T () S
(this) K
(->mapNode = YAML::LoadFile\(MAP_YML_PATH\);) p n
() S 8 T () S
(this) K
(->creator = ) p
(false) k
(;) p n
(}) N
() N
(ClientGame::~ClientGame\() S
(void) k
(\) {) p n
() S 8 T (removeTempFiles\(\);) N
(}) N
() N
(ClientGame::ClientGame\(Protocol * prt, size_t tid, std::string & mp\) :) N
(protocol\(prt\),) N
(events\(MAX_QUEUE_MODELS\),) N
(client_game.cpp) (Page 1/5) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_configuration.h, client_game.cpp) (10/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(team_id\(tid\) {) p n
() S 8 T (std::string cmd_unzip_tar_gz = ") S
(tar -xf ) str
(" + mp + ") p
( -C /usr/etc/worms/temp) str
(";) p n
() S 8 T (std::system\(cmd_unzip_tar_gz.c_str\(\)\);) N
() S 8 T () S
(this) K
(->mapNode = YAML::LoadFile\(MAP_YML_PATH\);) p n
() S 8 T () S
(this) K
(->creator = ) p
(true) k
(;) p n
(}) N
() N
(void) k
( ClientGame::removeTempFiles\() p
(void) k
(\) {) p n
() S 8 T () S
(if) K
( \(!) p
(this) K
(->creator\) {) p n
() S 8 T () S 16 T (std::string map_received_name\(MAP_RECEIVED_NAME\);) N
() S 8 T () S 16 T (std::string cmd_rm_map_yml = ") S
(rm /usr/etc/worms/temp/map.yml /usr/etc/worms/t) str n
(emp/background.png ) S
(" + map_received_name;) p n
() S 8 T () S 16 T (std::system\(cmd_rm_map_yml.c_str\(\)\);) N
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T (std::string cmd_rm_map_yml = ") S
(rm /usr/etc/worms/temp/map.yml /usr/etc/worms/t) str n
(emp/background.png) S
(";) p n
() S 8 T () S 16 T (std::system\(cmd_rm_map_yml.c_str\(\)\);) S 56 T () S 64 T () N
() S 8 T (}) N
(}) N
() N
(void) k
( ClientGame::startGame\() p
(void) k
(\) {) p n
() S 8 T (EventSender event_sender\() S
(this) K
(->protocol, events\);) p n
() S 8 T (YAML::Node staticMap = ) S
(this) K
(->mapNode[") p
(static) str
("];) p n
() S 8 T (YAML::Node dynamicMap = ) S
(this) K
(->mapNode[") p
(dynamic) str
("];) p n
() S 8 T (YAML::Node wormsNode = dynamicMap[") S
(worms_teams) str
("];) p n
() N
() S 8 T (ProtectedDynamics pdynamics\(dynamicMap\);) N
() S 8 T (ModelReceiver model_receiver\() S
(this) K
(->protocol, pdynamics\);) p n
() N
() S 8 T () S
(// Creo la pantalla con dichas cosas est\303\241ticas.) c n
() p 8 T (View::WindowGame mainWindow\(staticMap, gClientSettings.RESOLUTION_WIDTH,) N
( ) N
() S 8 T (gClientSettings.RESOLUTION_HIGH, gClientSettings.FULL_SCREEN\);) N
() S 8 T (SDL_Renderer * renderer = mainWindow.getRenderer\(\);) N
() S 8 T (View::Camera camera\(mainWindow.getScreenWidth\(\), mainWindow.getScreenHei) N
(ght\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (mainWindow.getBgWidth\(\), mainWin) N
(dow.getBgHeight\(\)\);) N
() N
() S 8 T (ClientConfiguration cfg\() N
() S 8 T () S 16 T (renderer, ) N
() S 8 T () S 16 T (mainWindow.getScreenWidth\(\), ) N
() S 8 T () S 16 T (mainWindow.getScreenHeight\(\),) N
() S 8 T () S 16 T (staticMap, ) N
() S 8 T () S 16 T () S
(this) K
(->team_id) p n
() S 8 T (\);) N
() N
(    View::WormsStatus worms\(wormsNode, renderer\);) N
() S 8 T () S
(// Lanzo threads de enviar eventos y de recibir modelos) c n
() p 8 T (event_sender.start\(\);) N
() S 8 T (model_receiver.start\(\);) N
() N
() S 8 T (std::cout << ") S
(Iniciando game loop.) str
(" << std::endl;) p n
(    gameLoop\(camera, mainWindow, renderer, pdynamics, worms, cfg\);) N
() S 8 T (std::cout << ") S
(Fin de game loop.) str
(" << std::endl;) p n
() N
() S 8 T () S
(// Salimos del ciclo del juego, enviamos evento de que nos fuimos.;) c n
() p n
() S 8 T (Event event\(a_quitGame, ) S
(this) K
(->team_id\);) p n
() S 8 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T (usleep\(1000000\);) N
() S 8 T () S
(// Stop y Join de threads) c n
(client_game.cpp) (Page 2/5) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (event_sender.stop\(\);) N
() S 8 T (event_sender.join\(\);) N
() N
() S 8 T (model_receiver.stop\(\);) N
() S 8 T (model_receiver.join\(\);) N
() N
(}) N
() N
(void) k
( ClientGame::gameLoop\(View::Camera & camera, View::WindowGame & mainWindow, ) p n
(SDL_Renderer * renderer, ) N
(ProtectedDynamics & pdynamics, View::WormsStatus & worms, ClientConfiguration & ) N
(cfg\) ) S
(try) K
( {) p n
() S 8 T () S
(bool) k
( quit = ) p
(false) k
(;) p 32 T () N
() S 8 T (SDL_Event e;) N
() S 8 T () S
(int) k
( timeLostSleeping = 0;) p n
() S 8 T () S
(int) k
( ti; ) p n
() S 8 T () S
(int) k
( tf;) p n
() S 8 T () S
(int) k
( updateCount = 0;) p n
() S 8 T () S
(int) k
( renderCount = 0;) p n
() S 8 T () S
(bool) k
( defeated_msg_showed = ) p
(false) k
(;) p n
() N
(    View::Projectiles projectiles;) N
() S 8 T () S
(bool) k
( match_finished = ) p
(false) k
(;) p n
() S 8 T () S
(while) K
( \(!quit && !match_finished\) {) p n
() S 8 T () S 16 T (ti = SDL_GetTicks\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(SDL_PollEvent\(&e\) != 0\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(e.type == SDL_QUIT\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (quit = ) S
(true) k
(;) p n
() S 8 T () S 16 T () S 24 T () N
() S 8 T () S 16 T () S 24 T (cfg.handleEvent\(e\);) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(cfg.hasShooted\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (weapon_t weapon = cfg.getSelectedWeapon\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(weapon != w_air_strike && weapon != w_telepo) p n
(rt\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_shoot, weapon, ) S
(this) K
(->team_) p n
(id, cfg.getWeaponsCountdown\(\), cfg.getPowerShoot\(\), cfg.getSightAngle\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_shoot, weapon, ) S
(this) K
(->team_) p n
(id, cfg.getRemoteControlX\(\) + camera.getX\(\), cfg.getRemoteControlY\(\) + camera.ge) N
(tY\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(e.type == SDL_KEYDOWN\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.key.keysym.sym == SDLK_w\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_pointUp, ) S
(this) K
(->team_id\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.key.keysym.sym == SDLK_s\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_pointDown, ) S
(this) K
(->team_id\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.key.keysym.sym == SDLK_a\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_moveLeft, ) S
(this) K
(->team_id\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.key.keysym.sym == SDLK_d\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_moveRight, ) S
(this) K
(->team_id\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
(client_game.cpp) (Page 3/5) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_game.cpp) (11/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.key.keysym.sym == SDLK_RETURN\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_frontJump, ) S
(this) K
(->team_id\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(e.key.keysym.sym == SDLK_BACKSPACE\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Event event\(a_backJump, ) S
(this) K
(->team_id\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(this) K
(->events.push\(event\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (camera.handleEvent\(e\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (camera.updateCameraPosition\(\);) N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(const) K
( View::Projectil * projectilProtagonic = projectiles.getPro) p n
(jectilProtagonic\(\);) N
() S 8 T () S 16 T () S
(const) K
( View::Worm * protagonicWorm = worms.getWormView\(cfg.getWor) p n
(mProtagonicId\(\)\);) N
() S 8 T () S 16 T () S
(const) K
( View::Worm * wormAffectedByExplosion = worms.getWormAffect) p n
(edByExplosion\(\);) N
() S 8 T () S 16 T () S
(if) K
( \(wormAffectedByExplosion\) {) p n
() S 8 T () S 16 T () S 24 T (camera.focus\(*wormAffectedByExplosion\);) N
() S 8 T () S 16 T (}) S
(else) K
( ) p
(if) K
( \(projectilProtagonic\) {) p n
() S 8 T () S 16 T () S 24 T (camera.focus\(*projectilProtagonic\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(protagonicWorm\) {) p n
() S 8 T () S 16 T () S 24 T (camera.focus\(*protagonicWorm\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (SDL_SetRenderDrawColor\(renderer, 0x00, 0x00, 0x00, 0x00\);) N
() S 8 T () S 16 T (SDL_RenderClear\(renderer\);) N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// Dibujamos cosas est\303\241ticas) c n
() p 8 T () S 16 T (mainWindow.render\(camera\);) N
() N
() S 8 T () S 16 T () S
(// Procesamiento de los snapshoots) c n
() p 8 T () S 16 T () S
(bool) k
( thereIsModel = pdynamics.popModel\(\);) p n
() S 8 T () S 16 T () S
(while) K
( \(thereIsModel\) {) p n
() S 8 T () S 16 T () S 24 T (updateCount++;) N
() S 8 T () S 16 T () S 24 T (worms.update\(pdynamics.getWorms\(\)\);) N
() S 8 T () S 16 T () S 24 T (worms.updateWormProtagonic\(pdynamics.getWormProtagonicId) N
(\(\)\);) N
() S 8 T () S 16 T () S 24 T (projectiles.update\(renderer, pdynamics.getProjectiles\(\)\)) N
(;) N
() S 8 T () S 16 T () S 24 T (thereIsModel = pdynamics.popModel\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (match_finished  = pdynamics.finishedMatch\(\);) N
() S 8 T () S 16 T () S
(if) K
( \(match_finished\) {) p n
() S 8 T () S 16 T () S 24 T (size_t team_winner = pdynamics.getWinnerTeam\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(team_winner == ) p
(this) K
(->team_id\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (QMessageBox msgBox;) N
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setWindowTitle\(") S
(Ganaste.) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setText\(") S
(Sos el rey de los gusanos!) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.exec\(\);) S 48 T () S 56 T () S 64 T () S 72 T () N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(team_winner == TIE_GAME_CODE\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (QMessageBox msgBox;) N
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setWindowTitle\(") S
(Empate.) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setText\(") S
(Fue una partida muy re\303\261ida!) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.exec\(\);) S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (QMessageBox msgBox;) N
(client_game.cpp) (Page 4/5) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T (msgBox.setWindowTitle\(") S
(Partida terminada.) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setText\(") S
(Termin\303\263 la partida. Una pena que hayas perdi) str n
(do.) S
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.exec\(\);) S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(return) K
(;) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (renderCount++;) N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(if) K
( \(pdynamics.hasGameStatus\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (cfg.update\(pdynamics.getGameStatus\(\), pdynamics.getTeamI) N
(nventory\() S
(this) K
(->team_id\)\);) p n
() S 8 T () S 16 T () S 24 T (worms.updateWormsClientConfiguration\(cfg\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(!defeated_msg_showed && pdynamics.teamDefeated\() p
(this) K
(-) p n
(>team_id\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (QMessageBox msgBox;) N
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setWindowTitle\(") S
(Perdiste.) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.setText\(") S
(Tu equipo ha perdido. \302\241M\303\241s suerte la pr\303\263xi) str n
(ma!) S
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (msgBox.exec\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (defeated_msg_showed = ) S
(true) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// Dibujamos cosas din\303\241micas) c n
() p 8 T () S 16 T () S
(// Gusanos) c n
() p 8 T () S 16 T (worms.render\(renderer, camera\);) N
() N
() S 8 T () S 16 T () S
(// Proyectiles) c n
() p 8 T () S 16 T (projectiles.render\(renderer, camera\);) N
() N
() S 8 T () S 16 T () S
(// El agua va sobre todo menos el inventario) c n
() p 8 T () S 16 T (mainWindow.renderWater\(camera\);) N
() N
() S 8 T () S 16 T () S
(// Dibujamos los objetos propios del cliente) c n
() p 8 T () S 16 T (cfg.render\(renderer\);) N
() N
() S 8 T () S 16 T (SDL_RenderPresent\(renderer\);) N
() S 8 T () S 16 T (tf = SDL_GetTicks\(\);) N
() N
() S 8 T () S 16 T () S
(int) k
( to_sleep = CONSTANT_WAIT - \(tf-ti\) - timeLostSleeping;) p n
() S 8 T () S 16 T () S
(if) K
( \(to_sleep < 0\) {) p n
() S 8 T () S 16 T () S 24 T (timeLostSleeping = 0;) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (SDL_Delay\(to_sleep\);) N
() S 8 T () S 16 T () S 24 T (timeLostSleeping = SDL_GetTicks\(\) - \(tf + to_sleep\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(} ) S
(catch) K
(\() p
(const) K
( SocketError & e\) {) p n
() S 8 T (std::cout << e.what\(\) << std::endl;) N
(} ) S
(catch) K
(\() p
(const) K
( std::exception & e\) {) p n
() S 8 T () S 16 T (std::cout << e.what\(\) << std::endl;) N
(}) S
(client_game.cpp) (Page 5/5) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_game.cpp) (12/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CLIENT_GAME_H__) p n
(#define) K
( __CLIENT_GAME_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <SDL2/SDL_image.h>) p n
(#include) K
( <SDL2/SDL_ttf.h>) p n
(#include) K
( <SDL2/SDL_mixer.h>) p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(event_sender.h) str
(") p n
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( ") p
(window_game.h) str
(") p n
(#include) K
( ") p
(worms_status.h) str
(") p n
(#include) K
( ") p
(protected_dynamics.h) str
(") p n
(#include) K
( <string>) p n
() N
(class ClientGame {) N
(    private:) N
(        Protocol * protocol;) N
(        Queue<Event> events;) N
(        size_t team_id;) N
(        YAML::Node mapNode;) N
(        bool creator;) N
() N
(        ) S
(void) k
( removeTempFiles\() p
(void) k
(\);) p n
() N
(    public:) N
(        ClientGame\(Protocol *, size_t, std::string &\);) N
(        ClientGame\(Protocol *, size_t\);) N
(        ~ClientGame\() S
(void) k
(\);) p n
(        ) S
(void) k
( startGame\() p
(void) k
(\);) p n
(        ) S
(void) k
( gameLoop\(View::Camera &, View::WindowGame &, SDL_Renderer *, Protec) p n
(tedDynamics &, View::WormsStatus &, ClientConfiguration &\);) N
(};) N
() N
(#endif) K
(client_game.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <sstream>) p n
(#include) K
( <fstream>) p n
(#include) K
( <QtGui/QCloseEvent>) p n
(#include) K
( <qt5/QtWidgets/QMessageBox>) p n
(#include) K
( <QFileDialog>) p n
(#include) K
( <QTableWidget>) p n
(#include) K
( ") p
(QStackedWidget) str
(") p n
(#include) K
( ") p
(client_lobby.h) str
(") p n
(#include) K
( ") p
(ui_clientlobby.h) str
(") p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(socket_error.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(waiting_match.h) str
(") p n
(#include) K
( ") p
(client_game.h) str
(") p n
(#include) K
( ") p
(client_settings.h) str
(") p n
() N
(#define) K
( PAGE_CONNECTION_INDEX 0) p n
(#define) K
( PAGE_LOBBY_INDEX 1) p n
(#define) K
( PAGE_MATCH_CREATE 2) p n
(#define) K
( PAGE_WAITING_MATCH_INDEX 3) p n
(#define) K
( PAGE_JOINED_WAITING_MATCH_INDEX 4) p n
() N
(extern) K
( ClientSettings gClientSettings;) p n
() N
(ClientLobby::ClientLobby\(QWidget *parent\) :) N
(    QMainWindow\(parent\),) N
(    ui\() S
(new) K
( Ui::ClientLobby\)) p n
({) N
(    ui->setupUi\() S
(this) K
(\);) p n
(    connectEvents\(\);) N
(    ) S
(this) K
(->pages = findChild<QStackedWidget*>\(WIDGET_PAGES\);) p n
(    ) S
(this) K
(->pages->setCurrentIndex\(PAGE_CONNECTION_INDEX\);) p n
(    ) S
(this) K
(->protocol = nullptr;) p n
(    ) S
(this) K
(->waiting_match = nullptr;) p n
(}) N
() N
(ClientLobby::~ClientLobby\(\)) N
({) N
(    cleanLobby\(\);) N
(    ) S
(if) K
( \() p
(this) K
(->protocol != nullptr\) {) p n
(        ) S
(delete) K
( ) p
(this) K
(->protocol;) p n
(    }) N
(    ) S
(delete) K
( ui;) p n
(}) N
() N
(void) k
( ClientLobby::connectEvents\() p
(void) k
(\) {) p n
(    QPushButton* cleanTextBoxes = findChild<QPushButton*>\(WIDGET_BUTTON_CLEAN_LO) N
(GIN\);) N
(    QObject::connect\(cleanTextBoxes, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::cleanTextBoxes\);) p n
() N
(    QPushButton* connectButton = findChild<QPushButton*>\(WIDGET_BUTTON_CONNECT_L) N
(OGIN\);) N
(    QObject::connect\(connectButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::connectToServer\);) p n
() N
(    QPushButton* createButton = findChild<QPushButton*>\(WIDGET_BUTTON_CREATE_GAM) N
(E\);) N
(    QObject::connect\(createButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::createMatch\);) p n
(client_lobby.cpp) (Page 1/8) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_game.h, client_lobby.cpp) (13/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    QPushButton* exitLobbyButton = findChild<QPushButton*>\(WIDGET_BUTTON_EXIT_LO) N
(BBY\);) N
(    QObject::connect\(exitLobbyButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::exitLobby\);) p n
() N
(    QPushButton* joinButton = findChild<QPushButton*>\(WIDGET_BUTTON_JOIN_GAME\);) N
(    QObject::connect\(joinButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::joinMatch\);) p n
() N
(    QPushButton* refreshButton = findChild<QPushButton*>\(WIDGET_BUTTON_REFRESH_L) N
(OBBY\);) N
(    QObject::connect\(refreshButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::refreshLobby\);) p n
() N
(    QPushButton* createGameButton = findChild<QPushButton*>\(WIDGET_BUTTON_START_) N
(WAITING_MATCH\);) N
(    QObject::connect\(createGameButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::waitForPlayersOnCreatedMatch\);) p n
() N
(    QPushButton* backLobbyButton = findChild<QPushButton*>\(WIDGET_BUTTON_BACK_TO) N
(_LOBBY\);) N
(    QObject::connect\(backLobbyButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::backLobby\);) p n
() N
(    QPushButton* chooseMapsFolderButton = findChild<QPushButton*>\(WIDGET_BUTTON_) N
(CHOOSE_MAP\);) N
(    QObject::connect\(chooseMapsFolderButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::chooseMap\);) p n
() N
(    QPushButton* refreshWaitingPlayersButton = findChild<QPushButton*>\(WIDGET_BU) N
(TTON_REFRESH_WAITING_PLAYERS\);) N
(    QObject::connect\(refreshWaitingPlayersButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::feedWaitingPlayers\);;) p n
() N
(    QPushButton* startWaitingMatchButton = findChild<QPushButton*>\(WIDGET_BUTTON) N
(_START_MATCH\);) N
(    QObject::connect\(startWaitingMatchButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::startWaitingMatch\);) p n
() N
(    QPushButton* cancelWaitingMatchButton = findChild<QPushButton*>\(WIDGET_BUTTO) N
(N_CANCEL_WAITING_MATCH\);) N
(    QObject::connect\(cancelWaitingMatchButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::cancelWaitingMatch\);) p n
() N
(    QPushButton* exitWaitingMatchButton = findChild<QPushButton*>\(WIDGET_BUTTON_) N
(EXIT_WAITING_MATCH\);) N
(    QObject::connect\(exitWaitingMatchButton, &QPushButton::clicked,) N
(                     ) S
(this) K
(, &ClientLobby::exitWaitingMatch\);) p n
(}) N
() N
(void) k
( ClientLobby::cleanTextBoxes\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Clear Text." << std::endl; */) c n
(    QLineEdit* playerNameText = findChild<QLineEdit*>\(WIDGET_TEXT_PLAYER_NAME\);) p n
(    playerNameText->clear\(\);) N
(    QLineEdit* ipText = findChild<QLineEdit*>\(WIDGET_TEXT_IP\);) N
(    ipText->clear\(\);) N
(    QLineEdit* portText = findChild<QLineEdit*>\(WIDGET_TEXT_PORT\);) N
(    portText->clear\(\);) N
(}) N
() N
(void) k
( ClientLobby::connectToServer\() p
(void) k
(\) {) p n
(client_lobby.cpp) (Page 2/8) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    QLineEdit* ipText = findChild<QLineEdit*>\(WIDGET_TEXT_IP\);) p n
(    QLineEdit* portText = findChild<QLineEdit*>\(WIDGET_TEXT_PORT\);) N
(    QLineEdit* pnameText = findChild<QLineEdit*>\(WIDGET_TEXT_PLAYER_NAME\);) N
(    ) S
(if) K
( \(ipText->text\(\).isEmpty\(\) || portText->text\(\).isEmpty\(\) || pnameText->tex) p n
(t\(\).isEmpty\(\)\) {) N
(        ) S
(return) K
(;) p n
(    }) N
(    std::string ip = ipText->displayText\(\).toUtf8\(\).constData\(\);) N
(    std::string port = portText->displayText\(\).toUtf8\(\).constData\(\);) N
(    ) S
(this) K
(->player_name = pnameText->displayText\(\).toUtf8\(\).constData\(\);) p n
(    ) S
(/* std::cout << "El usuario intenta conectarse a " << ip << ":" << port << s) c n
(td::endl; */) N
() p n
(    ) S
(try) K
( {) p n
(        SocketConnection skt\(ip, port\);) N
(        ) S
(this) K
(->protocol = ) p
(new) K
( Protocol\(std::move\(skt\)\);) p n
(        ) S
(/* std::cout << "Socket creado para conexi\303\263n con servidor " << skt.sock) c n
(fd << std::endl; */) N
(    } ) p
(catch) K
( \() p
(const) K
( SocketError & e\) {) p n
(        std::cout << e.what\(\) << std::endl;) N
(        QMessageBox msgBox;) N
(        msgBox.setWindowTitle\(") S
(Error de conexi\303\263n.) str
("\);) p n
(        msgBox.setText\(") S
(No se pudo conectar con el servidor. Por favor, chequee ip y puerto.) str
("\);) p n
(        msgBox.exec\(\);) N
(        ) S
(return) K
(;) p n
(    }) N
(    ) S
(/* std::cout << "Conexion con servidor establecida" << std::endl; */) c n
() p n
(    goLobby\(\);) N
(}) N
() N
(void) k
( ClientLobby::goLobby\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->protocol->sendName\() p
(this) K
(->player_name\);) p n
(    ) S
(// Recibe el nuevo nombre \(si hubo colisi\303\263n\) que le asigna el servidor.) c n
(    ) p
(this) K
(->protocol->getPlayerName\() p
(this) K
(->player_name\);) p n
(    ) S
(/* std::cout << "El servidor me bautiz\303\263 como: " << this->player_name << std) c n
(::endl; */) N
(    QLabel* playerName = findChild<QLabel*>\(WIDGET_TEXT_PLAYER_NAME_LOBBY\);) p n
(    playerName->setText\() S
(this) K
(->player_name.c_str\(\)\);) p n
() N
(    ) S
(this) K
(->pages->setCurrentIndex\(PAGE_LOBBY_INDEX\);) p n
() N
(    feedLobby\(\);) N
(}) N
() N
(void) k
( ClientLobby::createMatch\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->pages->setCurrentIndex\(PAGE_MATCH_CREATE\);) p n
(}) N
() N
(void) k
( ClientLobby::exitLobby\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Me voy del lobby" << std::endl; */) c n
(    cleanLobby\(\);) p n
(    ) S
(this) K
(->pages->setCurrentIndex\(PAGE_CONNECTION_INDEX\);) p n
(    Event new_event\(a_quitLobby, 1\);) N
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    ) S
(delete) K
( ) p
(this) K
(->protocol;) p n
(    ) S
(this) K
(->protocol = nullptr;) p n
(}) N
() N
(void) k
( ClientLobby::joinMatch\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Me uno a una partida!" << std::endl; */) c n
(    QTableWidget * matchsList = findChild<QTableWidget*>\(WIDGET_GAMES_TABLE\);) p n
(client_lobby.cpp) (Page 3/8) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_lobby.cpp) (14/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(int) k
( index_selected = matchsList->selectionModel\(\)->currentIndex\(\).row\(\);) p n
() N
(    ) S
(if) K
( \(index_selected < 0\) {) p n
(        QMessageBox msgBox;) N
(        msgBox.setWindowTitle\(") S
(Seleccione una partida.) str
("\);) p n
(        msgBox.setText\(") S
(Por favor, seleccione una partida de la lista.) str
("\);) p n
(        msgBox.exec\(\);) N
(        ) S
(return) K
(;) p n
(    }) N
() N
(    std::string match_creator_name;) N
(    match_creator_name = matchsList->item\(index_selected,1\)->text\(\).toUtf8\(\).con) N
(stData\(\);) N
(   ) S
(/*  std::cout << "El creador de la partida a joinearse es: " << match_creator) c n
(_name << std::endl; */) N
() p n
(    Event new_event\(a_joinWaitingMatch, match_creator_name\);) N
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    ) N
(    YAML::Node join_match_response;) N
(    ) S
(this) K
(->protocol->rcvMsg\(join_match_response\);) p n
(    ) S
(if) K
( \(join_match_response[") p
(code) str
("].as<) p
(int) k
(>\(\) == 0\) {) p n
(        refreshLobby\(\);) N
(        ) S
(/* std::cout << "La partida esta llena, no se puede acceder." << std::en) c n
(dl; */) N
(        std::string msg = join_match_response[") p
(msg) str
("].as<std::string>\(\);) p n
(        QMessageBox msgBox;) N
(        msgBox.setWindowTitle\(") S
(No se puede unir a partida:) str
("\);) p n
(        msgBox.setText\(msg.c_str\(\)\);) N
(        msgBox.exec\(\);) N
(        ) S
(return) K
(;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(join_match_response[") p
(code) str
("].as<) p
(int) k
(>\(\) == 1\) {) p n
(        ) S
(/* std::cout << "Hay lugar en la partida, accediendo!." << std::endl; */) c n
(        ) p
(this) K
(->pages->setCurrentIndex\(PAGE_JOINED_WAITING_MATCH_INDEX\);) p n
(        QLabel* gameCreator = findChild<QLabel*>\(WIDGET_TEXT_GAME_CREATOR\);) N
(        gameCreator->setText\(match_creator_name.c_str\(\)\);) N
() N
(        ) S
(this) K
(->waiting_match = ) p
(new) K
( WaitingMatch\() p
(this) K
(->protocol, ) p
(this) K
(->pages\);) p n
(        ) S
(this) K
(->waiting_match->start\(\);) p n
() N
(    }) N
(}) N
() N
(void) k
( ClientLobby::refreshLobby\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Refresh del lobby" << std::endl; */) c n
(    cleanLobby\(\);) p n
(    ) S
(/* std::cout << "Lobby limpiado" << std::endl; */) c n
(    Event new_event\(a_refreshLobby, 1\);) p n
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    feedLobby\(\);) N
(}) N
() N
(void) k
( ClientLobby::waitForPlayersOnCreatedMatch\() p
(void) k
(\) {) p n
(    QLineEdit * matchName = findChild<QLineEdit*>\(WIDGET_TEXT_GAME_NAME\);) N
(    std::string matchNameStr = matchName->text\(\).toUtf8\(\).constData\(\);) N
() N
(    ) S
(if) K
( \(matchName->text\(\).isEmpty\(\)\) {) p n
(        QMessageBox msgBox;) N
(        msgBox.setWindowTitle\(") S
(Partida inv\303\241lida.) str
("\);) p n
(        msgBox.setText\(") S
(Por favor, ingrese un nombre a la partida.) str
("\);) p n
(        msgBox.exec\(\);) N
(        ) S
(return) K
(;) p n
(client_lobby.cpp) (Page 4/8) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    }) p n
() N
(    ) S
(if) K
( \() p
(this) K
(->map_game_path.size\(\) <= 0\) {) p n
(        QMessageBox msgBox;) N
(        msgBox.setWindowTitle\(") S
(Partida inv\303\241lida.) str
("\);) p n
(        msgBox.setText\(") S
(Por favor, seleccione un mapa de la lista.) str
("\);) p n
(        msgBox.exec\(\);) N
(        ) S
(return) K
(;  ) p n
(    }) N
() N
(    ) S
(/* std::cout << "Lanzo una partida en espera!" << std::endl; */) c n
(    ) p
(this) K
(->pages->setCurrentIndex\(PAGE_WAITING_MATCH_INDEX\);) p n
(    Event new_event\(a_createMatch, matchNameStr, ) S
(this) K
(->map_players_qty\);) p n
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(}) N
() N
(void) k
( ClientLobby::backLobby\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->pages->setCurrentIndex\(PAGE_LOBBY_INDEX\);) p n
(    QLabel* currentMapPath = findChild<QLabel*>\(WIDGET_TEXT_CHOOSED_MAP\);) N
(    currentMapPath->setText\(") S
(Not selected. Please, choose a map!) str
("\);) p n
(    ) S
(this) K
(->map_game_path.clear\(\);) p n
(    refreshLobby\(\);) N
(}) N
() N
(void) k
( ClientLobby::cleanLobby\() p
(void) k
(\) {) p n
(    QTableWidget * matchsList = findChild<QTableWidget*>\(WIDGET_GAMES_TABLE\);) N
(    ) S
(while) K
( \(matchsList->rowCount\(\) > 0\) {) p n
(        matchsList->removeRow\(0\);) N
(    }) N
(}) N
() N
(void) k
( ClientLobby::feedLobby\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Alimentando lobby!" << std::endl; */) c n
(    QTableWidget * matchsList = findChild<QTableWidget*>\(WIDGET_GAMES_TABLE\);) p n
(    YAML::Node gameStatus;) N
(    ) S
(this) K
(->protocol->rcvGameStatus\(gameStatus\);) p n
() N
(    std::stringstream ss;) N
(    ss << gameStatus;) N
(    std::cout << ss.str\(\) << std::endl;) N
() N
() N
() N
(    YAML::Node::const_iterator it;) N
(    ) S
(for) K
( \(it = gameStatus[") p
(waiting_games) str
("].begin\(\); it != gameStatus[") p
(waiting_games) str
("].) p n
(end\(\); it++\) {) N
() N
(        matchsList->insertRow\(matchsList->rowCount\(\)\);) N
() N
(        QTableWidgetItem * table_game_name = ) S
(new) K
( QTableWidgetItem\(\(*it\)[") p
(match_na) str n
(me) S
("].as<std::string>\(\).c_str\(\)\);) p n
(        table_game_name->setFlags\(table_game_name->flags\(\) ^ Qt::ItemIsEditable\)) N
(;) N
(        matchsList->setItem\(matchsList->rowCount\(\)-1, 0, table_game_name\);) N
() N
(        QTableWidgetItem * table_game_creator = ) S
(new) K
( QTableWidgetItem\(\(*it\)[") p
(creat) str n
(or) S
("].as<std::string>\(\).c_str\(\)\);) p n
(        table_game_creator->setFlags\(table_game_creator->flags\(\) ^ Qt::ItemIsEdi) N
(table\);) N
(        matchsList->setItem\(matchsList->rowCount\(\)-1, 1, table_game_creator\);) N
(        ) N
(        QTableWidgetItem * table_actual_players = ) S
(new) K
( QTableWidgetItem\(\(*it\)[") p
(joi) str n
(client_lobby.cpp) (Page 5/8) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_lobby.cpp) (15/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (6-7) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(ned_players) str
("].as<std::string>\(\).c_str\(\)\);) p n
(        table_actual_players->setFlags\(table_actual_players->flags\(\) ^ Qt::ItemI) N
(sEditable\);) N
(        matchsList->setItem\(matchsList->rowCount\(\)-1, 2, table_actual_players\);) N
() N
(        QTableWidgetItem * table_max_players = ) S
(new) K
( QTableWidgetItem\(\(*it\)[") p
(require) str n
(d_players) S
("].as<std::string>\(\).c_str\(\)\);) p n
(        table_max_players->setFlags\(table_max_players->flags\(\) ^ Qt::ItemIsEdita) N
(ble\);) N
(        matchsList->setItem\(matchsList->rowCount\(\)-1, 3, table_max_players\);) N
(    }) N
(}) N
() N
(void) k
( ClientLobby::chooseMap\() p
(void) k
(\) {) p n
(    QString map_path;) N
(    map_path = QFileDialog::getOpenFileName\() S
(this) K
(, tr\(") p
(Choose a map) str
("\), ") p
(/usr/etc/worms/) str n
(maps) S
(", tr\(") p
(Tar gzipped \(*.tar.gz\)) str
("\)\);) p n
(    ) S
(if) K
( \(map_path.length\(\) > 0\) {) p n
(        ) S
(this) K
(->map_game_path = map_path.toUtf8\(\).constData\(\);) p n
(        ) S
(/* std::cout << "El mapa elegido es " << this->map_game_path << std::end) c n
(l; */) N
(        QLabel* currentMapPath = findChild<QLabel*>\(WIDGET_TEXT_CHOOSED_MAP\);) p n
(        currentMapPath->setText\() S
(this) K
(->map_game_path.c_str\(\)\);) p n
(        std::string cmd_mkdir = ") S
(mkdir temp_map_folder) str
(";) p n
(        std::string cmd_unzip = ") S
(tar -xvf \\") str
(" +  ) p
(this) K
(->map_game_path + ") p
(\\" -C ./temp_map) str n
(_folder/) S
(";) p n
(        std::system\(cmd_mkdir.c_str\(\)\);) N
(        std::system\(cmd_unzip.c_str\(\)\);) N
(        YAML::Node mapNode = YAML::LoadFile\(") S
(temp_map_folder/map.yml) str
("\);) p n
(        ) S
(this) K
(->map_players_qty = mapNode[") p
(dynamic) str
("][") p
(worms_teams) str
("].size\(\);) p n
(        std::string cmd_rm_temp_dir = ") S
(rm -fr ./temp_map_folder) str
(";) p n
(        std::system\(cmd_rm_temp_dir.c_str\(\)\);) N
(    } ) S
(else) K
( {) p n
(        ) S
(/* std::cout << "No se eligio un mapa." << std::endl; */) c n
(    }) p n
(}) N
() N
(void) k
( ClientLobby::feedWaitingPlayers\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Alimento la lista de jugadores en espera." << std::endl; */) c n
(    Event new_event\(a_refreshWaitingList\);) p n
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    YAML::Node waiting_players_list;) N
(    ) S
(this) K
(->protocol->rcvMsg\(waiting_players_list\);) p n
() N
(    std::stringstream ss;) N
(    ss << waiting_players_list;) N
(    std::cout << ss.str\(\) << std::endl;) N
() N
(    QListWidget * waitingPlayersList = findChild<QListWidget*>\(WIDGET_LIST_WAITI) N
(NG_PLAYERS\);) N
() N
(    waitingPlayersList->clear\(\);) N
() N
(    YAML::Node::const_iterator it;) N
(    ) S
(for) K
( \(it = waiting_players_list[") p
(waiting_players) str
("].begin\(\); it != waiting_players) p n
(_list[") S
(waiting_players) str
("].end\(\); it++\) {) p n
(        std::string waiting_player_name = \(*it\).as<std::string>\(\);) N
(        ) S
(if) K
( \(waiting_player_name == ) p
(this) K
(->player_name\) ) p
(continue) K
(;) p n
() N
(        QListWidgetItem * new_list_widget = ) S
(new) K
( QListWidgetItem;) p n
(        new_list_widget->setText\(tr\(waiting_player_name.c_str\(\)\)\);) N
(        waitingPlayersList->insertItem\(1, new_list_widget\);    ) N
(client_lobby.cpp) (Page 6/8) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    }) N
(}) N
() N
(void) k
( ClientLobby::startWaitingMatch\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Comienzo juego" << std::endl; */) c n
(    Event new_event\(a_startMatch\);) p n
(    YAML::Node response;) N
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    ) S
(/* std::cout << "Esperando respuesta del server..." << std::endl; */) c n
(    ) p
(this) K
(->protocol->rcvMsg\(response\);) p n
(    ) S
(/* std::cout << "Respuesta del server recibida." << std::endl; */) c n
() p n
(    ) S
(if) K
( \(response[") p
(code) str
("].as<) p
(int) k
(>\(\) == 1\) {) p n
(        ) S
(/* std::cout << "El servidor me dio el OK para iniciar la partida."; */) c n
(        size_t team_id = response[") p
(team_id) str
("].as<size_t>\(\);) p n
(        ) S
(/* std::cout << "Me asign\303\263 el team id " << team_id << std::endl; */) c n
(        std::fstream map_file\() p
(this) K
(->map_game_path, std::fstream::in | std::fstre) p n
(am::binary\);) N
(        ) S
(this) K
(->protocol->sendFile\(map_file\);) p n
(        map_file.close\(\);) N
(        ) S
(/* std::cout << "Aca instancio un juego cliente y lo lanzo pasandole el ) c n
(protocolo." << std::endl; */) N
(        ClientGame the_game\() p
(this) K
(->protocol, team_id, ) p
(this) K
(->map_game_path\);) p n
(        the_game.startGame\(\);) N
(        backLobby\(\);) N
(    } ) S
(else) K
( {) p n
(        ) S
(/* std::cout << "La partida no puede comenzar" << std::endl; */) c n
(        feedWaitingPlayers\(\);) p n
(        QMessageBox msgBox;) N
(        msgBox.setWindowTitle\(") S
(No se puede iniciar partida.) str
("\);) p n
(        std::string msg_response = response[") S
(msg) str
("].as<std::string>\(\);) p n
(        msgBox.setText\(msg_response.c_str\(\)\);) N
(        msgBox.exec\(\);) N
(    }) N
(}) N
() N
(// Invocada cuando el CREADOR de una partida en espera cancela dicha partida...) c n
(void) k
( ClientLobby::cancelWaitingMatch\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Cancelo juego en espera." << std::endl; */) c n
(    Event new_event\(a_rmWaitingMatch\);) p n
(    ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    backLobby\(\);) N
(}) N
() N
(// Invocada cuando un participante no-creador de una partida en espera se va de ) c n
(dicha partida en espera) N
(void) k
( ClientLobby::exitWaitingMatch\() p
(void) k
(\) {) p n
(    ) S
(/* std::cout << "Me voy de una waiting match siendo un invitado." << std::en) c n
(dl; */) N
(    ) p
(if) K
( \() p
(this) K
(->waiting_match->isRunning\(\)\) {) p n
(        Event new_event\(a_exitWaitingMatch\);) N
(        ) S
(this) K
(->protocol->sendEvent\(new_event\);) p n
(    }) N
(    ) S
(this) K
(->waiting_match->stop\(\);) p n
(    ) S
(this) K
(->waiting_match->join\(\);) p n
(    ) S
(delete) K
( ) p
(this) K
(->waiting_match;) p n
(    ) S
(this) K
(->waiting_match = nullptr;) p n
(    backLobby\(\);) N
(}) N
() N
(void) k
( ClientLobby::closeEvent\(QCloseEvent * event\) {) p n
(client_lobby.cpp) (Page 7/8) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_lobby.cpp) (16/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (8,1) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(if) K
( \() p
(this) K
(->waiting_match\) {) p n
(        exitWaitingMatch\(\);) N
(    }) N
(    ) S
(if) K
( \() p
(this) K
(->protocol\) {) p n
(        exitLobby\(\);) N
(    }) N
(    std::cout << ") S
(Cerrando cliente.) str
(" << std::endl;) p n
(}) S
(client_lobby.cpp) (Page 8/8) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( CLIENT_LOBBY_H) p n
(#define) K
( CLIENT_LOBBY_H) p n
() N
(#include) K
( <QMainWindow>) p n
(#include) K
( <QListWidgetItem>) p n
(#include) K
( <QtGui/QCloseEvent>) p n
(#include) K
( ") p
(QStackedWidget) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(waiting_match.h) str
(") p n
() N
(#define) K
( WIDGET_PAGES ") p
(pages_client) str
(") p n
(#define) K
( WIDGET_BUTTON_CLEAN_LOGIN ") p
(button_clean) str
(") p n
(#define) K
( WIDGET_BUTTON_CONNECT_LOGIN ") p
(button_connect) str
(") p n
(#define) K
( WIDGET_BUTTON_CREATE_GAME ") p
(button_create) str
(") p n
(#define) K
( WIDGET_BUTTON_EXIT_LOBBY ") p
(button_exit_lobby) str
(") p n
(#define) K
( WIDGET_BUTTON_JOIN_GAME ") p
(button_join) str
(") p n
(#define) K
( WIDGET_BUTTON_REFRESH_LOBBY ") p
(button_refresh) str
(") p n
(#define) K
( WIDGET_BUTTON_START_WAITING_MATCH ") p
(button_start) str
(") p n
(#define) K
( WIDGET_BUTTON_BACK_TO_LOBBY ") p
(button_back_lobby) str
(") p n
(#define) K
( WIDGET_BUTTON_CHOOSE_MAP ") p
(button_changue_maps_folder) str
(") p n
(#define) K
( WIDGET_BUTTON_REFRESH_WAITING_PLAYERS ") p
(button_refresh_waiting_players) str
(") p n
(#define) K
( WIDGET_BUTTON_START_MATCH ") p
(button_start_waiting_match) str
(") p n
(#define) K
( WIDGET_BUTTON_CANCEL_WAITING_MATCH ") p
(button_cancel_waiting_match) str
(") p n
(#define) K
( WIDGET_BUTTON_EXIT_WAITING_MATCH ") p
(button_exit_waiting_match) str
(") p n
() N
(#define) K
( WIDGET_TEXT_PLAYER_NAME ") p
(text_player_name) str
(") p n
(#define) K
( WIDGET_TEXT_IP ") p
(text_ip) str
(") p n
(#define) K
( WIDGET_TEXT_PORT ") p
(text_port) str
(") p n
(#define) K
( WIDGET_TEXT_PLAYER_NAME_LOBBY ") p
(playerName) str
(") p n
(#define) K
( WIDGET_TEXT_GAME_CREATOR ") p
(text_game_creator) str
(") p n
(#define) K
( WIDGET_TEXT_GAME_NAME ") p
(text_game_name) str
(") p n
(#define) K
( WIDGET_TEXT_CHOOSED_MAP ") p
(text_current_map_path) str
(") p n
() N
(#define) K
( WIDGET_LIST_WAITING_PLAYERS ") p
(list_waiting_players) str
(") p n
() N
(#define) K
( WIDGET_GAMES_TABLE ") p
(table_matchs) str
(") p n
() N
() N
(namespace Ui {) N
(class ClientLobby;) N
(}) N
() N
(class ClientLobby : public QMainWindow) N
({) N
(    Q_OBJECT) N
() N
(public:) N
(    explicit ClientLobby\(QWidget *parent = 0\);) N
(    ~ClientLobby\(\);) N
() N
(private:) N
(    Ui::ClientLobby *ui;) N
(    Protocol * protocol;) N
(    std::string player_name;) N
(    QList<QListWidgetItem*> lobby_games;) N
(    QStackedWidget * pages;) N
(    WaitingMatch * waiting_match;) N
() N
(    std::string map_game_path;) N
(    ) S
(int) k
( map_players_qty;) p n
() N
(    ) S
(void) k
( connectEvents\() p
(void) k
(\);) p n
(client_lobby.h) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_lobby.cpp, client_lobby.h) (17/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(void) k
( cleanTextBoxes\() p
(void) k
(\);) p n
(    ) S
(void) k
( connectToServer\() p
(void) k
(\);) p n
(    ) S
(void) k
( hideConnectionWindow\() p
(void) k
(\);) p n
(    ) S
(void) k
( showConnectionWindow\() p
(void) k
(\);) p n
(    ) S
(void) k
( goLobby\() p
(void) k
(\);) p n
(    ) S
(void) k
( createMatch\() p
(void) k
(\);) p n
(    ) S
(void) k
( exitLobby\() p
(void) k
(\);) p n
(    ) S
(void) k
( joinMatch\() p
(void) k
(\);) p n
(    ) S
(void) k
( refreshLobby\() p
(void) k
(\);) p n
(    ) S
(void) k
( feedLobby\() p
(void) k
(\);) p n
(    ) S
(void) k
( cleanLobby\() p
(void) k
(\);) p n
(    ) S
(void) k
( waitForPlayersOnCreatedMatch\() p
(void) k
(\);) p n
(    ) S
(void) k
( backLobby\() p
(void) k
(\);) p n
(    ) S
(void) k
( chooseMap\() p
(void) k
(\);) p n
(    ) S
(void) k
( feedWaitingPlayers\() p
(void) k
(\);) p n
(    ) S
(void) k
( startWaitingMatch\() p
(void) k
(\);) p n
(    ) S
(void) k
( cancelWaitingMatch\() p
(void) k
(\);) p n
(    ) S
(void) k
( exitWaitingMatch\() p
(void) k
(\);) p n
(    ) S
(void) k
( closeEvent\(QCloseEvent *\);) p n
(};) N
() N
(#endif) K n
(client_lobby.h) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(client_settings.h) str
(") p n
() N
(ClientSettings::ClientSettings\() S
(void) k
(\) {) p n
(    ) S
(this) K
(->FULL_SCREEN = FULL_SCREEN_DEFAULT;) p n
(    ) S
(this) K
(->RESOLUTION_HIGH = RESOLUTION_HIGH_DEFAULT;) p n
(    ) S
(this) K
(->RESOLUTION_WIDTH = RESOLUTION_WIDTH_DEFAULT;) p n
(    ) S
(this) K
(->SOUND_FX = SOUND_FX_DEFAULT;) p n
(}) N
(client_settings.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_lobby.h, client_settings.cpp) (18/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CLIENT_SETTINGS_H__) p n
(#define) K
( __CLIENT_SETTINGS_H__) p n
() N
(#define) K
( RESOLUTION_HIGH_DEFAULT 760) p n
(#define) K
( RESOLUTION_WIDTH_DEFAULT 1024) p n
(#define) K
( SOUND_FX_DEFAULT 1) p n
(#define) K
( FULL_SCREEN_DEFAULT 0) p n
() N
(class ClientSettings {) N
(    public:) N
(        ClientSettings\() S
(void) k
(\);) p n
() N
(        ) S
(int) k
( RESOLUTION_HIGH;) p n
(        ) S
(int) k
( RESOLUTION_WIDTH;) p n
(        bool SOUND_FX;) N
(        bool FULL_SCREEN;) N
(};) N
() N
(#endif) K
(client_settings.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(clock.h) str
(") p n
() N
(#define) K
( HURRY_TIME 11) p n
() N
(View::Clock::Clock\() S
(int) k
( width, ) p
(int) k
( height\) : ) p n
(  font\(gPath.PATH_FONT_ARIAL_BOLD, height - PADDING * 2\) {) N
() N
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
(  ) S
(this) K
(->width = width;) p n
(  ) S
(this) K
(->height = height;) p n
() N
(  ) S
(this) K
(->hide = ) p
(false) k
(;) p n
(  ) S
(this) K
(->hurrySound.setSound\(gPath.PATH_SOUND_HURRY\);) p n
(  ) S
(this) K
(->timeTrickSound.setSound\(gPath.PATH_SOUND_TIME_TRICK\);) p n
(}) N
() N
(View::Clock::~Clock\() S
(void) k
(\) {) p n
() N
(}) N
() N
(int) k
( View::Clock::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::Clock::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::Clock::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Clock::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Clock::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x - ) p
(this) K
(->width / 2;) p n
(}) N
() N
(void) k
( View::Clock::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y - ) p
(this) K
(->height / 2;) p n
(}) N
() N
(void) k
( View::Clock::setTime\() p
(int) k
( newTime\) {) p n
(  ) S
(if) K
( \(newTime == HURRY_TIME && ) p
(this) K
(->time != newTime\) {) p n
(    ) S
(this) K
(->hurrySound.playSound\(0\);) p n
(  }) N
() N
(  ) S
(if) K
( \(newTime < HURRY_TIME && ) p
(this) K
(->time != newTime\) {) p n
(    ) S
(this) K
(->timeTrickSound.playSound\(0\);) p n
(  }) N
() N
(  ) S
(this) K
(->time = newTime;) p n
(}) N
() N
(void) k
( View::Clock::toggleHide\() p
(bool) k
( newState\) {) p n
(  ) S
(this) K
(->hide = newState;) p n
(}) N
() N
(void) k
( View::Clock::render\(SDL_Renderer * r, ) p
(int) k
( x, ) p
(int) k
( y\) {) p n
(clock.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(client_settings.h, clock.cpp) (19/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 20
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(if) K
( \(!) p
(this) K
(->hide\) {) p n
(    SDL_Color color = {255, 255, 255, 0};) N
() N
(    ) S
(if) K
( \() p
(this) K
(->time < HURRY_TIME\) {) p n
(      color = {255, 0, 0, 0};) N
(    }) N
() N
(    ) S
(this) K
(->timeTexture.loadFromRenderedText\(r, ) p
(this) K
(->font, std::to_string\() p
(this) K
(->t) p n
(ime\), color\);) N
(    ) N
(    ) S
(// Black rect) c n
(    SDL_Rect blackRect = {) p n
(      ) S
(this) K
(->x,) p n
(      ) S
(this) K
(->y,) p n
(      ) S
(this) K
(->width,) p n
(      ) S
(this) K
(->height,) p n
(    };) N
(    SDL_SetRenderDrawColor\(r, 0x00, 0x00, 0x00, 0xFF\);        ) N
(    SDL_RenderFillRect\(r, &blackRect\);) N
() N
(    ) S
(// Render time text) c n
(    ) p
(this) K
(->timeTexture.render\() p n
(      r, ) N
(      ) S
(this) K
(->x + ) p
(this) K
(->width / 2 - ) p
(this) K
(->timeTexture.getWidth\(\) / 2, ) p n
(      ) S
(this) K
(->y + ) p
(this) K
(->height / 2 - ) p
(this) K
(->timeTexture.getHeight\(\) / 2) p n
(    \);) N
(  }) N
(}) N
() N
(clock.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CLOCK_H__) p n
(#define) K
( __CLOCK_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(font.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
(#define) K
( TEXT_SIZE 40) p n
(#define) K
( PADDING 5) p n
() N
(namespace View {) N
(  class Clock: public Drawable {) N
(    private:) N
(      Font font;) N
(      ) S
(int) k
( time;) p n
(      Texture timeTexture;) N
(      SoundEffect hurrySound;) N
(      SoundEffect timeTrickSound;) N
(      bool hide;) N
() N
() N
() N
(    public:) N
(      Clock\() S
(int) k
( width, ) p
(int) k
( height\);) p n
(      ~Clock\(\);) N
(      ) S
(void) k
( setTime\() p
(int) k
(\);) p n
(      ) S
(void) k
( toggleHide\(bool\);) p n
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(clock.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(clock.cpp, clock.h) (20/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 21
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(cluster.h) str
(") p n
() N
(#define) K
( CLUSTER_FPC 3) p n
() N
(View::Cluster::Cluster\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion\) : ) p n
() S 8 T (sprite\(CLUSTER_FPC, INFINITE_GOING\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Grenade) str
("\),) p n
() S 8 T (countdownText\(COUNTDOWN_TEXT_SIZE\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_CLUSTER, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->playedAboutToExplode = ) p
(false) k
(;) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_THROW_PROJECTIL\);) p n
(  ) S
(this) K
(->sound.playSound\(0\);) p n
() S 8 T () S
(this) K
(->countdown = countdown;) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
(}) N
() N
(View::Cluster::~Cluster\(\) {) N
() N
(}) N
() N
(void) k
( View::Cluster::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
() S 8 T () S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render Cluster animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() N
() S 8 T () S 16 T () S
(// Render countdown text) c n
() p 8 T () S 16 T () S
(this) K
(->countdownText.setText\(r, std::to_string\() p
(this) K
(->countdown\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setX\() p
(this) K
(->x + ) p
(this) K
(->texture.getWidth\(\) +  ) p
(t) K n
(his) S
(->countdownText.getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setY\() p
(this) K
(->y - ) p
(this) K
(->countdownText.getHeight) p n
(\(\) / 2\);) N
() S 8 T () S 16 T () S
(this) K
(->countdownText.render\(r, camX, camY\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(cluster.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CLUSTER_H__) p n
(#define) K
( __CLUSTER_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
() N
() N
(namespace View {) N
(  class Cluster: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
(      RectangleText countdownText;) N
() N
(    public:) N
(      Cluster\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion = 100\);) p n
(      ~Cluster\(\);) N
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(cluster.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(cluster.cpp, cluster.h) (21/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 22
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(dead.h) str
(") p n
() N
(#define) K
( DEAD_RATIO_EXPLOSION 50) p n
() N
(View::Dead::Dead\(View::Worm * worm, SDL_Renderer * r\) : ) N
(  explosion\(r, DEAD_RATIO_EXPLOSION, ") S
(Bazooka) str
("\){) p n
(  ) S
(this) K
(->state = WS_DEAD;) p n
(  ) S
(this) K
(->context = worm;) p n
(  ) N
(  ) S
(this) K
(->textureDying.loadFromFile\(gPath.PATH_WORM_DIE, r\);) p n
(  ) S
(this) K
(->spriteDying.setSpriteSheet\(&) p
(this) K
(->textureDying\);) p n
(  ) S
(this) K
(->spriteDying.changeSpriteType\(ONLY_GOING\);) p n
() N
(  ) S
(const) K
( ) p
(char) k
( * graves[] = {) p n
(    ) S
(//gPath.PATH_GRAVE_1.c_str\(\),) c n
(    gPath.PATH_GRAVE_2.c_str\(\),) p n
(    gPath.PATH_GRAVE_3.c_str\(\)) N
(    ) S
(//gPath.PATH_GRAVE_4.c_str\(\),) c n
(    ) p
(//gPath.PATH_GRAVE_5.c_str\(\),) c n
(    ) p
(//gPath.PATH_GRAVE_6.c_str\(\)) c n
(  };) p n
() N
(  ) S
(const) K
( ) p
(char) k
( * sounds[] = {) p n
(    gPath.PATH_SOUND_DIE.c_str\(\),) N
(    gPath.PATH_SOUND_BYE.c_str\(\)) N
(  };) N
() N
(  ) S
(this) K
(->textureGrave.loadFromFile\(graves[rand\(\) % 2], r\);) p n
(  ) S
(this) K
(->spriteGrave.setSpriteSheet\(&) p
(this) K
(->textureGrave\);) p n
(  ) S
(this) K
(->spriteGrave.changeSpriteType\(INFINITE_GOING_AND_BACK\);) p n
() N
(  ) S
(this) K
(->sound.setSound\(sounds[rand\(\) % 2]\);) p n
(  ) S
(this) K
(->soundPlayed = ) p
(false) k
(;) p n
() N
(  ) S
(this) K
(->dying = ) p
(true) k
(;) p n
(}) N
() N
(View::Dead::~Dead\(\) {) N
() N
(}) N
() N
(void) k
( View::Dead::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY, worm_inclination_t) p n
( incl, ) S
(bool) k
( mirrored, ) p
(int) k
( angle\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->soundPlayed\) {) p n
(    ) S
(this) K
(->soundPlayed = ) p
(true) k
(;) p n
(    ) S
(this) K
(->sound.playSound\(0\);) p n
(  }) N
(  ) N
(  ) S
(if) K
( \() p
(this) K
(->dying\) {) p n
(    ) S
(if) K
( \(!) p
(this) K
(->spriteDying.finished\(\)\) {) p n
(      SDL_Rect clip = ) S
(this) K
(->spriteDying.getNextClip\(\);) p n
(      View::Texture & current = ) S
(this) K
(->textureDying;) p n
(      ) S
(if) K
( \(mirrored\) {) p n
(        current.render\() N
(          r, ) N
(          ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(          ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(          &clip, ) N
(          0, ) N
(          ) S
(NULL) K
(, ) p n
(          SDL_FLIP_HORIZONTAL) N
(        \);) N
(dead.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      } ) p
(else) K
( {) p n
(        current.render\() N
(          r, ) N
(          ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(          ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(          &clip) N
(        \);) N
(      }) N
(    } ) S
(else) K
( {) p n
(      ) S
(this) K
(->dying = ) p
(false) k
(;) p n
(    }) N
(  } ) S
(else) K
( ) p
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
(    ) S
(this) K
(->explosion.setX\() p
(this) K
(->context->getX\(\)\);) p n
(    ) S
(this) K
(->explosion.setY\() p
(this) K
(->context->getY\(\)\);) p n
(    ) S
(this) K
(->explosion.render\(r, camX, camY\);) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->context->setAffectedByExplosion\() p
(false) k
(\);) p n
(    SDL_Rect clip = ) S
(this) K
(->spriteGrave.getNextClip\(\);) p n
(    ) S
(this) K
(->textureGrave.render\() p n
(      r,) N
(      ) S
(this) K
(->context->getX\(\) - ) p
(this) K
(->textureGrave.getWidth\(\) / 2 - camX,) p n
(      ) S
(this) K
(->context->getY\(\) - ) p
(this) K
(->textureGrave.getWidth\(\) / 2 - camY,) p n
(      &clip) N
(    \);) N
(  }) N
(}) N
() N
(void) k
( View::Dead::resetAnimation\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->spriteDying.reset\(\);) p n
(  ) S
(this) K
(->spriteGrave.reset\(\);) p n
(}) S
(dead.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(dead.cpp) (22/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 23
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __DEAD_H__) p n
(#define) K
( __DEAD_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(explosion.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
(  ) N
(  class Dead: public WormState {) N
(    private:) N
(      Texture textureDying;) N
(      SpriteAnimation spriteDying;) N
(      Explosion explosion;) N
(      ) N
(      Texture textureGrave;) N
(      SpriteAnimation spriteGrave;) N
() N
(      SoundEffect sound;) N
(      bool soundPlayed;) N
() N
(      bool dying;) N
() N
(    public:) N
(      Dead\(View::Worm * context, SDL_Renderer * r\);) N
(      ~Dead\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
( angle\);) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(dead.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __DRAWABLE_H__) p n
(#define) K
( __DRAWABLE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
() N
(namespace View {) N
(  class Drawable {) N
(    protected:) N
(      ) S
(int) k
( x;) p n
(      ) S
(int) k
( y;) p n
(      ) S
(int) k
( width;) p n
(      ) S
(int) k
( height;) p n
(    public:) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\) = 0;) p n
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
( = 0;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
( = 0;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
( = 0;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
( = 0;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\) = 0;) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\) = 0;) p n
(  };) N
(}) N
() N
(#endif) K
(drawable.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(dead.h, drawable.h) (23/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 24
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(dynamite.h) str
(") p n
(#define) K
( DYNAMITE_FPC 3) p n
() N
(View::Dynamite::Dynamite\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion\) : ) p n
() S 8 T (sprite\(DYNAMITE_FPC, INFINITE_GOING_AND_BACK\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Dynamite) str
("\),) p n
() S 8 T (countdownText\(COUNTDOWN_TEXT_SIZE\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_DYNAMITE, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() N
() S 8 T () S
(const) K
( ) p
(char) k
( * laughs[] = {) p n
() S 8 T () S 16 T (gPath.PATH_SOUND_LAUGH.c_str\(\),) N
() S 8 T () S 16 T (gPath.PATH_SOUND_FATALITY.c_str\(\)) N
() S 8 T (};) N
() N
() S 8 T () S
(this) K
(->laugh.setSound\(laughs[rand\(\) % 2]\);) p n
() S 8 T () S
(this) K
(->laugh.playSound\(0\);) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_DYNAMITE\);) p n
() S 8 T () S
(this) K
(->sound.playSound\(\);) p n
() S 8 T () S
(this) K
(->countdown = countdown;) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
(}) N
() N
(View::Dynamite::~Dynamite\(\) {) N
() N
(}) N
() N
(void) k
( View::Dynamite::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
() S 8 T () S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render dynamite animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() N
() S 8 T () S 16 T () S
(// Render countdown text) c n
() p 8 T () S 16 T () S
(this) K
(->countdownText.setText\(r, std::to_string\() p
(this) K
(->countdown\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setX\() p
(this) K
(->x + ) p
(this) K
(->texture.getWidth\(\) +  ) p
(t) K n
(his) S
(->countdownText.getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setY\() p
(this) K
(->y - ) p
(this) K
(->countdownText.getHeight) p n
(\(\) / 2\);) N
() S 8 T () S 16 T () S
(this) K
(->countdownText.render\(r, camX, camY\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(this) K
(->sound.stopSound\(\);) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(dynamite.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __DYNAMITE_H__) p n
(#define) K
( __DYNAMITE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <SDL2/SDL_mixer.h>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
() N
(namespace View {) N
(  class Dynamite: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
(      RectangleText countdownText;) N
() N
(      SoundEffect laugh;) N
() N
(    public:) N
(      Dynamite\(SDL_Renderer *, ) S
(int) k
( c, ) p
(int) k
( ratio = 100\);) p n
(      ~Dynamite\(\);) N
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(dynamite.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(dynamite.cpp, dynamite.h) (24/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 25
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <string>) p n
(#include) K
( <sstream>) p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(event_sender.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
() N
(EventSender::EventSender\(Protocol * p, Queue<Event> & e\) :) N
(protocol\(p\),) N
(events\(e\) {) N
(    keep_runing = ) S
(true) k
(;) p n
(}) N
() N
(EventSender::~EventSender\() S
(void) k
(\) {) p n
(    ) N
(}) N
() N
(bool) k
( EventSender::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) N
() N
(size_t EventSender::getId\() S
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( 0;) p n
(}) N
() N
(void) k
( EventSender::run\() p
(void) k
(\) {) p n
(    ) S
(while) K
( \(keep_runing\) {) p n
(        Event event = ) S
(this) K
(->events.pop\(\);) p n
(        YAML::Node evento = event.getNode\(\);) N
(        ) S
(if) K
( \(!event.quit\(\)\) {) p n
(            ) S
(this) K
(->protocol->sendEvent\(event\);) p n
(        } ) S
(else) K
( {) p n
(            std::cout << ") S
(Enviando evento de quit.) str
(" << std::endl;) p n
(            ) S
(this) K
(->protocol->sendEvent\(event\);) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
(}) N
() N
(void) k
( EventSender::stop\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->keep_runing = ) p
(false) k
(;) p n
(}) S
(event_sender.cpp) (Page 1/1) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __EVENT_SENDER_H__) p n
(#define) K
( __EVENT_SENDER_H__) p n
() N
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
() N
(class EventSender : public Thread {) N
(    private:) N
(        Protocol * protocol;) N
(        Queue<Event> & events;) N
(        bool keep_runing;) N
(    ) N
(        virtual bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        virtual size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(    public:) N
(        EventSender\(Protocol *, Queue<Event> &\);) N
(        ~EventSender\() S
(void) k
(\);) p n
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ) S
(void) k
( stop\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(event_sender.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(event_sender.cpp, event_sender.h) (25/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 26
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(explosion.h) str
(") p n
() N
(View::Explosion::Explosion\(SDL_Renderer * r, ) S
(int) k
( ratio, std::string weapon\) :) p n
(  sprite\(EXPLOSION_FPC, ONLY_GOING\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_EXPLOSION_EFFECT, r\);) p n
(  ) S
(this) K
(->width = ratio * 2;) p n
(  ) S
(this) K
(->height = ratio * 2;) p n
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
() N
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
(  ) S
(if) K
( \(weapon == ") p
(Bazooka) str
("\) {) p n
(    ) S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_EXPLOSION_3\); ) p n
(  } ) S
(else) K
( ) p
(if) K
( \(weapon == ") p
(Grenade) str
("\) {) p n
(    ) S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_EXPLOSION_2\);) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_EXPLOSION_1\);) p n
(  }) N
(  ) S
(this) K
(->soundPlayed = ) p
(false) k
(;) p n
(}) N
() N
(View::Explosion::~Explosion\(\) {) N
() N
(}) N
() N
(int) k
( View::Explosion::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Explosion::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(int) k
( View::Explosion::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::Explosion::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(void) k
( View::Explosion::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x - ) p
(this) K
(->width / 2;) p n
(}) N
() N
(void) k
( View::Explosion::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y - ) p
(this) K
(->height / 2;) p n
(}) N
() N
(void) k
( View::Explosion::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->sprite.finished\(\)\) {) p n
(    ) S
(if) K
( \(!) p
(this) K
(->soundPlayed\) {) p n
(      ) S
(this) K
(->sound.playSound\(0\);) p n
(      ) S
(this) K
(->soundPlayed = ) p
(true) k
(;) p n
(    }) N
() S 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, ) p
(this) K
(->wi) p n
(dth, ) S
(this) K
(->height, &clip\);) p n
() S 8 T (} ) N
(}) N
() N
(bool) k
( View::Explosion::finishedExplosion\() p
(void) k
(\) {) p n
(explosion.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(return) K
( ) p
(this) K
(->sprite.finished\(\);) p n
(}) S
(explosion.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(explosion.cpp) (26/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 27
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __EXPLOSION_H__) p n
(#define) K
( __EXPLOSION_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
(#define) K
( EXPLOSION_FPC 3) p n
() N
(namespace View {) N
(  class Explosion: public Drawable {) N
(    private:) N
(      Texture texture;) N
(      SpriteAnimation sprite;) N
(      SoundEffect sound;) N
(      bool soundPlayed;) N
(    public:) N
(      Explosion\(SDL_Renderer * r, ) S
(int) k
( ratio, std::string weapon = ") p
(Bazooka) str
("\);) p n
(      ~Explosion\(\);) N
() N
(      bool finishedExplosion\() S
(void) k
(\);) p n
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(explosion.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(falling.h) str
(") p n
() N
(View::Falling::Falling\(View::Worm * worm, SDL_Renderer * r\) {) N
(  ) S
(this) K
(->state = WS_FALLING;) p n
(  ) S
(this) K
(->context = worm;) p n
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_WORM_ROLL, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
(  ) S
(this) K
(->sprite.changeSpriteType\(INFINITE_GOING\);) p n
(}) N
() N
(View::Falling::~Falling\(\) {) N
() N
(}) N
() N
(void) k
( View::Falling::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY, worm_inclinatio) p n
(n_t incl, ) S
(bool) k
( mirrored, ) p
(int) k
( angle\) {) p n
(  SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
(  View::Texture & current = ) S
(this) K
(->texture;) p n
(  ) S
(if) K
( \(mirrored\) {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip, ) N
(      0, ) N
(      ) S
(NULL) K
(, ) p n
(      SDL_FLIP_HORIZONTAL) N
(    \);) N
(  } ) S
(else) K
( {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip) N
(    \);) N
(  }) N
(}) N
() N
(void) k
( View::Falling::resetAnimation\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->sprite.reset\(\);) p n
(}) S
(falling.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(explosion.h, falling.cpp) (27/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 28
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __FALLING_H__) p n
(#define) K
( __FALLING_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
() N
(  class Falling: public WormState {) N
(    private:) N
(      Texture texture;) N
(      SpriteAnimation sprite;) N
() N
(    public:) N
(      Falling\(View::Worm * context, SDL_Renderer * r\);) N
(      ~Falling\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
(\);) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(falling.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(flash_notice.h) str
(") p n
() N
(#define) K
( FLASH_NOTICE_PADDING 5) p n
(#define) K
( MAX_TIME_DISPLAYING 1500) p n
() N
(FlashNotice::FlashNotice\() S
(void) k
(\) : ) p n
(  notice\(30\) {) N
(}) N
() N
(FlashNotice::FlashNotice\() S
(int) k
( sw, ) p
(int) k
( sh, ) p
(int) k
( percentWindow\) :) p n
(  notice\(sh / \(100 / percentWindow\)\) {) N
(  ) S
(this) K
(->screenWidth = sw;) p n
(  ) S
(this) K
(->screenHeight = sh;) p n
(}) N
() N
(FlashNotice::~FlashNotice\(\) {) N
() N
(}) N
() N
(void) k
( FlashNotice::showFlashNotice\(SDL_Renderer * r, ) p
(const) K
( std::string & notice\) ) p n
({) N
(  SDL_Color black = {0,0,0,0};) N
(  SDL_Color white = {255,255,255,255};) N
(  ) S
(this) K
(->notice.setBackgroundColor\(black\);) p n
(  ) S
(this) K
(->notice.setTextColor\(white\);) p n
(  ) S
(this) K
(->notice.setText\(r, notice\);) p n
(  ) S
(if) K
( \() p
(this) K
(->timer.isStarted\(\)\) {) p n
(    ) S
(this) K
(->timer.stop\(\);) p n
(  }) N
(  ) S
(this) K
(->timer.start\(\);) p n
(  ) S
(this) K
(->notice.setX\() p
(this) K
(->screenWidth / 2\);) p n
(  ) S
(this) K
(->notice.setY\(FLASH_NOTICE_PADDING + ) p
(this) K
(->notice.getHeight\(\) / 2\);) p n
(}) N
() N
(void) k
( FlashNotice::showFlashError\(SDL_Renderer * r, ) p
(const) K
( std::string & notice\) {) p n
(  SDL_Color black = {0,0,0,0};) N
(  SDL_Color red = {255,0,0,0};) N
(  ) S
(this) K
(->notice.setBackgroundColor\(black\);) p n
(  ) S
(this) K
(->notice.setTextColor\(red\);) p n
(  ) S
(this) K
(->notice.setText\(r, notice\);) p n
(  ) S
(if) K
( \() p
(this) K
(->timer.isStarted\(\)\) {) p n
(    ) S
(this) K
(->timer.stop\(\);) p n
(  }) N
(  ) S
(this) K
(->timer.start\(\);) p n
(  ) S
(this) K
(->notice.setX\() p
(this) K
(->screenWidth / 2\);) p n
(  ) S
(this) K
(->notice.setY\(FLASH_NOTICE_PADDING + ) p
(this) K
(->notice.getHeight\(\) / 2\);) p n
(}) N
() N
(void) k
( FlashNotice::render\(SDL_Renderer * r\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->timer.getTicks\(\) < MAX_TIME_DISPLAYING && ) p
(this) K
(->timer.isStarted\(\)\) {) p n
(    ) S
(this) K
(->notice.render\(r, 0, 0\);) p n
(  } ) S
(else) K
( {) p n
(    ) S
(if) K
( \() p
(this) K
(->timer.isStarted\(\)\) {) p n
(      ) S
(this) K
(->timer.stop\(\);) p n
(    }) N
(  }) N
(}) N
() N
(void) k
( FlashNotice::setScreenWidth\() p
(int) k
( w\) {) p n
(  ) S
(this) K
(->screenWidth = w;) p n
(}) N
() N
(flash_notice.cpp) (Page 1/2) (jun 25, 18 21:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(falling.h, flash_notice.cpp) (28/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 29
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(void) k
( FlashNotice::setScreenHeight\() p
(int) k
( h\) {) p n
(  ) S
(this) K
(->screenHeight = h;) p n
(}) N
() N
(flash_notice.cpp) (Page 2/2) (jun 25, 18 21:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __FLASH_NOTICE_H__) p n
(#define) K
( __FLASH_NOTICE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(sdl_timer.h) str
(") p n
() N
(class FlashNotice {) N
(  private:) N
(    View::RectangleText notice;) N
(    ) S
(int) k
( screenWidth;) p n
(    ) S
(int) k
( screenHeight;) p n
(    Timer timer;) N
() N
(  public:) N
(    FlashNotice\() S
(void) k
(\);) p n
(    FlashNotice\() S
(int) k
( sw, ) p
(int) k
( sh, ) p
(int) k
( percentWindow = 4\);) p n
(    ~FlashNotice\(\);) N
(    ) S
(void) k
( render\(SDL_Renderer *\);) p n
(    ) S
(void) k
( showFlashNotice\(SDL_Renderer *, ) p
(const) K
( std::string &\);) p n
(    ) S
(void) k
( showFlashError\(SDL_Renderer *, ) p
(const) K
( std::string &\);) p n
(    ) S
(void) k
( setScreenWidth\() p
(int) k
(\);) p n
(    ) S
(void) k
( setScreenHeight\() p
(int) k
(\);) p n
(};) N
() N
(#endif) K
(flash_notice.h) (Page 1/1) (jun 25, 18 21:19) title
border
grestore
(Printed by Gabriel Robles) rhead
(flash_notice.cpp, flash_notice.h) (29/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 30
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(flying.h) str
(") p n
(#define) K
( MAX_FLYING_TEXTURES 3) p n
() N
(View::Flying::Flying\(View::Worm * worm, SDL_Renderer * r\) {) N
(  ) S
(this) K
(->state = WS_FLYING;) p n
(  ) S
(this) K
(->context = worm;) p n
() N
(  ) S
(const) K
( ) p
(char) k
( * sounds[] = {) p n
(    gPath.PATH_SOUND_OOFF_1.c_str\(\),) N
(    gPath.PATH_SOUND_OOFF_2.c_str\(\),) N
(    gPath.PATH_SOUND_OOFF_3.c_str\(\),) N
(    gPath.PATH_SOUND_OW_1.c_str\(\),) N
(    gPath.PATH_SOUND_OW_2.c_str\(\),) N
(    gPath.PATH_SOUND_OW_3.c_str\(\)) N
(  };) N
(  ) S
(this) K
(->sound.setSound\(sounds[rand\(\) % 6]\);) p n
(  ) S
(this) K
(->soundPlayed = ) p
(false) k
(;) p n
() N
(  ) S
(this) K
(->index = 0;) p n
(  ) S
(this) K
(->textures[) p
(this) K
(->index].loadFromFile\(gPath.PATH_WORM_FLYING_1, r\);) p n
(  ) S
(this) K
(->sprites[) p
(this) K
(->index].setSpriteSheet\(&) p
(this) K
(->textures[) p
(this) K
(->index]\);) p n
(  ) S
(this) K
(->sprites[) p
(this) K
(->index].changeSpriteType\(DEPENDENT_ON_GRADES\);) p n
() N
(  ) S
(this) K
(->index = 1;) p n
(  ) S
(this) K
(->textures[) p
(this) K
(->index].loadFromFile\(gPath.PATH_WORM_FLYING_2, r\);) p n
(  ) S
(this) K
(->sprites[) p
(this) K
(->index].setSpriteSheet\(&) p
(this) K
(->textures[) p
(this) K
(->index]\);) p n
(  ) S
(this) K
(->sprites[) p
(this) K
(->index].changeSpriteType\(DEPENDENT_ON_GRADES\);) p n
() N
(  ) S
(this) K
(->index = 2;) p n
(  ) S
(this) K
(->textures[) p
(this) K
(->index].loadFromFile\(gPath.PATH_WORM_FLYING_3, r\);) p n
(  ) S
(this) K
(->sprites[) p
(this) K
(->index].setSpriteSheet\(&) p
(this) K
(->textures[) p
(this) K
(->index]\);) p n
(  ) S
(this) K
(->sprites[) p
(this) K
(->index].changeSpriteType\(DEPENDENT_ON_GRADES\);) p n
() N
(  ) S
(this) K
(->index = 0;) p n
(}) N
() N
(View::Flying::~Flying\(\) {) N
() N
(}) N
() N
(void) k
( View::Flying::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY, worm_inclination) p n
(_t incl, ) S
(bool) k
( mirrored, ) p
(int) k
( angle\) {) p n
(  ) S
(if) K
( \(!\() p
(this) K
(->index < MAX_FLYING_TEXTURES\)\) {) p n
(    ) S
(this) K
(->index = 0;) p n
(  }) N
() N
(  ) S
(if) K
( \(!) p
(this) K
(->soundPlayed\) {) p n
(    ) S
(this) K
(->sound.playSound\(0\);) p n
(    ) S
(this) K
(->soundPlayed = ) p
(true) k
(;) p n
(  }) N
(  ) N
(  View::SpriteAnimation & currentAnimation = ) S
(this) K
(->sprites[) p
(this) K
(->index];) p n
(  View::Texture & current = ) S
(this) K
(->textures[) p
(this) K
(->index];) p n
(  ) S
(this) K
(->index++;) p n
() N
(  ) S
(int) k
( angleAdapted = angle;) p n
() N
(  ) S
(if) K
( \(angle > 180\) {) p n
(    angleAdapted = 360 - angle;) N
(  }) N
(  SDL_Rect clip = currentAnimation.getNextClip\(angleAdapted, 180\);) N
() N
(flying.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(if) K
( \(angle <= 180\) {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip, ) N
(      0, ) N
(      ) S
(NULL) K
(, ) p n
(      SDL_FLIP_HORIZONTAL) N
(    \);) N
(  } ) S
(else) K
( {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip) N
(    \);) N
(  }) N
(}) N
() N
(void) k
( View::Flying::resetAnimation\() p
(void) k
(\) {) p n
(  std::map<size_t, SpriteAnimation>::iterator it = ) S
(this) K
(->sprites.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->sprites.end\(\) ; it++\) {) p n
(    it->second.reset\(\);) N
(  }) N
(}) S
(flying.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(flying.cpp) (30/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 31
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __FLYING_H__) p n
(#define) K
( __FLYING_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
() N
(  class Flying: public WormState {) N
(    private:) N
(      std::map<size_t, Texture> textures;) N
(      std::map<size_t, SpriteAnimation> sprites;) N
(      size_t index;) N
(      SoundEffect sound;) N
(      bool soundPlayed;) N
() N
(    public:) N
(      Flying\(View::Worm * context, SDL_Renderer * r\);) N
(      ~Flying\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
(\);) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(flying.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(font.h) str
(") p n
() N
(View::Font::Font\(std::string fontPath, size_t fontSize\) {) N
(  ) S
(this) K
(->font = TTF_OpenFont\(fontPath.c_str\(\), fontSize\);) p n
(  ) S
(if) K
( \(!) p
(this) K
(->font\) {) p n
(    ) S
(throw) K
( View::Exception\(") p
(%s: %s. %s: %s) str
(", ERR_MSG_OPEN_FONT, fontPath.c_str\(\), ") p
(S) str n
(DL_ttf Error) S
(", TTF_GetError\(\)\);) p n
(  }) N
(}) N
() N
(View::Font::~Font\(\) {) N
(  ) S
(if) K
( \() p
(this) K
(->font\) {) p n
(    TTF_CloseFont\() S
(this) K
(->font\);) p n
(    ) S
(this) K
(->font = ) p
(NULL) K
(;) p n
(  }) N
(}) N
() N
(TTF_Font * View::Font::getFont\() S
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->font;) p n
(}) N
(font.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(flying.h, font.cpp) (31/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 32
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __FONT_H__) p n
(#define) K
( __FONT_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <SDL2/SDL_ttf.h>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(view_exceptions.h) str
(") p n
(#include) K
( ") p
(view_exceptions_messages.h) str
(") p n
() N
(namespace View {) N
(  class Font {) N
(    private:) N
(      TTF_Font * font;) N
(    public:) N
(      Font\(std::string, size_t\);) N
(      ~Font\(\);) N
(      TTF_Font * getFont\() S
(void) k
(\) ) p
(const) K
(;) p n
(  };) N
(}) N
() N
(#endif) K
(font.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(girder.h) str
(") p n
() N
(View::Girder::~Girder\() S
(void) k
(\) {) p n
(}) N
() N
(void) k
( View::Girder::rotateClockwise\() p
(void) k
(\) {) p n
(  ) S
(// Si no es -90 grados) c n
(  ) p
(if) K
( \() p
(this) K
(->currentIndexDegrees != DIFF_POS-1\) {) p n
(    ) S
(this) K
(->currentIndexDegrees++;) p n
(  } ) S
(else) K
( {) p n
(    ) S
(// Cambia a +60 grados) c n
(    ) p
(this) K
(->currentIndexDegrees = 1;) p n
(  }) N
(  ) S
(this) K
(->currentTexture = ) p
(this) K
(->textures[) p
(this) K
(->getCurrentDegrees\(\)];) p n
(}) N
() N
(void) k
( View::Girder::rotateCounterClockwise\() p
(void) k
(\) {) p n
(  ) S
(// Si no es +90 grados) c n
(  ) p
(if) K
( \() p
(this) K
(->currentIndexDegrees\) {) p n
(    ) S
(this) K
(->currentIndexDegrees--;) p n
(  } ) S
(else) K
( {) p n
(    ) S
(// Cambia a -60 grados) c n
(    ) p
(this) K
(->currentIndexDegrees = DIFF_POS-2;) p n
(  }) N
(  ) S
(this) K
(->currentTexture = ) p
(this) K
(->textures[) p
(this) K
(->getCurrentDegrees\(\)];) p n
(}) N
() N
(void) k
( View::Girder::render\(SDL_Renderer * renderer, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(this) K
(->currentTexture.render\() p n
(    renderer, ) N
(    ) S
(this) K
(->x - \() p
(this) K
(->currentTexture.getWidth\(\) / 2\) - camX, ) p n
(    ) S
(this) K
(->y - \() p
(this) K
(->currentTexture.getHeight\(\) / 2\) - camY) p n
(  \);) N
(}) N
() N
(degrees_t View::Girder::getCurrentDegrees\() S
(void) k
(\) {) p n
(  degrees_t vec[] = {) N
(    NINETY_DEGREES,) N
(    SIXTY_DEGREES,) N
(    FORTYFIVE_DEGREES,) N
(    THIRTY_DEGREES,) N
(    ZERO_DEGREES,) N
(    NEGATIVE_THIRTY_DEGREES,) N
(    NEGATIVE_FORTYFIVE_DEGREES,) N
(    NEGATIVE_SIXTY_DEGREES,) N
(    NEGATIVE_NINETY_DEGREES) N
(  };) N
(  ) S
(return) K
( vec[) p
(this) K
(->currentIndexDegrees];) p n
(}) N
() N
(int) k
( View::Girder::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->currentTexture.getWidth\(\);) p n
(}) N
() N
(int) k
( View::Girder::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->currentTexture.getHeight\(\);) p n
(}) N
() N
(int) k
( View::Girder::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(girder.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(font.h, girder.cpp) (32/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 33
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(int) k
( View::Girder::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Girder::setX\() p
(int) k
( x\) {) p n
(  ) S
(this) K
(->x = x;) p n
(}) N
() N
(void) k
( View::Girder::setY\() p
(int) k
( y\) {;) p n
(  ) S
(this) K
(->y = y;) p n
(}) S
(girder.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __GIRDER_H__) p n
(#define) K
( __GIRDER_H__) p n
() N
(#include) K
( <iostream>) p n
(#include) K
( <map>) p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
(#define) K
( DIFF_POS 9) p n
() N
(typedef) K
( ) p
(enum) k
( {) p n
(  NINETY_DEGREES = 90,) N
(  SIXTY_DEGREES = 60,) N
(  FORTYFIVE_DEGREES = 45,) N
(  THIRTY_DEGREES = 30,) N
(  ZERO_DEGREES = 0,) N
(  NEGATIVE_THIRTY_DEGREES = -30,) N
(  NEGATIVE_FORTYFIVE_DEGREES = -45,) N
(  NEGATIVE_SIXTY_DEGREES = -60,) N
(  NEGATIVE_NINETY_DEGREES = -90,) N
(} degrees_t;) N
() N
(namespace View {) N
(  class Girder: public Drawable {) N
(    protected:) N
(      std::map<) S
(int) k
(, Texture> textures;) p n
(      std::size_t currentIndexDegrees;) N
(      Texture currentTexture;) N
() N
(    public:) N
(      virtual ~Girder\() S
(void) k
(\);) p n
(      ) S
(void) k
( rotateClockwise\() p
(void) k
(\);) p n
(      ) S
(void) k
( rotateCounterClockwise\() p
(void) k
(\);) p n
(      degrees_t getCurrentDegrees\() S
(void) k
(\);) p n
(      virtual ) S
(int) k
( getWidth\(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(girder.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(girder.cpp, girder.h) (33/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 34
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(girder_long.h) str
(") p n
() N
(View::GirderLong::GirderLong\(SDL_Renderer * renderer, ) S
(int) k
( degrees\) {) p n
(  ) S
(this) K
(->textures[NINETY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_90, rendere) p n
(r\);) N
(  ) S
(this) K
(->textures[SIXTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_60, renderer) p n
(\);) N
(  ) S
(this) K
(->textures[FORTYFIVE_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_45, rend) p n
(erer\);) N
(  ) S
(this) K
(->textures[THIRTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_30, rendere) p n
(r\);) N
(  ) S
(this) K
(->textures[ZERO_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_0, renderer\);) p n
(  ) S
(this) K
(->textures[NEGATIVE_THIRTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_NE) p n
(GATIVE_30, renderer\);) N
(  ) S
(this) K
(->textures[NEGATIVE_FORTYFIVE_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG) p n
(_NEGATIVE_45, renderer\);) N
(  ) S
(this) K
(->textures[NEGATIVE_SIXTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_NEG) p n
(ATIVE_60, renderer\);) N
(  ) S
(this) K
(->textures[NEGATIVE_NINETY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_LONG_NE) p n
(GATIVE_90, renderer\);) N
() N
(  std::map<) S
(int) k
(, size_t> index;) p n
(  index[NINETY_DEGREES] = 0;) N
(  index[SIXTY_DEGREES] = 1;) N
(  index[FORTYFIVE_DEGREES] = 2;) N
(  index[THIRTY_DEGREES] = 3;) N
(  index[ZERO_DEGREES] = 4;) N
(  index[NEGATIVE_THIRTY_DEGREES] = 5;) N
(  index[NEGATIVE_FORTYFIVE_DEGREES] = 6;) N
(  index[NEGATIVE_SIXTY_DEGREES] = 7;) N
(  index[NEGATIVE_NINETY_DEGREES] = 8;) N
() N
(  ) S
(if) K
( \(degrees != ZERO_DEGREES\) {) p n
(    ) S
(this) K
(->currentIndexDegrees = index[degrees];) p n
(    ) S
(this) K
(->currentTexture = ) p
(this) K
(->textures[degrees];) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->currentIndexDegrees = 4; ) p
(// Hardcoded) c n
(    ) p
(this) K
(->currentTexture = ) p
(this) K
(->textures[) p
(this) K
(->getCurrentDegrees\(\)];) p n
(  }  ) N
() N
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
(}) N
() N
(View::GirderLong::~GirderLong\(\) {}) N
(girder_long.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __GIRDER_LONG_H__) p n
(#define) K
( __GIRDER_LONG_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(girder.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
() N
(namespace View {) N
(  class GirderLong: public Girder {) N
(    private:) N
(    public:) N
(      GirderLong\(SDL_Renderer *, ) S
(int) k
( d = ZERO_DEGREES\);) p n
(      ~GirderLong\(\);) N
(  };) N
(}) N
() N
(#endif) K n
(girder_long.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(girder_long.cpp, girder_long.h) (34/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 35
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(girder_short.h) str
(") p n
() N
(View::GirderShort::GirderShort\(SDL_Renderer * renderer, ) S
(int) k
( degrees\) {) p n
(  ) S
(this) K
(->textures[NINETY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_90, render) p n
(er\);) N
(  ) S
(this) K
(->textures[SIXTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_60, rendere) p n
(r\);) N
(  ) S
(this) K
(->textures[FORTYFIVE_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_45, ren) p n
(derer\);) N
(  ) S
(this) K
(->textures[THIRTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_30, render) p n
(er\);) N
(  ) S
(this) K
(->textures[ZERO_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_0, renderer\)) p n
(;) N
(  ) S
(this) K
(->textures[NEGATIVE_THIRTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_N) p n
(EGATIVE_30, renderer\);) N
(  ) S
(this) K
(->textures[NEGATIVE_FORTYFIVE_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHOR) p n
(T_NEGATIVE_45, renderer\);) N
(  ) S
(this) K
(->textures[NEGATIVE_SIXTY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_NE) p n
(GATIVE_60, renderer\);) N
(  ) S
(this) K
(->textures[NEGATIVE_NINETY_DEGREES].loadFromFile\(gPath.PATH_GIRDER_SHORT_N) p n
(EGATIVE_90, renderer\);) N
() N
(  std::map<) S
(int) k
(, size_t> index;) p n
(  index[NINETY_DEGREES] = 0;) N
(  index[SIXTY_DEGREES] = 1;) N
(  index[FORTYFIVE_DEGREES] = 2;) N
(  index[THIRTY_DEGREES] = 3;) N
(  index[ZERO_DEGREES] = 4;) N
(  index[NEGATIVE_THIRTY_DEGREES] = 5;) N
(  index[NEGATIVE_FORTYFIVE_DEGREES] = 6;) N
(  index[NEGATIVE_SIXTY_DEGREES] = 7;) N
(  index[NEGATIVE_NINETY_DEGREES] = 8;) N
() N
(  ) S
(if) K
( \(degrees != ZERO_DEGREES\) {) p n
(    ) S
(this) K
(->currentIndexDegrees = index[degrees];) p n
(    ) S
(this) K
(->currentTexture = ) p
(this) K
(->textures[degrees];) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->currentIndexDegrees = 4; ) p
(// Harcoded) c n
(    ) p
(this) K
(->currentTexture = ) p
(this) K
(->textures[) p
(this) K
(->getCurrentDegrees\(\)];) p n
(  }) N
(    ) N
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
(}) N
() N
(View::GirderShort::~GirderShort\(\) {}) N
(girder_short.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __GIRDER_SHORT_H__) p n
(#define) K
( __GIRDER_SHORT_H__) p n
() N
(#include) K
( ") p
(girder.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
() N
(namespace View {) N
(  class GirderShort: public Girder {) N
(    private:) N
(    public:) N
(      GirderShort\(SDL_Renderer *, ) S
(int) k
( d = ZERO_DEGREES\);) p n
(      ~GirderShort\(\);) N
(  };) N
(}) N
() N
(#endif) K n
(girder_short.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(girder_short.cpp, girder_short.h) (35/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 36
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(green_grenade.h) str
(") p n
() N
(#define) K
( GREEN_GRENADE_FPC 3) p n
() N
(View::GreenGrenade::GreenGrenade\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplo) p n
(sion\) : ) N
() S 8 T (sprite\(GREEN_GRENADE_FPC, INFINITE_GOING\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Grenade) str
("\),) p n
() S 8 T (countdownText\(COUNTDOWN_TEXT_SIZE\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_GREEN_GRENADE, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->playedAboutToExplode = ) p
(false) k
(;) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_THROW_PROJECTIL\);) p n
(  ) S
(this) K
(->sound.playSound\(0\);) p n
() S 8 T () S
(this) K
(->countdown = countdown;) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
(}) N
() N
(View::GreenGrenade::~GreenGrenade\(\) {) N
() N
(}) N
() N
(void) k
( View::GreenGrenade::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
() S 8 T () S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render GreenGrenade animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() N
() S 8 T () S 16 T () S
(// Render countdown text) c n
() p 8 T () S 16 T () S
(this) K
(->countdownText.setText\(r, std::to_string\() p
(this) K
(->countdown\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setX\() p
(this) K
(->x + ) p
(this) K
(->texture.getWidth\(\) +  ) p
(t) K n
(his) S
(->countdownText.getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setY\() p
(this) K
(->y - ) p
(this) K
(->countdownText.getHeight) p n
(\(\) / 2\);) N
() S 8 T () S 16 T () S
(this) K
(->countdownText.render\(r, camX, camY\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(green_grenade.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __GREEN_GRENADE_H__) p n
(#define) K
( __GREEN_GRENADE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
() N
() N
(namespace View {) N
(  class GreenGrenade: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
(      RectangleText countdownText;) N
() N
(    public:) N
(      GreenGrenade\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion = 100\);) p n
(      ~GreenGrenade\(\);) N
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(green_grenade.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(green_grenade.cpp, green_grenade.h) (36/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 37
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(holy_grenade.h) str
(") p n
() N
(#define) K
( HOLY_GRENADE_FPC 3) p n
(#define) K
( COUNTDOWN_HOLY_SOUND 2) p n
() N
(View::HolyGrenade::HolyGrenade\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosi) p n
(on\) : ) N
() S 8 T (sprite\(HOLY_GRENADE_FPC, INFINITE_GOING\),) N
() S 8 T (explosion\(r, ratioExplosion, ") S
(Holy Grenade) str
("\),) p n
() S 8 T (countdownText\(COUNTDOWN_TEXT_SIZE\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_HOLY_GRENADE, r\);) p n
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
() N
() S 8 T () S
(this) K
(->exploded = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->finished = ) p
(false) k
(;) p n
() N
() S 8 T () S
(this) K
(->sound.setSound\(gPath.PATH_SOUND_THROW_PROJECTIL\);) p n
(  ) S
(this) K
(->sound.playSound\(0\);) p n
() S 8 T () S
(this) K
(->countdown = countdown;) p n
() S 8 T () S
(this) K
(->ratioExplosion = ratioExplosion;) p n
() N
(  ) S
(this) K
(->holySound.setSound\(gPath.PATH_SOUND_HOLY\);) p n
(  ) S
(this) K
(->holySoundPlayed = ) p
(false) k
(;) p n
() S 8 T () S
(this) K
(->playedAboutToExplode = ) p
(false) k
(;) p n
(}) N
() N
(View::HolyGrenade::~HolyGrenade\(\) {) N
() N
(}) N
() N
(void) k
( View::HolyGrenade::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
() S 8 T () S
(if) K
( \(!) p
(this) K
(->exploded\) {) p n
() S 8 T () S 16 T () S
(// Render HolyGrenade animation) c n
() p 8 T () S 16 T (SDL_Rect clip = ) S
(this) K
(->sprite.getNextClip\(\);) p n
() S 8 T () S 16 T () S
(this) K
(->texture.render\(r, ) p
(this) K
(->x - camX, ) p
(this) K
(->y - camY, &clip\);) p n
() N
(    ) S
(if) K
( \(!) p
(this) K
(->holySoundPlayed && ) p
(this) K
(->countdown <= COUNTDOWN_HOLY_SOUND\) {) p n
(      ) S
(this) K
(->holySound.playSound\(0\);) p n
(      ) S
(this) K
(->holySoundPlayed = ) p
(true) k
(;) p n
(    }) N
() N
() S 8 T () S 16 T () S
(// Render countdown text) c n
() p 8 T () S 16 T () S
(this) K
(->countdownText.setText\(r, std::to_string\() p
(this) K
(->countdown\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setX\() p
(this) K
(->x + ) p
(this) K
(->texture.getWidth\(\) +  ) p
(t) K n
(his) S
(->countdownText.getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S
(this) K
(->countdownText.setY\() p
(this) K
(->y - ) p
(this) K
(->countdownText.getHeight) p n
(\(\) / 2\);) N
() S 8 T () S 16 T () S
(this) K
(->countdownText.render\(r, camX, camY\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(if) K
( \(!) p
(this) K
(->explosion.finishedExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setX\() p
(this) K
(->x + ) p
(this) K
(->getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.setY\() p
(this) K
(->y + ) p
(this) K
(->getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->explosion.render\(r, camX, camY\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->finished = ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) S
(holy_grenade.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __HOLY_GRENADE_H__) p n
(#define) K
( __HOLY_GRENADE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(explosion.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
() N
() N
(namespace View {) N
(  class HolyGrenade: public Projectil {) N
(    private:) N
(      SpriteAnimation sprite;) N
(      Explosion explosion;) N
(      RectangleText countdownText;) N
(      SoundEffect holySound;) N
(      bool holySoundPlayed;) N
() N
(    public:) N
(      HolyGrenade\(SDL_Renderer * r, ) S
(int) k
( countdown, ) p
(int) k
( ratioExplosion = 100\);) p n
(      ~HolyGrenade\(\);) N
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer * r, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(holy_grenade.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(holy_grenade.cpp, holy_grenade.h) (37/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 38
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(inventory.h) str
(") p n
() N
(View::Inventory::~Inventory\() S
(void) k
(\) {) p n
(  ) N
(}) N
() N
(void) k
( View::Inventory::toggleOpen\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->open = !) p
(this) K
(->open;) p n
(}) N
() N
(bool) k
( View::Inventory::isOpen\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->open;) p n
(}) N
(          ) S
(inventory.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(inventory_editor.h) str
(") p n
() N
(View::EditorInventory::EditorInventory\(SDL_Renderer * r, size_t amountTeams, ) S
(int) k
() p n
( healthConfig\) :) N
(  amountTeams\(amountTeams\), font\(gPath.PATH_FONT_ARIAL_BOLD, TEXT_SUPPLIES_SIZE\)) N
(,) N
(  worm\(r, ") S
(Worm) str
(", 0, healthConfig\),) p n
(  girderShort\(r, 0\),) N
(  girderLong\(r,0\) {) N
(  ) N
(  ) S
(// Short girder) c n
(  ItemIcon * icon = ) p
(new) K
( ItemIcon;) p n
(  icon->texture.loadFromFile\(gPath.PATH_ICON_SHORT_GIRDER, r\);) N
(  icon->selected = ) S
(true) k
(;) p n
(  icon->supplies = INFINITY_SUPPLIES;) N
(  icon->itemName = WEAPON_NAME_SHORT_GIRDER;) N
(  ) S
(this) K
(->items.push_back\(icon\);) p n
() N
(  icon = ) S
(new) K
( ItemIcon;) p n
(  icon->texture.loadFromFile\(gPath.PATH_ICON_LONG_GIRDER, r\);) N
(  icon->selected = ) S
(false) k
(;) p n
(  icon->supplies = INFINITY_SUPPLIES;) N
(  icon->itemName = WEAPON_NAME_LONG_GIRDER;) N
(  ) S
(this) K
(->items.push_back\(icon\);) p n
() N
(  ) S
(// Worms teams) c n
(  ) p
(for) K
( \(size_t i = 1 ; i <= amountTeams ; i++\) {) p n
(    icon = ) S
(new) K
( ItemIcon;) p n
(    icon->texture.loadFromFile\(gPath.PATH_PLAIN_WORM, r\);) N
(    icon->selected = ) S
(false) k
(;) p n
(    icon->supplies = AMOUNT_WORMS_PER_TEAM;) N
(    icon->itemName = std::to_string\(i\); ) S
(// Team ID) c n
(    ) p
(this) K
(->items.push_back\(icon\);) p n
(  }) N
() N
(  ) S
(this) K
(->open = ) p
(false) k
(;) p n
(  ) S
(this) K
(->girdersDegrees = ZERO_DEGREES;) p n
(  ) S
(this) K
(->wormsHealth = healthConfig;) p n
() N
(  ) S
(this) K
(->iconWidth = ) p
(this) K
(->items.back\(\)->texture.getWidth\(\);) p n
(  ) S
(this) K
(->iconHeight = ) p
(this) K
(->items.back\(\)->texture.getHeight\(\);) p n
() N
(  ) S
(this) K
(->girderClick.setSound\(gPath.PATH_SOUND_GIRDER\);) p n
(  ) S
(this) K
(->wormClick.setSound\(gPath.PATH_SOUND_TELEPORT\);) p n
(}) N
() N
(View::EditorInventory::~EditorInventory\(\) {) N
(  ) S
(for) K
( \(size_t i = 0 ; i < ) p
(this) K
(->items.size\(\) ; i++\) {) p n
(    ) S
(delete) K
( ) p
(this) K
(->items[i];) p n
(  }) N
(}) N
() N
(void) k
( View::EditorInventory::render\(SDL_Renderer * r\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->open\) {) p n
(    SDL_Color colors[] = {) N
(      {0, 0, 0, 0},) N
(      {255, 0, 0, 0},) N
(      {0, 255, 0, 0},) N
(      {0, 0, 255, 0}) N
(    };) N
() N
(    std::vector<ItemIcon *>::iterator it = ) S
(this) K
(->items.begin\(\);) p n
(inventory_editor.cpp) (Page 1/7) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory.cpp, inventory_editor.cpp) (38/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 39
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    ) S
(// Render short girder) c n
(    \(*it\)->texture.render\(r, ) p
(this) K
(->xOffset, ) p
(this) K
(->yOffset, ) p
(this) K
(->iconWidth, ) p
(this) K
() p n
(->iconHeight\);) N
(    ) S
(if) K
( \(\(*it\)->selected\) {) p n
(      ) S
(this) K
(->renderItemSelected\(r, ) p
(this) K
(->xOffset, ) p
(this) K
(->yOffset, *it\);) p n
(    }) N
(    it++;) N
() N
(    \(*it\)->texture.render\(r, ) S
(this) K
(->xOffset, ) p
(this) K
(->yOffset + ) p
(this) K
(->iconHeight, ) p
(th) K n
(is) S
(->iconWidth, ) p
(this) K
(->iconHeight\);) p n
(    ) S
(if) K
( \(\(*it\)->selected\) {) p n
(      ) S
(this) K
(->renderItemSelected\(r, ) p
(this) K
(->xOffset, ) p
(this) K
(->yOffset + ) p
(this) K
(->iconHeigh) p n
(t, *it\);) N
(    }) N
(    it++;) N
() N
(    ) S
(for) K
( \() p
(int) k
( i = POS_FIRST_WORMS_TEAM ; it != ) p
(this) K
(->items.end\(\) ; it++, i++\) {) p n
(      size_t teamId = std::stoi\(\(*it\)->itemName\);) N
() N
(      ) S
(// Black rect) c n
(      SDL_Rect blackRect = {) p n
(        ) S
(this) K
(->xOffset,) p n
(        ) S
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeight,) p n
(        ) S
(this) K
(->iconWidth,) p n
(        ) S
(this) K
(->iconHeight) p n
(      };) N
(      SDL_SetRenderDrawColor\(r, 0x00, 0x00, 0x00, 0xFF\);        ) N
(      SDL_RenderFillRect\(r, &blackRect\);) N
() N
(      ) S
(// Color rect) c n
(      SDL_Rect colorRect = {) p n
(        ) S
(this) K
(->xOffset + PADDING,) p n
(        ) S
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeight + PADDING,) p n
(        ) S
(this) K
(->iconWidth - 2 * PADDING,) p n
(        ) S
(this) K
(->iconHeight - 2 * PADDING) p n
(      };) N
(      SDL_SetRenderDrawColor\(r, colors[teamId].r, colors[teamId].g, colors[teamI) N
(d].b, 0xFF\);) N
(      SDL_RenderFillRect\(r, &colorRect\);) N
() N
(      ) S
(// Worm icon) c n
(      \(*it\)->texture.render\(r, ) p
(this) K
(->xOffset, ) p
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeig) p n
(ht\);) N
() N
(      ) S
(if) K
( \(\(*it\)->selected\) {) p n
(        ) S
(this) K
(->renderItemSelected\(r, ) p
(this) K
(->xOffset, ) p
(this) K
(->yOffset + i * ) p
(this) K
(->ico) p n
(nHeight, *it\);) N
(      } ) N
(    }) N
(  }) N
(}) N
() N
(void) k
( View::EditorInventory::renderItemSelected\(SDL_Renderer * renderer, ) p
(int) k
( x, ) p
(i) k n
(nt) S
( y, ItemIcon * item\) {) p n
(  SDL_Rect outlineRect = { ) N
(    x,) N
(    y,) N
(    ) S
(this) K
(->iconWidth, ) p n
(    ) S
(this) K
(->iconHeight) p n
(  };) N
() N
(inventory_editor.cpp) (Page 2/7) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(// Color blanco) c n
(  SDL_SetRenderDrawColor\(renderer, 0xFF, 0xFF, 0xFF, 0xFF\); ) p n
(  ) S
(// Dibujamos rectangulo blanco en item seleccionado       ) c n
(  SDL_RenderDrawRect\(renderer, &outlineRect\);) p n
() N
(  ) S
(// Render text supplies) c n
(  SDL_Color white = {255, 255, 255, 0};) p n
() N
(  std::string supplies;) N
(  ) S
(if) K
( \(item->supplies != INFINITY_SUPPLIES\) {) p n
(    supplies = std::to_string\(item->supplies\);) N
(  } ) S
(else) K
( {) p n
(    supplies = ") S
(oo) str
(";) p n
(  }) N
(  ) S
(this) K
(->suppliesTexture.loadFromRenderedText\(renderer, ) p
(this) K
(->font, ") p
(Supplies ) str
(" + s) p n
(upplies, white\);) N
() N
(  SDL_Rect rectSupplies = { ) N
(    x + ) S
(this) K
(->iconWidth + PADDING,) p n
(    y + ) S
(this) K
(->iconHeight / 2 - \() p
(this) K
(->suppliesTexture.getHeight\(\) + PADDING * 2\)) p n
( / 2,) N
(    ) S
(this) K
(->suppliesTexture.getWidth\(\) + PADDING * 2, ) p n
(    ) S
(this) K
(->suppliesTexture.getHeight\(\) + PADDING * 2,) p n
(  };) N
() N
(  ) S
(// Color negro) c n
(  SDL_SetRenderDrawColor\(renderer, 0x00, 0x00, 0x00, 0xFF\); ) p n
(  ) S
(// Dibujamos rectangulo negro en item seleccionado       ) c n
(  SDL_RenderFillRect\(renderer, &rectSupplies\);) p n
() N
(  ) S
(this) K
(->suppliesTexture.render\(renderer, x + ) p
(this) K
(->iconWidth + PADDING * 2, y + ) p
() K n
(this) S
(->iconHeight / 2 - \() p
(this) K
(->suppliesTexture.getHeight\(\) + PADDING * 2\) / 2 + P) p n
(ADDING\);) N
(}) N
() N
(void) k
( View::EditorInventory::renderSelectedInMouse\(SDL_Renderer * r\) {) p n
(  ) S
(int) k
( mouseX, mouseY;) p n
(  SDL_GetMouseState\(&mouseX, &mouseY\);) N
() N
(  ) S
(for) K
( \(size_t i = 0; i < ) p
(this) K
(->items.size\(\) ; i++\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->items.at\(i\)->selected\) {) p n
(      ) S
(// Short girder) c n
(      ) p
(if) K
( \(i == POS_GIRDER_SHORT\) {) p n
(        ) N
(        ) S
(// View::GirderShort g\(r, this->girdersDegrees\);) c n
(        ) p
(// g.setX\(0\);) c n
(        ) p
(// g.setY\(0\);) c n
(        ) p
(//g.render\(r, -mouseX, -mouseY\);) c n
(        ) p
(this) K
(->girderShort.setX\(0\);) p n
(        ) S
(this) K
(->girderShort.setY\(0\);) p n
(        ) S
(this) K
(->girderShort.render\(r, -mouseX, -mouseY\);) p n
(      } ) S
(else) K
( ) p
(if) K
( \(i == POS_GIRDER_LONG\) {) p n
(        ) S
(// View::GirderLong g\(r, this->girdersDegrees\);) c n
(        ) p
(// g.setX\(0\);) c n
(        ) p
(// g.setY\(0\);) c n
(        ) p
(// g.render\(r, -mouseX, -mouseY\);) c n
(        ) p
(this) K
(->girderLong.setX\(0\);) p n
(        ) S
(this) K
(->girderLong.setY\(0\);) p n
(        ) S
(this) K
(->girderLong.render\(r, -mouseX, -mouseY\);) p n
(      } ) S
(else) K
( {) p n
(        ) S
(if) K
( \() p
(this) K
(->items.at\(i\)->supplies\) {) p n
(          ) S
(//std::string name\("Worm " + std::to_string\(AMOUNT_WORMS_PER_TEAM - th) c n
(inventory_editor.cpp) (Page 3/7) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_editor.cpp) (39/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 40
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(is->items.at\(i\)->supplies + 1\)\);) c n
(          ) p
(this) K
(->worm.setX\(0\);) p n
(          ) S
(this) K
(->worm.setY\(0\);) p n
(          ) S
(this) K
(->worm.setDataConfiguration\(NO_DATA\);) p n
(          ) S
(//this->worm.setTeamId\(std::stoi\(this->items.at\(i\)->itemName\)\);) c n
(          ) p
(//View::Worm w\(r, name, std::stoi\(this->items.at\(i\)->itemName\), this->) c n
(wormsHealth\);) N
(          ) p
(this) K
(->worm.render\(r, -mouseX, -mouseY\);) p n
(          ) S
(//w.setX\(0\);) c n
(          ) p
(//w.setY\(0\);) c n
(          ) p
(//w.render\(r, -mouseX, -mouseY\);) c n
(        }        ) p n
(      }) N
(    }) N
(  }) N
(}) N
() N
(// Evite mirar y entender este metodo) c n
(// puede causar migra\303\261a) N
(void) k
( View::EditorInventory::handleEvent\() p n
(  SDL_Renderer * r,) N
(  SDL_Event & e,) N
(  View::MapGame & map, ) N
(  ) S
(int) k
( camX,) p n
(  ) S
(int) k
( camY) p n
(  \) {) N
() N
(  ) S
(if) K
( \(e.type == SDL_KEYDOWN\) {) p n
(    ) S
(// Si es Q y el inventario esta abierto) c n
(    ) p
(// elige el arma siguiente) c n
(    ) p
(if) K
( \(e.key.keysym.sym == SDLK_q\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->isOpen\(\)\) {) p n
(        ) S
(this) K
(->pickNextItem\(\);) p n
(      }) N
(    } ) N
(    ) S
(// Si es R y el inventario esta abierto) c n
(    ) p
(// rotamos las vigas \(para usuarios sin ruedita\)) c n
(    ) p
(if) K
( \(e.key.keysym.sym == SDLK_r\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->isOpen\(\)\) {) p n
(        ) S
(// View::GirderShort g\(r, this->girdersDegrees\);) c n
(        ) p
(// g.rotateClockwise\(\);) c n
(        ) p
(// this->girdersDegrees = g.getCurrentDegrees\(\);) c n
(        ) p
(this) K
(->girderShort.rotateClockwise\(\);) p n
(        ) S
(this) K
(->girderLong.rotateClockwise\(\);) p n
(        ) S
(this) K
(->girdersDegrees = ) p
(this) K
(->girderShort.getCurrentDegrees\(\);) p n
(      }) N
(    } ) N
(  }) N
() N
(  ) S
(// Click derecho abre o cierra el inventario) c n
(  ) p
(if) K
( \(e.type == SDL_MOUSEBUTTONDOWN\) {) p n
(    ) S
(if) K
( \(e.button.button == SDL_BUTTON_RIGHT\) {) p n
(      ) S
(this) K
(->toggleOpen\(\);) p n
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(e.type == SDL_MOUSEBUTTONDOWN\) {) p n
(    ) S
(int) k
( mouseX, mouseY;) p n
(    SDL_GetMouseState\(&mouseX, &mouseY\);) N
(    ) S
(if) K
( \() p n
(      e.button.button == SDL_BUTTON_LEFT && ) N
(      ) S
(this) K
(->isMouseOnInventoryRanges\(mouseX, mouseY\) &&) p n
(inventory_editor.cpp) (Page 4/7) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(this) K
(->isOpen\(\)) p n
(    \) {) N
(      ) S
(this) K
(->handleClick\(\);) p n
(      ) S
(return) K
(;) p n
(    }) N
(  }) N
() N
(  ) S
(// Rotamos el dibujo de las vigas) c n
(  ) p
(if) K
( \(e.type == SDL_MOUSEWHEEL\) {) p n
(    ) S
(if) K
( \(e.wheel.y > 0\) {) p n
(      ) S
(//View::GirderShort g\(r, this->girdersDegrees\);) c n
(      ) p
(this) K
(->girderShort.rotateClockwise\(\);) p n
(      ) S
(this) K
(->girderLong.rotateClockwise\(\);) p n
(      ) S
(this) K
(->girdersDegrees = ) p
(this) K
(->girderShort.getCurrentDegrees\(\);) p n
(      ) S
(//this->girdersDegrees = g.getCurrentDegrees\(\);) c n
(    }) p n
(    ) S
(if) K
( \(e.wheel.y < 0\) {) p n
(      ) S
(//View::GirderShort g\(r, this->girdersDegrees\);) c n
(      ) p
(//g.rotateCounterClockwise\(\);) c n
(      ) p
(//this->girdersDegrees = g.getCurrentDegrees\(\);) c n
(      ) p
(this) K
(->girderShort.rotateCounterClockwise\(\);) p n
(      ) S
(this) K
(->girderLong.rotateCounterClockwise\(\);) p n
(      ) S
(this) K
(->girdersDegrees = ) p
(this) K
(->girderShort.getCurrentDegrees\(\);) p n
(    }) N
(  }) N
() N
(  ) S
(// Click izquierdo actualiza la coleccion de objetos estaticos) c n
(  ) p
(if) K
( \(e.type == SDL_MOUSEBUTTONDOWN\) {) p n
(    ) S
(if) K
( \(e.button.button == SDL_BUTTON_LEFT\) {) p n
(      ) S
(int) k
( mouseX, mouseY;) p n
(      SDL_GetMouseState\(&mouseX, &mouseY\);) N
() N
(      size_t index = ) S
(this) K
(->getIndexSelected\(\);) p n
(      ) N
(      ) S
(if) K
( \(index == POS_GIRDER_SHORT\) {) p n
(        map.addShortGirder\() S
(this) K
(->girdersDegrees, camX + mouseX, camY + mouseY\);) p n
(        ) S
(this) K
(->girderClick.playSound\(0\);) p n
(      } ) S
(else) K
( ) p
(if) K
( \(index == POS_GIRDER_LONG\) {) p n
(        map.addLongGirder\() S
(this) K
(->girdersDegrees, camX + mouseX, camY + mouseY\);) p n
(        ) S
(this) K
(->girderClick.playSound\(0\);) p n
(      } ) S
(else) K
( {) p n
(        ) S
(if) K
( \() p
(this) K
(->items.at\(index\)->supplies\) {) p n
(          ) S
(this) K
(->wormClick.playSound\(0\);) p n
(          ) S
(int) k
( teamId = std::stoi\() p
(this) K
(->items.at\(index\)->itemName\);) p n
(          std::string name\(") S
(Worm ) str
(" + std::to_string\(map.amountWormsTeam\(teamId\) ) p n
(+ 1\)\);) N
(          map.addWormInTeam\(teamId, name, ) S
(this) K
(->wormsHealth, camX + mouseX, camY) p n
( + mouseY\);) N
(          ) S
(this) K
(->items.at\(index\)->supplies--;) p n
(        }) N
(        ) N
(      }) N
(    }) N
(  }) N
(}) N
() N
(void) k
( View::EditorInventory::handleClick\() p
(void) k
(\) {) p n
(  ) S
(int) k
( mouseX, mouseY;) p n
(  SDL_GetMouseState\(&mouseX, &mouseY\);) N
() N
(  ) S
(if) K
( \() p
(this) K
(->isMouseOnInventoryRanges\(mouseX, mouseY\)\) {) p n
(    ) S
(for) K
( \(size_t i = 0 ; i < ) p
(this) K
(->items.size\(\) ; i++\) {) p n
(inventory_editor.cpp) (Page 5/7) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_editor.cpp) (40/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (6-7) 41
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ItemIcon * current = ) p
(this) K
(->items[i];) p n
(      ) S
(int) k
( lowLimit = ) p
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeight;) p n
(      ) S
(int) k
( upLimit = lowLimit + ) p
(this) K
(->iconHeight;) p n
(      ) S
(if) K
( \(current->selected && mouseY > lowLimit && mouseY < upLimit\) {) p n
(        ) S
(// Si clickeo el que ya estaba seleccionado no hacemos nada) c n
(        ) p
(break) K
(;) p n
(      }) N
() N
(      ) S
(// El seleccionado viejo hay que desseleccionarlo) c n
(      ) p
(if) K
( \(current->selected\) {) p n
(        current->selected = ) S
(false) k
(;) p n
(      }) N
() N
(      ) S
(// Y el clickeado hay que seleccionarlo) c n
(      ) p
(if) K
( \(mouseY > lowLimit && mouseY < upLimit\) {) p n
(        current->selected = ) S
(true) k
(;) p n
(      }) N
(    }) N
(  }) N
(}) N
() N
(bool) k
( View::EditorInventory::isMouseOnInventoryRanges\() p
(int) k
( x, ) p
(int) k
( y\) {) p n
(  ) S
(return) K
( \() p n
(    \() S
(this) K
(->xOffset < x\) && ) p n
(    \(x < ) S
(this) K
(->xOffset + ) p
(this) K
(->iconWidth\) &&) p n
(    \(y > ) S
(this) K
(->yOffset\) &&) p n
(    \(y < ) S
(this) K
(->yOffset + \() p
(int) k
(\)) p
(this) K
(->items.size\(\) * ) p
(this) K
(->iconHeight\)) p n
(  \);) N
(}) N
() N
(int) k
( View::EditorInventory::getIndexSelected\() p
(void) k
(\) {) p n
(  ) S
(for) K
( \(size_t i = 0 ; i < ) p
(this) K
(->items.size\(\) ; i++\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->items.at\(i\)->selected\) {) p n
(      ) S
(return) K
( i;) p n
(    }) N
(  }) N
(  ) S
(return) K
( -1;) p n
(}) N
() N
(void) k
( View::EditorInventory::updateWormsTeamSupplies\() p
(const) K
( std::map<size_t, std::) p n
(vector<View::Worm*>> & worms\) {) N
(  std::map<std::size_t, std::vector<View::Worm*>>::const_iterator team_it;) N
(  ) S
(for) K
( \(team_it = worms.begin\(\); team_it != worms.end\(\); ++team_it\) {) p n
(    std::vector<View::Worm*>::iterator worm_it;) N
(    ItemIcon * wormTeam = ) S
(this) K
(->items[team_it->first -1 + POS_FIRST_WORMS_TEAM];) p n
(    wormTeam->supplies = AMOUNT_WORMS_PER_TEAM - team_it->second.size\(\);) N
(  }) N
() N
(  ) S
(for) K
( \(size_t i = 1; i <= amountTeams; ++i\) {) p n
(    ) S
(if) K
( \(worms.find\(i\) == worms.end\(\)\) {) p n
(      ) S
(this) K
(->items[i -1 + POS_FIRST_WORMS_TEAM]->supplies = AMOUNT_WORMS_PER_TEAM) p n
(;) N
(    }) N
(  }) N
(}) N
() N
(void) k
( View::EditorInventory::pickNextItem\() p
(void) k
(\) {) p n
(  ) S
(for) K
( \(size_t i = 0; i < ) p
(this) K
(->items.size\(\) ; i++\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->items.at\(i\)->selected == ) p
(true) k
(\) {) p n
(      ) S
(if) K
( \(i == ) p
(this) K
(->items.size\(\) - 1\) {) p n
(        ) S
(this) K
(->items.back\(\)->selected = ) p
(false) k
(;) p n
(        ) S
(this) K
(->items.front\(\)->selected = ) p
(true) k
(;) p n
(inventory_editor.cpp) (Page 6/7) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      } ) p
(else) K
( {) p n
(        ) S
(this) K
(->items.at\(i\)->selected = ) p
(false) k
(;) p n
(        ) S
(this) K
(->items.at\(i+1\)->selected = ) p
(true) k
(;) p n
(      }) N
(      ) S
(break) K
(;) p n
(    }) N
(  }) N
(}) N
(inventory_editor.cpp) (Page 7/7) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_editor.cpp) (41/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 42
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __INVENTORY_EDITOR_H__) p n
(#define) K
( __INVENTORY_EDITOR_H__) p n
() N
(#include) K
( <iostream>) p n
(#include) K
( <string>) p n
(#include) K
( <vector>) p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(font.h) str
(") p n
(#include) K
( ") p
(inventory.h) str
(") p n
(#include) K
( ") p
(map_game.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(#define) K
( WEAPON_NAME_SHORT_GIRDER ") p
(Short girder) str
(") p n
(#define) K
( WEAPON_NAME_LONG_GIRDER ") p
(Long girder) str
(") p n
() N
(#define) K
( AMOUNT_WORMS_PER_TEAM 99) p n
(#define) K
( PADDING 5) p n
() N
(#define) K
( POS_GIRDER_SHORT 0) p n
(#define) K
( POS_GIRDER_LONG 1) p n
(#define) K
( POS_FIRST_WORMS_TEAM 2) p n
() N
(#define) K
( TEXT_SUPPLIES_SIZE 15) p n
() N
(namespace View {) N
(  class MapGame;) N
() N
(  class EditorInventory: public Inventory {) N
(    private:) N
(      size_t amountTeams;) N
(      degrees_t girdersDegrees;) N
(      ) S
(int) k
( wormsHealth;) p n
() N
(      Font font;) N
(      Texture suppliesTexture;) N
() N
(      SoundEffect girderClick;) N
(      SoundEffect wormClick;) N
() N
(      View::GirderShort girderShort;) N
(      View::GirderLong girderLong;) N
(      View::Worm worm;) N
() N
(      ) S
(// Devuelve el indice del item seleccionado) c n
(      ) p
(int) k
( getIndexSelected\() p
(void) k
(\);) p n
() N
(      ) S
(// Dibuja rect blanco en item seleccionado y el texto de supplies) c n
(      ) p
(void) k
( renderItemSelected\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, ItemIcon *\);) p n
() N
(      ) S
(// Handlea el click izquierdo del mouse) c n
(      virtual ) p
(void) k
( handleClick\() p
(void) k
(\);) p n
() N
(      ) S
(// Checkea si el mouse esta en las) c n
(      ) p
(// dimensiones del dibujo del inventario) c n
(      virtual bool isMouseOnInventoryRanges\() p
(int) k
(, ) p
(int) k
(\);) p n
() N
(      bool newGirderDeegres;) N
() N
(    public:) N
(inventory_editor.h) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(// Constructor por default con todas las armas) c n
(      EditorInventory\(SDL_Renderer *, size_t, ) p
(int) k
(\);) p n
() N
(      ) S
(// Destructor) c n
(      ~EditorInventory\(\);) p n
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer *\);) p n
() N
(      ) S
(// Dibuja el item elegido en la posicion del mouse) c n
(      ) p
(void) k
( renderSelectedInMouse\(SDL_Renderer *\);) p n
() N
(      ) S
(// Se le agrega al inventario del editor) c n
(      ) p
(// que actualice las colecciones de objetos estaticos) c n
(      ) p
(void) k
( handleEvent\() p n
(        SDL_Renderer *,) N
(        SDL_Event &, ) N
(        View::MapGame &,) N
(        ) S
(int) k
(,) p n
(        ) S
(int) k n
(      \);) p n
() N
(      ) S
(// Actualiza la cantidad de worms que se pueden poner) c n
(      ) p
(// Este metodo lo utiliza el map game dependiendo de cuantos) c n
(      ) p
(// gusanos hay en el mapa en el estado actual) c n
(      ) p
(void) k
( updateWormsTeamSupplies\() p
(const) K
( std::map<size_t, std::vector<View::Worm) p n
(*>> & worms\);) N
() N
(      virtual ) S
(void) k
( pickNextItem\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(inventory_editor.h) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_editor.h) (42/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 43
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __INVENTORY_H__) p n
(#define) K
( __INVENTORY_H__) p n
() N
(#include) K
( <iostream>) p n
(#include) K
( <string>) p n
(#include) K
( <vector>) p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(girder_short.h) str
(") p n
(#include) K
( ") p
(girder_long.h) str
(") p n
() N
(#define) K
( INFINITY_SUPPLIES -1) p n
() N
(struct) k
( ItemIcon {) p n
(  View::Texture texture;) N
(  std::string itemName;) N
(  ) S
(int) k
( supplies;) p n
(  bool selected;) N
(};) N
() N
(namespace View {) N
(  class Inventory {) N
(    protected:) N
(      std::vector<ItemIcon *> items;) N
(      bool open;) N
(      ) S
(const) K
( ) p
(int) k
( xOffset = 10;) p n
(      ) S
(const) K
( ) p
(int) k
( yOffset = 10;) p n
(      ) S
(int) k
( iconWidth;) p n
(      ) S
(int) k
( iconHeight;) p n
() N
(      virtual ) S
(void) k
( handleClick\() p
(void) k
(\) = 0;) p n
(      virtual bool isMouseOnInventoryRanges\() S
(int) k
(, ) p
(int) k
(\) = 0;) p n
(      ) N
(    public:) N
(      virtual ~Inventory\(\);) N
() N
(      ) S
(// Checkea si el inventario esta abierto) c n
(      bool isOpen\() p
(void) k
(\) ) p
(const) K
(;) p n
() N
(      ) S
(// Invierte el estado de 'open') c n
(      ) p
(void) k
( toggleOpen\() p
(void) k
(\);) p n
() N
(      ) S
(// Marca como seleccionada el item siguiente) c n
(      virtual ) p
(void) k
( pickNextItem\() p
(void) k
(\) = 0;) p n
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer *\) = 0;) p n
(  };) N
(}) N
() N
(#endif) K
(inventory.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(inventory.h) str
(") p n
(#include) K
( ") p
(inventory_weapons.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(View::WeaponsInventory::WeaponsInventory\(SDL_Renderer * r, ) S
(const) K
( YAML::Node & in) p n
(itInv\) :) N
(  font\(gPath.PATH_FONT_ARIAL_BOLD, TEXT_SUPPLIES_SIZE\) {) N
() N
(  ) S
(this) K
(->iconPaths[w_bazooka] = gPath.PATH_ICON_BAZOOKA;) p n
(  ) S
(this) K
(->iconPaths[w_mortar] = gPath.PATH_ICON_MORTAR;) p n
(  ) S
(this) K
(->iconPaths[w_cluster] = gPath.PATH_ICON_RED_GRENADE;) p n
(  ) S
(this) K
(->iconPaths[w_green_grenade] = gPath.PATH_ICON_GREEN_GRENADE;) p n
(  ) S
(this) K
(->iconPaths[w_banana] = gPath.PATH_ICON_BANANA;) p n
(  ) S
(this) K
(->iconPaths[w_holy_grenade] = gPath.PATH_ICON_HOLY_GRENADE;) p n
(  ) S
(this) K
(->iconPaths[w_air_strike] = gPath.PATH_ICON_AIR_STRIKE;) p n
(  ) S
(this) K
(->iconPaths[w_dynamite] = gPath.PATH_ICON_DYNAMITE;) p n
(  ) S
(this) K
(->iconPaths[w_bat] = gPath.PATH_ICON_BASEBALL;) p n
(  ) S
(this) K
(->iconPaths[w_teleport] = gPath.PATH_ICON_TELEPORT;) p n
() N
(  YAML::const_iterator invIt = initInv.begin\(\);) N
(  ) S
(bool) k
( isFirstItem = ) p
(true) k
(;) p n
(  ) S
(for) K
( \(; invIt != initInv.end\(\) ; invIt++\) {) p n
(    ItemIcon * icon = ) S
(new) K
( ItemIcon;) p n
(    weapon_t idItem = \(weapon_t\)invIt->first.as<) S
(int) k
(>\(\);) p n
(    icon->texture.loadFromFile\() S
(this) K
(->iconPaths[idItem], r\);) p n
(    icon->supplies = invIt->second[") S
(supplies) str
("].as<) p
(int) k
(>\(\);) p n
(    std::string itName\(invIt->second[") S
(item_name) str
("].as<std::string>\(\)\);) p n
(    icon->itemName = itName;) N
() N
(    ) S
(if) K
( \(isFirstItem\) {) p n
(      icon->selected = ) S
(true) k
(;) p n
(      isFirstItem = ) S
(false) k
(;) p n
(    } ) S
(else) K
( {) p n
(      icon->selected = ) S
(false) k
(;) p n
(    }) N
(    ) N
(    ) S
(this) K
(->itemsMap[idItem] = icon;) p n
(  }) N
() N
(  ) S
(this) K
(->open = ) p
(false) k
(;) p n
() N
(  ) S
(// Tamanio grande hardcodeado) c n
(  ) p
(this) K
(->iconWidth = 60;) p n
(  ) S
(this) K
(->iconHeight = 60;) p n
(}) N
() N
(View::WeaponsInventory::~WeaponsInventory\(\) {) N
(  ) S
(for) K
( \(size_t i = 0 ; i < ) p
(this) K
(->items.size\(\) ; i++\) {) p n
(    ) S
(delete) K
( ) p
(this) K
(->items[i];) p n
(  }) N
() N
(  std::map<weapon_t, ItemIcon *>::iterator it = ) S
(this) K
(->itemsMap.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->itemsMap.end\(\) ; it++\) {) p n
(    ) S
(delete) K
( it->second;) p n
(  }) N
(}) N
() N
(void) k
( View::WeaponsInventory::setIconSide\() p
(int) k
( size\) {) p n
(  ) S
(this) K
(->iconWidth = size;) p n
(  ) S
(this) K
(->iconHeight = size;) p n
(}) N
(inventory_weapons.cpp) (Page 1/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory.h, inventory_weapons.cpp) (43/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 44
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(void) k
( View::WeaponsInventory::render\(SDL_Renderer * renderer\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->open\) {) p n
(    std::map<weapon_t, ItemIcon *>::iterator itMap = ) S
(this) K
(->itemsMap.begin\(\);) p n
(    size_t i = 0;) N
(    ) S
(for) K
( \(; itMap != ) p
(this) K
(->itemsMap.end\(\) ; itMap++\) {) p n
(      itMap->second->texture.render\() N
(        renderer, ) N
(        ) S
(this) K
(->xOffset,) p n
(        ) S
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeight,) p n
(        ) S
(this) K
(->iconWidth,) p n
(        ) S
(this) K
(->iconHeight) p n
(      \);) N
() N
(      ) S
(if) K
( \(itMap->second->selected\) {) p n
(        ) S
(this) K
(->renderItemSelected\() p n
(          renderer,) N
(          ) S
(this) K
(->xOffset,) p n
(          ) S
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeight,) p n
(          itMap->second) N
(        \);) N
(      }) N
() N
(      i++;) N
(    }) N
(  }) N
(}) N
() N
(void) k
( View::WeaponsInventory::renderItemSelected\(SDL_Renderer * renderer, ) p
(int) k
( x, ) p
() k n
(int) S
( y, ItemIcon * item\) {) p n
(  SDL_Rect outlineRect = { ) N
(    x,) N
(    y,) N
(    ) S
(this) K
(->iconWidth, ) p n
(    ) S
(this) K
(->iconHeight) p n
(  };) N
(  ) S
(// Color verde) c n
(  SDL_SetRenderDrawColor\(renderer, 0x00, 0xFF, 0x00, 0xFF\); ) p n
(  ) S
(// Dibujamos rectangulo verde en arma seleccionada       ) c n
(  SDL_RenderDrawRect\(renderer, &outlineRect\);) p n
() N
(  ) S
(// Render text supplies) c n
(  SDL_Color white = {255, 255, 255, 0};) p n
() N
(  std::string supplies;) N
(  ) S
(if) K
( \(item->supplies != INFINITY_SUPPLIES\) {) p n
(    supplies = std::to_string\(item->supplies\);) N
(  } ) S
(else) K
( {) p n
(    supplies = ") S
(oo) str
(";) p n
(  }) N
(  ) S
(this) K
(->suppliesTexture.loadFromRenderedText\(renderer, ) p
(this) K
(->font, ") p
(Supplies ) str
(" + s) p n
(upplies, white\);) N
() N
(  SDL_Rect rectSupplies = { ) N
(    x + ) S
(this) K
(->iconWidth + PADDING,) p n
(    y + ) S
(this) K
(->iconHeight / 2 - \() p
(this) K
(->suppliesTexture.getHeight\(\) + PADDING * 2\)) p n
( / 2,) N
(    ) S
(this) K
(->suppliesTexture.getWidth\(\) + PADDING * 2, ) p n
(    ) S
(this) K
(->suppliesTexture.getHeight\(\) + PADDING * 2,) p n
(  };) N
() N
(  ) S
(// Color negro) c n
(inventory_weapons.cpp) (Page 2/5) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  SDL_SetRenderDrawColor\(renderer, 0x00, 0x00, 0x00, 0xFF\); ) p n
(  ) S
(// Dibujamos rectangulo negro en item seleccionado       ) c n
(  SDL_RenderFillRect\(renderer, &rectSupplies\);) p n
() N
(  ) S
(this) K
(->suppliesTexture.render\() p n
(    renderer,) N
(    x + ) S
(this) K
(->iconWidth + PADDING * 2, ) p n
(    y + ) S
(this) K
(->iconHeight / 2 - \() p
(this) K
(->suppliesTexture.getHeight\(\) + PADDING * 2\)) p n
( / 2 + PADDING) N
(  \);) N
(}) N
() N
(void) k
( View::WeaponsInventory::handleEvent\(SDL_Event & e\) {) p n
(  ) S
(if) K
( \(e.type == SDL_KEYDOWN\) {) p n
(    ) S
(// Si es Q y el inventario esta abierto) c n
(    ) p
(// elige el arma siguiente) c n
(    ) p
(if) K
( \(e.key.keysym.sym == SDLK_q\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->isOpen\(\)\) {) p n
(        ) S
(this) K
(->pickNextItem\(\);) p n
(      } ) S
(else) K
( {) p n
(        ) S
(this) K
(->toggleOpen\(\);) p n
(      }) N
(    } ) N
() N
(    ) S
(if) K
( \(e.key.keysym.sym == SDLK_e\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->isOpen\(\)\) {) p n
(        ) S
(this) K
(->toggleOpen\(\);) p n
(      }) N
(    }) N
(  }) N
() N
(  ) S
(// Click derecho abre o cierra el inventario) c n
(  ) p
(if) K
( \(e.type == SDL_MOUSEBUTTONDOWN\) {) p n
(    ) S
(if) K
( \(e.button.button == SDL_BUTTON_RIGHT\) {) p n
(      ) S
(this) K
(->toggleOpen\(\);) p n
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(e.type == SDL_MOUSEBUTTONDOWN\) {) p n
(    ) S
(int) k
( mouseX, mouseY;) p n
(    SDL_GetMouseState\(&mouseX, &mouseY\);) N
() N
(    ) S
(if) K
( \() p n
(      e.button.button == SDL_BUTTON_LEFT && ) N
(      ) S
(this) K
(->isMouseOnInventoryRanges\(mouseX, mouseY\) &&) p n
(      ) S
(this) K
(->isOpen\(\)) p n
(    \) {) N
(      ) S
(this) K
(->handleClick\(\);) p n
(      ) S
(return) K
(;) p n
(    }) N
(  }) N
(}) N
() N
(void) k
( View::WeaponsInventory::handleClick\() p
(void) k
(\) {) p n
(  ) S
(int) k
( mouseX, mouseY;) p n
(  SDL_GetMouseState\(&mouseX, &mouseY\);) N
() N
(  ) S
(if) K
( \() p
(this) K
(->isMouseOnInventoryRanges\(mouseX, mouseY\)\) {) p n
(    std::map<weapon_t, ItemIcon *>::iterator it = ) S
(this) K
(->itemsMap.begin\(\);) p n
(    size_t i = 0;) N
(    ) S
(for) K
( \(; it != ) p
(this) K
(->itemsMap.end\(\) ; it++\) {) p n
(      ItemIcon * current = it->second;) N
(inventory_weapons.cpp) (Page 3/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_weapons.cpp) (44/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 45
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(int) k
( lowLimit = ) p
(this) K
(->yOffset + i * ) p
(this) K
(->iconHeight;) p n
(      ) S
(int) k
( upLimit = lowLimit + ) p
(this) K
(->iconHeight;) p n
(      ) S
(if) K
( \(current->selected && mouseY > lowLimit && mouseY < upLimit\) {) p n
(        ) S
(// Si clickeo el que ya estaba seleccionado no hacemos nada) c n
(        ) p
(break) K
(;) p n
(      }) N
() N
(      ) S
(// El seleccionado viejo hay que desseleccionarlo) c n
(      ) p
(if) K
( \(current->selected\) {) p n
(        current->selected = ) S
(false) k
(;) p n
(      }) N
() N
(      ) S
(// Y el clickeado hay que seleccionarlo) c n
(      ) p
(if) K
( \(mouseY > lowLimit && mouseY < upLimit\) {) p n
(        current->selected = ) S
(true) k
(;) p n
(      }) N
(      ) N
(      i++;) N
(    }) N
(  }) N
(}) N
() N
(bool) k
( View::WeaponsInventory::isMouseOnInventoryRanges\() p
(int) k
( x, ) p
(int) k
( y\) {) p n
(  ) S
(return) K
( \() p n
(    \() S
(this) K
(->xOffset < x\) && ) p n
(    \(x < ) S
(this) K
(->xOffset + ) p
(this) K
(->iconWidth\) &&) p n
(    \(y > ) S
(this) K
(->yOffset\) &&) p n
(    \(y < ) S
(this) K
(->yOffset + \() p
(int) k
(\)) p
(this) K
(->itemsMap.size\(\) * ) p
(this) K
(->iconHeight\)) p n
(  \);) N
(}) N
() N
(weapon_t View::WeaponsInventory::getSelectedWeapon\() S
(void) k
(\) {) p n
(  std::map<weapon_t, ItemIcon *>::iterator it = ) S
(this) K
(->itemsMap.begin\(\);) p n
(  weapon_t weapon;) N
() N
(  ) S
(for) K
( \(; it != ) p
(this) K
(->itemsMap.end\(\) ; it++\) {) p n
(    ) S
(if) K
( \(it->second->selected\) {) p n
(      weapon = it->first;) N
(      ) S
(break) K
(;) p n
(    }) N
(  }) N
() N
(  ) S
(return) K
( weapon;) p n
(}) N
() N
(void) k
( View::WeaponsInventory::update\() p
(const) K
( YAML::Node & node\) {) p n
(  YAML::const_iterator it = node.begin\(\);) N
(  ) S
(for) K
( \(; it != node.end\(\) ; it++\) {) p n
(    weapon_t weaponId = \(weapon_t\)it->first.as<) S
(int) k
(>\(\);) p n
(    ) S
(int) k
( supplies = it->second[") p
(supplies) str
("].as<) p
(int) k
(>\(\);) p n
(    ) S
(if) K
( \(supplies\) {) p n
(      ) S
(if) K
( \() p
(this) K
(->itemsMap.find\(weaponId\) != ) p
(this) K
(->itemsMap.end\(\)\) {) p n
(        ) S
(this) K
(->itemsMap[weaponId]->supplies = supplies;) p n
(      }) N
(    } ) S
(else) K
( {) p n
(      ) S
(if) K
( \() p
(this) K
(->itemsMap.find\(weaponId\) != ) p
(this) K
(->itemsMap.end\(\)\) {) p n
(        std::map<weapon_t, ItemIcon *>::iterator itMap = ) S
(this) K
(->itemsMap.begin\(\);) p n
() N
(        ) S
(for) K
( \(; itMap != ) p
(this) K
(->itemsMap.end\(\) ; itMap++\) {) p n
(          ) S
(if) K
( \(itMap->first == weaponId && itMap->second->selected\) {) p n
(            itMap->second->selected = ) S
(false) k
(;) p n
(            itMap++;) N
(inventory_weapons.cpp) (Page 4/5) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            ) p
(if) K
( \(itMap != ) p
(this) K
(->itemsMap.end\(\)\) {) p n
(          ) N
(            } ) S
(else) K
( {) p n
(              itMap = ) S
(this) K
(->itemsMap.begin\(\);) p n
(            }) N
(            itMap->second->selected = ) S
(true) k
(;) p n
(          }) N
(        }) N
(        ) N
(        ) S
(delete) K
( ) p
(this) K
(->itemsMap[weaponId];) p n
(        ) S
(this) K
(->itemsMap.erase\(weaponId\);) p n
(      }) N
(    }) N
(  }) N
(}) N
() N
(void) k
( View::WeaponsInventory::pickNextItem\() p
(void) k
(\) {) p n
(  std::map<weapon_t, ItemIcon *>::iterator it = ) S
(this) K
(->itemsMap.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->itemsMap.end\(\) ; it++\) {) p n
(    ) S
(if) K
( \(it->second->selected\) {) p n
(      it->second->selected = ) S
(false) k
(;) p n
(      it++;) N
() N
(      ) S
(if) K
( \(it == ) p
(this) K
(->itemsMap.end\(\)\) {) p n
(        it = ) S
(this) K
(->itemsMap.begin\(\);) p n
(      }) N
() N
(      it->second->selected = ) S
(true) k
(;) p n
(      ) S
(break) K
(;) p n
(    }) N
(  }) N
(}) S
(inventory_weapons.cpp) (Page 5/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_weapons.cpp) (45/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 46
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __INVENTORY_WEAPONS_H__) p n
(#define) K
( __INVENTORY_WEAPONS_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(font.h) str
(") p n
(#include) K
( ") p
(inventory.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(#define) K
( WEAPON_NAME_BAZOOKA ") p
(Bazooka) str
(") p n
(#define) K
( WEAPON_NAME_MORTAR ") p
(Mortar) str
(") p n
(#define) K
( WEAPON_NAME_GREEN_GRENADE ") p
(Grenade) str
(") p n
(#define) K
( WEAPON_NAME_RED_GRENADE ") p
(Cluster) str
(") p n
(#define) K
( WEAPON_NAME_BANANA ") p
(Banana) str
(") p n
(#define) K
( WEAPON_NAME_HOLY_GRENADE ") p
(Holy grenade) str
(") p n
(#define) K
( WEAPON_NAME_DYNAMITE ") p
(Dynamite) str
(") p n
(#define) K
( WEAPON_NAME_BASEBALL ") p
(Baseball bat) str
(") p n
(#define) K
( WEAPON_NAME_AIR_STRIKE ") p
(Air strike) str
(") p n
(#define) K
( WEAPON_NAME_TELEPORT ") p
(Teleport) str
(") p n
() N
(#define) K
( TEXT_SUPPLIES_SIZE 15) p n
(#define) K
( PADDING 5) p n
() N
(// El click esta programado para funcionar) c n
(// con un inventario de columna unica) N
(#define) K
( MAX_COLS 1) p n
() N
(namespace View {) N
(  class WeaponsInventory: public Inventory {) N
(    private:) N
(      Font font;) N
(      Texture suppliesTexture;) N
(      std::map<weapon_t, std::string> iconPaths;) N
(      std::map<weapon_t, ItemIcon *> itemsMap;) N
() N
(      ) S
(// Handlea el click izquierdo del mouse) c n
(      virtual ) p
(void) k
( handleClick\() p
(void) k
(\);) p n
() N
(      ) S
(// Checkea si el mouse esta en las) c n
(      ) p
(// dimensiones del dibujo del inventario) c n
(      virtual bool isMouseOnInventoryRanges\() p
(int) k
(, ) p
(int) k
(\);) p n
() N
(      ) S
(// Dibuja rect blanco en item seleccionado y el texto de supplies) c n
(      ) p
(void) k
( renderItemSelected\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, ItemIcon *\);) p n
() N
(    public:) N
(      ) S
(// Constructor por default con todas las armas) c n
(      WeaponsInventory\(SDL_Renderer *, ) p
(const) K
( YAML::Node &\);) p n
() N
(      ) S
(// Destructor) c n
(      ~WeaponsInventory\(\);) p n
() N
(      virtual ) S
(void) k
( render\(SDL_Renderer *\);) p n
() N
(      ) S
(// Handlea un evento) c n
(      ) p
(void) k
( handleEvent\(SDL_Event &\);) p n
() N
(      ) S
(// Setea el tamanio de las vistas de los iconos) c n
(      ) p
(void) k
( setIconSide\() p
(int) k
(\);) p n
() N
(inventory_weapons.h) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(// Retorna el weapon_t seleccionado) c n
(      weapon_t getSelectedWeapon\() p
(void) k
(\);) p n
() N
(      ) S
(// Updatea el inventario con el nodo que envia el server) c n
(      ) p
(void) k
( update\() p
(const) K
( YAML::Node &\);) p n
() N
(      ) S
(// Pickea la siguiente arma) c n
(      virtual ) p
(void) k
( pickNextItem\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(inventory_weapons.h) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(inventory_weapons.h) (46/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 47
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(client_lobby.h) str
(") p n
(#include) K
( ") p
(socket_error.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(client_settings.h) str
(") p n
(#include) K
( <QApplication>) p n
() N
(#define) K
( MAX_QUEUE_MODELS 256) p n
() N
(// Variable global) c n
(Paths gPath;) p n
(ClientSettings gClientSettings;) N
() N
(int) k
( main\() p
(int) k
( argc, ) p
(char) k
( *argv[]\) ) p
(try) K
( {) p n
(    QApplication a\(argc, argv\);) N
(    ClientLobby w;) N
(    w.show\(\);) N
() N
(    ) S
(return) K
( a.exec\(\);) p n
(} ) S
(catch) K
(\() p
(const) K
( SocketError & e\) {) p n
() S 8 T (std::cout << e.what\(\) << std::endl;) N
(} ) S
(catch) K
(\() p
(const) K
( std::exception & e\) {) p n
() S 8 T () S 16 T (std::cout << e.what\(\) << std::endl;) N
(}) N
(main.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <sstream>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( ") p
(model_receiver.h) str
(") p n
(#include) K
( ") p
(protected_dynamics.h) str
(") p n
() N
(ModelReceiver::ModelReceiver\(Protocol * prot, ProtectedDynamics & dyn\) :) N
(protocol\(prot\),) N
(dynamics\(dyn\) {) N
(    keep_runing = ) S
(true) k
(;) p n
(}) N
() N
(ModelReceiver::~ModelReceiver\() S
(void) k
(\) {) p n
() N
(}) N
() N
(bool) k
( ModelReceiver::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) N
() N
(size_t ModelReceiver::getId\() S
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( 0;) p n
(}) N
() N
(void) k
( ModelReceiver::run\() p
(void) k
(\) {) p n
(    ) S
(while) K
( \() p
(this) K
(->keep_runing\) {) p n
(        YAML::Node newDynamics;) N
(        ) S
(this) K
(->protocol->rcvModel\(newDynamics\);) p n
(        ) S
(if) K
( \(newDynamics[") p
(game_status) str
("]\) {) p n
(            ) S
(if) K
( \(newDynamics[") p
(game_status) str
("][") p
(finished) str
("].as<) p
(int) k
(>\(\) == 1\) {) p n
(                std::cout << ") S
(La partida termino.) str
(" << std::endl;) p n
(                ) S
(this) K
(->keep_runing = ) p
(false) k
(;) p n
(            }) N
(        }) N
(        ) S
(this) K
(->dynamics.addModel\(newDynamics\);) p n
(    }) N
(}) N
() N
(void) k
( ModelReceiver::stop\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->keep_runing = ) p
(false) k
(;) p n
(}) S
(model_receiver.cpp) (Page 1/1) (jun 26, 18 10:43) title
border
grestore
(Printed by Gabriel Robles) rhead
(main.cpp, model_receiver.cpp) (47/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 48
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( _MODEL_RECEIVER_H__) p n
(#define) K
( _MODEL_RECEIVER_H__) p n
() N
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(protected_dynamics.h) str
(") p n
() N
(class ModelReceiver : public Thread {) N
(    private:) N
(        Protocol * protocol;) N
(        ProtectedDynamics & dynamics;) N
(        bool keep_runing;) N
() N
(        virtual bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        virtual size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(    public:) N
(        ModelReceiver\(Protocol *, ProtectedDynamics &\);) N
(        ~ModelReceiver\() S
(void) k
(\);) p n
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ) S
(void) k
( stop\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(model_receiver.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(pick_weapon.h) str
(") p n
() N
(View::PickWeapon::PickWeapon\(View::Worm * worm, SDL_Renderer * r\) {) N
(  ) S
(this) K
(->state = WS_PICK_WEAPON;) p n
(  ) S
(this) K
(->context = worm;) p n
() N
(  ) N
() N
(  ) S
(this) K
(->textures[NONE].loadFromFile\(gPath.PATH_WORM_BREATH_1, r\);) p n
(  ) S
(this) K
(->textures[UP].loadFromFile\(gPath.PATH_WORM_BREATH_1_UP, r\);) p n
(  ) S
(this) K
(->textures[DOWN].loadFromFile\(gPath.PATH_WORM_BREATH_1_DOWN, r\);) p n
(  ) S
(this) K
(->sprites[NONE].setSpriteSheet\(&) p
(this) K
(->textures[NONE]\);) p n
(  ) S
(this) K
(->sprites[UP].setSpriteSheet\(&) p
(this) K
(->textures[UP]\);) p n
(  ) S
(this) K
(->sprites[DOWN].setSpriteSheet\(&) p
(this) K
(->textures[DOWN]\);) p n
(}) N
() N
(View::PickWeapon::~PickWeapon\(\) {) N
() N
(}) N
() N
(void) k
( View::PickWeapon::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY, worm_inclina) p n
(tion_t incl, ) S
(bool) k
( mirrored, ) p
(int) k
( angle\) {) p n
(  SDL_Rect clip = ) S
(this) K
(->sprites[incl].getNextClip\(\);) p n
(  View::Texture & current = ) S
(this) K
(->textures[incl];) p n
(  ) S
(if) K
( \(mirrored\) {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip, ) N
(      0, ) N
(      ) S
(NULL) K
(, ) p n
(      SDL_FLIP_HORIZONTAL) N
(    \);) N
(  } ) S
(else) K
( {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip) N
(    \);) N
(  }) N
(  ) N
(}) S
(pick_weapon.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(model_receiver.h, pick_weapon.cpp) (48/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 49
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __PICK_WEAPON_H__) p n
(#define) K
( __PICK_WEAPON_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
() N
(  class PickWeapon: public WormState {) N
(    private:) N
(      std::map<weapon_t, std::map<worm_inclination_t, Texture>> textures;) N
(      std::map<weapon_t, std::map<worm_inclination_t, SpriteAnimation>> sprites;) N
() N
(    public:) N
(      PickWeapon\(View::Worm * context, SDL_Renderer * r\);) N
(      ~PickWeapon\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
(\);) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(pick_weapon.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(projectil.h) str
(") p n
() N
(#define) K
( ABOUT_TO_EXPLODE 1) p n
(#define) K
( NONE_COUNTDOWN -1) p n
() N
(View::Projectil::~Projectil\() S
(void) k
(\) {) p n
(}) N
() N
(int) k
( View::Projectil::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->texture.getWidth\(\);) p n
(}) N
() N
(int) k
( View::Projectil::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->texture.getWidth\(\);) p n
(}) N
() N
(int) k
( View::Projectil::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Projectil::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Projectil::setX\() p
(int) k
( x\) {) p n
(  ) S
(this) K
(->x = x - \() p
(this) K
(->texture.getWidth\(\) / 2\);) p n
(}) N
() N
(void) k
( View::Projectil::setY\() p
(int) k
( y\) {) p n
(  ) S
(this) K
(->y = y - \() p
(this) K
(->texture.getWidth\(\) / 2\);) p n
(}) N
() N
(bool) k
( View::Projectil::hasExploded\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->exploded;) p n
(}) N
() N
(bool) k
( View::Projectil::hasFinished\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->finished;) p n
(}) N
() N
(void) k
( View::Projectil::setExplode\() p
(bool) k
( exploded\) {) p n
(  ) S
(this) K
(->exploded = exploded;) p n
(}) N
() N
(void) k
( View::Projectil::setCountdown\() p
(int) k
( newCount\) {) p n
(  ) S
(this) K
(->countdown = newCount;) p n
(  ) N
(  ) S
(if) K
( \(!) p
(this) K
(->playedAboutToExplode && ) p
(this) K
(->countdown <= ABOUT_TO_EXPLODE && ) p
(this) K
() p n
(->countdown != NONE_COUNTDOWN\) {) N
(    ) S
(const) K
( ) p
(char) k
( * ab2exp[] = {) p n
(      gPath.PATH_SOUND_WHAT_THE.c_str\(\),) N
(      gPath.PATH_SOUND_UH_OH.c_str\(\),) N
(      gPath.PATH_SOUND_TAKE_COVER.c_str\(\),) N
(      gPath.PATH_SOUND_RUN_AWAY.c_str\(\)) N
(    };) N
(    ) S
(this) K
(->aboutToExplode.setSound\(ab2exp[rand\(\) % 4]\);) p n
(    ) S
(this) K
(->aboutToExplode.playSound\(0\);) p n
(    ) S
(this) K
(->playedAboutToExplode = ) p
(true) k
(;) p n
(  }) N
(}) N
() N
(void) k
( View::Projectil::setWeaponType\(weapon_t type\) {) p n
(projectil.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(pick_weapon.h, projectil.cpp) (49/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 50
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(this) K
(->type = type;) p n
(}) N
() N
(void) k
( View::Projectil::setAngleDirection\() p
(int) k
( angle\) {) p n
(  ) S
(this) K
(->angleDirection = angle;) p n
(}) S
(projectil.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(projectiles.h) str
(") p n
() N
(View::Projectiles::Projectiles\() S
(void) k
(\) {) p n
() N
(}) N
() N
(View::Projectiles::~Projectiles\() S
(void) k
(\) {) p n
(  std::map<size_t, Projectil *>::iterator it = ) S
(this) K
(->projectiles.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->projectiles.end\(\) ; it++\) {) p n
(    ) S
(delete) K
( it->second;) p n
(  }) N
(}) N
() N
(void) k
( View::Projectiles::render\(SDL_Renderer * r, Camera & cam\) {) p n
(  std::map<size_t, Projectil *>::iterator it = ) S
(this) K
(->projectiles.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->projectiles.end\(\) ; it++\) {) p n
(    Projectil * current = it->second;) N
(    ) S
(if) K
( \(!current->hasFinished\(\)\) {) p n
(      current->render\(r, cam.getX\(\), cam.getY\(\)\);) N
(    }) N
(  }) N
(}) N
() N
(void) k
( View::Projectiles::update\(SDL_Renderer * r, ) p
(const) K
( YAML::Node & projNode\) {) p n
(  YAML::const_iterator it = projNode.begin\(\);) N
(  ) S
(for) K
( \(; it != projNode.end\(\) ; it++\) {) p n
(    ) S
(const) K
( YAML::Node & proj = *it;) p n
(    ) S
(int) k
( projId = proj[") p
(id) str
("].as<) p
(int) k
(>\(\);) p n
() N
(    ) S
(if) K
( \() p
(this) K
(->projectiles.find\(projId\) == ) p
(this) K
(->projectiles.end\(\)\) {) p n
(      ) S
(this) K
(->createProjectil\() p n
(        r,) N
(        projId,) N
(        proj) N
(      \);) N
(    }) N
(    Projectil * viewProjectile = ) S
(this) K
(->projectiles[projId];) p n
(    viewProjectile->setX\(proj[") S
(x) str
("].as<) p
(int) k
(>\(\)\);) p n
(    viewProjectile->setY\(proj[") S
(y) str
("].as<) p
(int) k
(>\(\)\);) p n
(    viewProjectile->setCountdown\(proj[") S
(countdown) str
("].as<) p
(int) k
(>\(\)\);) p n
(    viewProjectile->setExplode\(\() S
(bool) k
(\)proj[") p
(exploded) str
("].as<) p
(int) k
(>\(\)\);) p n
(    ) S
(if) K
( \(proj[") p
(angle_direction) str
("]\) {) p n
(      viewProjectile->setAngleDirection\(proj[") S
(angle_direction) str
("].as<) p
(int) k
(>\(\)\);) p n
(    }) N
(  }) N
() N
(  ) S
(this) K
(->cleanProjectilesFinished\(\);) p n
(}) N
() N
(void) k
( View::Projectiles::createProjectil\(SDL_Renderer * r, ) p
(int) k
( projId, ) p
(const) K
( YAML) p n
(::Node & proj\) {) N
(  ) S
(int) k
( count = proj[") p
(countdown) str
("].as<) p
(int) k
(>\(\);) p n
(  weapon_t type = \(weapon_t\)proj[") S
(type) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(int) k
( ratio = proj[") p
(blast_radius) str
("].as<) p
(int) k
(>\(\);) p n
() N
(  ) S
(switch) K
( \(type\) {) p n
(    ) S
(case) K
( w_dynamite:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::Dynamite\(r, count, ratio\);) p n
(      ) S
(break) K
(;) p n
() N
(    ) S
(case) K
( w_green_grenade:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::GreenGrenade\(r, count, ratio\);) p n
(projectiles.cpp) (Page 1/2) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(projectil.cpp, projectiles.cpp) (50/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 51
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(break) K
(;) p n
() N
(    ) S
(case) K
( w_holy_grenade:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::HolyGrenade\(r, count, ratio\);) p n
(      ) S
(break) K
(;) p n
() N
(    ) S
(case) K
( w_banana:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::Banana\(r, count, ratio\);) p n
(      ) S
(break) K
(;) p n
() N
(    ) S
(case) K
( w_bazooka:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::Bazooka\(r, ratio\);) p n
(      ) S
(break) K
(;) p n
() N
(    ) S
(case) K
( w_mortar:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::Bazooka\(r, ratio, w_mortar\);) p n
(      ) S
(break) K
(;) p n
() N
(    ) S
(case) K
( w_air_strike:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::AirStrike\(r, ratio\);) p n
(      ) S
(break) K
(;) p n
(    ) N
(    ) S
(case) K
( w_cluster:) p n
(      ) S
(this) K
(->projectiles[projId] = ) p
(new) K
( View::Cluster\(r, count, ratio\);) p n
(      ) S
(break) K
(;) p n
() N
(    ) S
(default) K
(:) p n
(      ) S
(throw) K
( View::Exception\(") p
(%s: %i) str
(", ERR_MSG_UNKNOWN_PROJECTIL_TYPE, w_dynamite\)) p n
(;) N
(  }) N
(}) N
() N
(void) k
( View::Projectiles::cleanProjectilesFinished\() p
(void) k
(\) {) p n
(  std::map<size_t, Projectil *>::iterator it = ) S
(this) K
(->projectiles.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->projectiles.end\(\) ;\) {) p n
(    Projectil * current = it->second;) N
(    ) S
(if) K
( \(current->hasFinished\(\)\) {) p n
(      ) S
(delete) K
( it->second;) p n
(      it = ) S
(this) K
(->projectiles.erase\(it\);) p n
(    } ) S
(else) K
( {) p n
(      it++;) N
(    }) N
(  }) N
(}) N
() N
(const) K
( View::Projectil * View::Projectiles::getProjectilProtagonic\() p
(void) k
(\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->projectiles.size\(\)\) {) p n
(    std::map<size_t, View::Projectil*>::const_iterator it = ) S
(this) K
(->projectiles.be) p n
(gin\(\);) N
(    ) S
(return) K
( it->second;) p n
(  } ) S
(else) K
( {) p n
(    ) S
(return) K
( nullptr;) p n
(  }) N
(}) N
(projectiles.cpp) (Page 2/2) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __PROJECTILES_H__) p n
(#define) K
( __PROJECTILES_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <map>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( ") p
(green_grenade.h) str
(") p n
(#include) K
( ") p
(dynamite.h) str
(") p n
(#include) K
( ") p
(holy_grenade.h) str
(") p n
(#include) K
( ") p
(banana.h) str
(") p n
(#include) K
( ") p
(bazooka.h) str
(") p n
(#include) K
( ") p
(projectil.h) str
(") p n
(#include) K
( ") p
(air_strike.h) str
(") p n
(#include) K
( ") p
(cluster.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(view_exceptions.h) str
(") p n
(#include) K
( ") p
(inventory_weapons.h) str
(") p n
() N
(namespace View {) N
(  class Projectiles {) N
(    private:) N
(      std::map<size_t, Projectil *> projectiles;) N
() N
(      ) S
(// Crea un proyectil nuevo dependiendo el tipo) c n
(      ) p
(void) k
( createProjectil\(SDL_Renderer *, ) p
(int) k
(, ) p
(const) K
( YAML::Node &\);) p n
() N
(      ) S
(// Libera la memoria de los proyectiles que ya terminaron de usarse) c n
(      ) p
(void) k
( cleanProjectilesFinished\() p
(void) k
(\);) p n
() N
(    public:) N
(      Projectiles\(\);) N
(      ~Projectiles\(\);) N
(      ) S
(void) k
( render\(SDL_Renderer *, Camera &\);) p n
(      ) S
(void) k
( update\(SDL_Renderer *, ) p
(const) K
( YAML::Node &\);) p n
() N
(      ) S
(// Devuelve la vista del proyectil protagonico) c n
(      ) p
(// en caso de no haber proyectiles devuelve NULL) c n
(      ) p
(const) K
( View::Projectil * getProjectilProtagonic\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(projectiles.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(projectiles.cpp, projectiles.h) (51/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 52
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __PROJECTIL_H__) p n
(#define) K
( __PROJECTIL_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(#define) K
( COUNTDOWN_TEXT_SIZE 18) p n
() N
(namespace View {) N
(  class Projectil: public Drawable {) N
(    protected:) N
(      Texture texture;) N
(      SoundEffect sound;) N
(      SoundEffect aboutToExplode;) N
(      bool playedAboutToExplode;) N
() N
(      bool exploded;) N
(      bool finished;) N
(      ) S
(int) k
( countdown;) p n
(      ) S
(int) k
( ratioExplosion;) p n
(      ) S
(int) k
( angleDirection;) p n
(      weapon_t type;) N
() N
(    public:) N
(      virtual ~Projectil\(\);) N
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\) = 0;) p n
() N
(      bool hasExploded\() S
(void) k
(\) ) p
(const) K
(;) p n
(      bool hasFinished\() S
(void) k
(\) ) p
(const) K
(;) p n
(      ) S
(void) k
( setCountdown\() p
(int) k
(\);) p n
(      ) S
(void) k
( setExplode\(bool\);) p n
(      ) S
(void) k
( setWeaponType\(weapon_t\);) p n
(      ) S
(void) k
( setAngleDirection\() p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(projectil.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <sstream>) p n
(#include) K
( <iostream>) p n
(#include) K
( ") p
(protected_dynamics.h) str
(") p n
() N
(#define) K
( TIE_GAME_CODE 0) p n
() N
(ProtectedDynamics::ProtectedDynamics\(YAML::Node & dyn\) {) N
(    ) S
(this) K
(->dynamics = dyn;) p n
(}) N
() N
(void) k
( ProtectedDynamics::addModel\(YAML::Node & new_dyn\) {) p n
(    ) S
(this) K
(->models.push\(new_dyn\);) p n
(}) N
() N
(bool) k
( ProtectedDynamics::popModel\() p
(void) k
(\) {) p n
(    ) S
(bool) k
( thereIsModel = ) p
(this) K
(->models.size\(\) != 0;) p n
(    ) S
(if) K
( \() p
(this) K
(->models.size\(\)\) {) p n
(        ) S
(this) K
(->dynamics.reset\(\);) p n
(        ) S
(this) K
(->dynamics = ) p
(this) K
(->models.front\(\);) p n
(        ) S
(this) K
(->models.pop\(\);) p n
(    }) N
(    ) S
(return) K
( thereIsModel;) p n
(}) N
() N
(bool) k
( ProtectedDynamics::finishedMatch\() p
(void) k
(\) {) p n
(    ) S
(bool) k
( end_match = ) p
(false) k
(;) p n
(    ) S
(if) K
( \() p
(this) K
(->dynamics[") p
(game_status) str
("]\) {) p n
(        end_match = ) S
(this) K
(->dynamics[") p
(game_status) str
("][") p
(finished) str
("].as<) p
(int) k
(>\(\);) p n
(    }) N
(    ) S
(return) K
( end_match;) p n
(}) N
() N
(YAML::Node ProtectedDynamics::getWorms\() S
(void) k
(\) {) p n
(    ) S
(const) K
( YAML::Node & teams = ) p
(this) K
(->dynamics[") p
(worms_teams) str
("];) p n
(    ) S
(return) K
( teams;) p n
(}) N
() N
(YAML::Node ProtectedDynamics::getProjectiles\() S
(void) k
(\) {) p n
(    ) S
(const) K
( YAML::Node & projectiles = ) p
(this) K
(->dynamics[") p
(projectiles) str
("];) p n
(    ) S
(return) K
( projectiles;) p n
(}) N
() N
(YAML::Node ProtectedDynamics::getGameStatus\() S
(void) k
(\) {) p n
(    ) S
(const) K
( YAML::Node & game_status = ) p
(this) K
(->dynamics[") p
(game_status) str
("];) p n
(    ) S
(return) K
( game_status;) p n
(}) N
() N
(YAML::Node ProtectedDynamics::getTeamInventory\(size_t teamId\) {) N
(    ) S
(return) K
( ) p
(this) K
(->dynamics[") p
(worms_teams) str
("][std::to_string\(teamId\)][") p
(inventory) str
("];) p n
(}) N
() N
(int) k
( ProtectedDynamics::getTurnTimeLeft\() p
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->dynamics[") p
(game_status) str
("]\) {) p n
(        ) S
(return) K
( ) p
(this) K
(->dynamics[") p
(game_status) str
("][") p
(turn_timeleft) str
("].as<) p
(int) k
(>\(\);) p n
(    }) N
(    ) S
(return) K
( -1;) p n
(}) N
() N
(size_t ProtectedDynamics::getWormProtagonicId\() S
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->dynamics[") p
(game_status) str
("]\) {) p n
(        ) S
(return) K
( ) p
(this) K
(->dynamics[") p
(game_status) str
("][") p
(protagonic_worm) str
("].as<size_t>\(\);) p n
(    }) N
(protected_dynamics.cpp) (Page 1/2) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(projectil.h, protected_dynamics.cpp) (52/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 53
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( 1;) p n
(}) N
() N
(bool) k
( ProtectedDynamics::hasGameStatus\() p
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->dynamics[") p
(game_status) str
("]\) {) p n
(        ) S
(return) K
( ) p
(true) k
(;) p n
(    }) N
(    ) S
(return) K
( ) p
(false) k
(;) p n
(}) N
() N
( ) S
(bool) k
( ProtectedDynamics::teamDefeated\(size_t team_id\) {) p n
(     ) S
(if) K
( \() p
(this) K
(->dynamics[") p
(game_status) str
("]\) {) p n
(         ) S
(int) k
( team_health = ) p
(this) K
(->dynamics[") p
(game_status) str
("][") p
(teams_health) str
("][team_id].as<) p
() k n
(int) S
(>\(\);) p n
(         ) S
(if) K
( \(team_health <= 0\) {) p n
(             ) S
(return) K
( ) p
(true) k
(;) p n
(         } ) S
(else) K
( {) p n
(             ) S
(return) K
( ) p
(false) k
(;) p n
(         }) N
(     }) N
(     ) S
(return) K
( ) p
(false) k
(;) p n
( }) N
() N
( size_t ProtectedDynamics::getWinnerTeam\() S
(void) k
(\) {) p n
(    std::map<size_t, ) S
(int) k
(> teams_health = ) p
(this) K
(->dynamics[") p
(game_status) str
("][") p
(teams_health) str
(") p n
(].as<std::map<size_t, ) S
(int) k
(>>\(\);) p n
(    std::map<size_t, ) S
(int) k
(>::iterator it;) p n
(    ) S
(for) K
( \(it = teams_health.begin\(\); it != teams_health.end\(\); it++\) {) p n
(        ) S
(if) K
( \(it->second > 0\) {) p n
(            ) S
(return) K
( it->first;) p n
(        }) N
(    }) N
(    ) S
(return) K
( TIE_GAME_CODE;) p n
( }) N
(size_t ProtectedDynamics::getTeamTurn\() S
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->dynamics[") p
(game_status) str
("]\) {) p n
(        ) S
(return) K
( ) p
(this) K
(->dynamics[") p
(game_status) str
("][") p
(team_turn) str
("].as<size_t>\(\); ) p n
(    }) N
(    ) S
(return) K
( 0;    ) p n
(}) N
(protected_dynamics.cpp) (Page 2/2) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __PROTECTED_DYNAMIC_MAP_H__) p n
(#define) K
( __PROTECTED_DYNAMIC_MAP_H__) p n
() N
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( <queue>) p n
() N
(class ProtectedDynamics {) N
(    private:) N
(        std::queue<YAML::Node> models;) N
(        YAML::Node dynamics;) N
(    public:) N
(        ProtectedDynamics\(YAML::Node &\);) N
(        ) S
(void) k
( addModel\(YAML::Node &\);) p n
(        YAML::Node getWorms\() S
(void) k
(\);) p n
(        YAML::Node getProjectiles\() S
(void) k
(\);) p n
(        YAML::Node getGameStatus\() S
(void) k
(\);) p n
(        YAML::Node getTeamInventory\(size_t\);) N
(        ) S
(int) k
( getTurnTimeLeft\() p
(void) k
(\);) p n
(        size_t getWormProtagonicId\() S
(void) k
(\);) p n
(        bool popModel\() S
(void) k
(\);) p n
(        bool finishedMatch\() S
(void) k
(\);) p n
(        bool hasGameStatus\() S
(void) k
(\);) p n
(        bool teamDefeated\(size_t\);) N
(        size_t getWinnerTeam\() S
(void) k
(\);) p n
(        size_t getTeamTurn\() S
(void) k
(\);) p n
(};) N
() N
(#endif) K
(protected_dynamics.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(protected_dynamics.cpp, protected_dynamics.h) (53/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 54
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(rectangle_text.h) str
(") p n
() N
(View::RectangleText::RectangleText\() S
(int) k
( height, ) p
(int) k
( padding, std::string fontPath) p n
(\) :) N
(  font\(fontPath, height - padding * 2\) {) N
() N
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
(  ) S
(this) K
(->width = 0; ) p
(// El ancho dependera del texto) c n
(  ) p
(this) K
(->height = height; ) p
(// El alto del rectangulo es configurable) c n
() p n
(  ) S
(// Text color default blanco) c n
(  ) p
(this) K
(->textColor = {255, 255, 255, 0};) p n
() N
(  ) S
(// Background color default azul) c n
(  ) p
(this) K
(->backgroundColor = {0, 0, 0, 0};) p n
() N
(  ) S
(this) K
(->hide = ) p
(false) k
(;) p n
(  ) S
(this) K
(->padding = padding;) p n
(}) N
() N
(View::RectangleText::~RectangleText\(\) {) N
() N
(}) N
() N
(int) k
( View::RectangleText::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::RectangleText::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::RectangleText::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::RectangleText::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::RectangleText::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x - ) p
(this) K
(->width / 2;) p n
(}) N
() N
(void) k
( View::RectangleText::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y - ) p
(this) K
(->height / 2;) p n
(}) N
() N
(void) k
( View::RectangleText::setText\(SDL_Renderer * r, ) p
(const) K
( std::string & text\) {) p n
(  ) S
(this) K
(->text.loadFromRenderedText\(r, ) p
(this) K
(->font, text, ) p
(this) K
(->textColor\);) p n
(  ) S
(this) K
(->width = ) p
(this) K
(->text.getWidth\(\) + ) p
(this) K
(->padding * 2;) p n
(}) N
() N
(void) k
( View::RectangleText::setTextColor\(SDL_Color & c\) {) p n
(  ) S
(this) K
(->textColor = c;) p n
(}) N
() N
(void) k
( View::RectangleText::setBackgroundColor\(SDL_Color & c\) {) p n
(  ) S
(this) K
(->backgroundColor = c;) p n
(}) N
() N
(rectangle_text.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(void) k
( View::RectangleText::toggleHide\() p
(bool) k
( h\) {) p n
(  ) S
(this) K
(->hide = h;) p n
(}) N
() N
(void) k
( View::RectangleText::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->hide\) {    ) p n
(    ) S
(// Background rect) c n
(    SDL_Rect bgRect = {) p n
(      ) S
(this) K
(->x - camX,) p n
(      ) S
(this) K
(->y - camY,) p n
(      ) S
(this) K
(->width,) p n
(      ) S
(this) K
(->height,) p n
(    };) N
(    SDL_SetRenderDrawColor\() N
(      r, ) N
(      ) S
(this) K
(->backgroundColor.r, ) p n
(      ) S
(this) K
(->backgroundColor.g, ) p n
(      ) S
(this) K
(->backgroundColor.b, ) p n
(      ) S
(this) K
(->backgroundColor.a) p n
(    \);   ) N
() N
(    SDL_RenderFillRect\(r, &bgRect\);) N
() N
(    ) S
(// Render text) c n
(    ) p
(this) K
(->text.render\() p n
(      r, ) N
(      ) S
(this) K
(->x ) p
(/*- this->width / 2*/) c
( + ) p
(this) K
(->padding - camX, ) p n
(      ) S
(this) K
(->y ) p
(/*- this->height / 2 */) c
(+ ) p
(this) K
(->padding - camY) p n
(    \);) N
(  }) N
(}) N
(rectangle_text.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(rectangle_text.cpp) (54/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 55
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __RECTANGLE_TEXT_H__) p n
(#define) K
( __RECTANGLE_TEXT_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(font.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
(#define) K
( DEFAULT_PADDING_RECTANGLE_TEXT 2) p n
() N
(namespace View {) N
(  class RectangleText: public Drawable {) N
(    private:) N
(      Texture text;) N
(      Font font;) N
(      SDL_Color textColor;) N
(      SDL_Color backgroundColor;) N
() N
(      ) S
(int) k
( padding;) p n
(      bool hide;) N
(    public:) N
(      RectangleText\( ) N
(        ) S
(int) k
( h, ) p n
(        ) S
(int) k
( padding = DEFAULT_PADDING_RECTANGLE_TEXT, ) p n
(        std::string path = gPath.PATH_FONT_ARIAL_BOLD) N
(      \);) N
() N
(      ~RectangleText\(\);) N
() N
(      ) S
(void) k
( setText\(SDL_Renderer *, ) p
(const) K
( std::string &\);) p n
(      ) S
(void) k
( setTextColor\(SDL_Color &\);) p n
(      ) S
(void) k
( setBackgroundColor\(SDL_Color &\);) p n
(      ) S
(void) k
( toggleHide\(bool\);) p n
() N
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(rectangle_text.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(shoot_power.h) str
(") p n
() N
(#define) K
( WHITE_TICKNESS_PERCENT 10) p n
() N
() N
() N
(View::ShootPower::ShootPower\() S
(int) k
( w, ) p
(int) k
( h, ) p
(int) k
( maxTime\) {) p n
(  ) S
(this) K
(->width = w;) p n
(  ) S
(this) K
(->height = h;) p n
(  ) S
(this) K
(->maxTimeShoot = maxTime;) p n
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
(  ) S
(this) K
(->whiteTickness = ) p
(this) K
(->height / \(100 / WHITE_TICKNESS_PERCENT\);) p n
(}) N
() N
(View::ShootPower::~ShootPower\(\) {) N
() N
(}) N
() N
(int) k
( View::ShootPower::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::ShootPower::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::ShootPower::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::ShootPower::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::ShootPower::setX\() p
(int) k
( x\) {) p n
(  ) S
(this) K
(->x = x - ) p
(this) K
(->width / 2;) p n
(}) N
() N
(void) k
( View::ShootPower::setY\() p
(int) k
( y\) {) p n
(  ) S
(this) K
(->y = y - ) p
(this) K
(->height / 2;) p n
(}) N
() N
(void) k
( View::ShootPower::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(return) K
(;) p n
(}) N
() N
(void) k
( View::ShootPower::render\(SDL_Renderer * r, ) p
(int) k
( timeShooting\) {) p n
(  ) S
(// White rect) c n
(  SDL_Rect whiteRect = {) p n
(    ) S
(this) K
(->x,) p n
(    ) S
(this) K
(->y,) p n
(    ) S
(this) K
(->width,) p n
(    ) S
(this) K
(->height,) p n
(  };) N
() N
(  SDL_SetRenderDrawColor\(r, 0xFF, 0xFF, 0xFF, 0xFF\);        ) N
(  SDL_RenderFillRect\(r, &whiteRect\);) N
() N
(  ) S
(int) k
( totalWidth = ) p
(this) K
(->width - 2 * ) p
(this) K
(->whiteTickness;) p n
(  ) S
(// Black rect) c n
(  SDL_Rect blackRect = {) p n
(shoot_power.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(rectangle_text.h, shoot_power.cpp) (55/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 56
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(this) K
(->x + ) p
(this) K
(->whiteTickness,) p n
(    ) S
(this) K
(->y + ) p
(this) K
(->whiteTickness,) p n
(    totalWidth,) N
(    ) S
(this) K
(->height - 2 * ) p
(this) K
(->whiteTickness,) p n
(  };) N
(  SDL_SetRenderDrawColor\(r, 0x00, 0x00, 0x00, 0xFF\);        ) N
(  SDL_RenderFillRect\(r, &blackRect\);) N
() N
(  ) S
(float) k
( factor = \(\() p
(float) k
(\)timeShooting / \() p
(float) k
(\)) p
(this) K
(->maxTimeShoot\);) p n
(  ) S
(int) k
( widthRedRect = \() p
(int) k
(\)\(factor * totalWidth\);) p n
(  ) S
(// Red rect) c n
(  SDL_Rect redRect = {) p n
(    ) S
(this) K
(->x + ) p
(this) K
(->whiteTickness,) p n
(    ) S
(this) K
(->y + ) p
(this) K
(->whiteTickness,) p n
(    widthRedRect,) N
(    ) S
(this) K
(->height - 2 * ) p
(this) K
(->whiteTickness,) p n
(  };) N
() N
(  SDL_SetRenderDrawColor\(r, 0xFF, 0x00, 0x00, 0xFF\);        ) N
(  SDL_RenderFillRect\(r, &redRect\);) N
(}) S
(shoot_power.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SHOOT_POWER_H__) p n
(#define) K
( __SHOOT_POWER_H__) p n
() N
(#include) K
( <iostream>) p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
() N
(namespace View {) N
(  class ShootPower: public Drawable {) N
(    private:) N
(      ) S
(int) k
( maxTimeShoot;) p n
(      ) S
(int) k
( whiteTickness;) p n
() N
(    public:) N
(      ShootPower\() S
(int) k
( w, ) p
(int) k
( h, ) p
(int) k
( time\);) p n
(      ~ShootPower\(\);) N
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
( timeShooting\);) p n
(  };) N
(}) N
() N
(#endif) K
(shoot_power.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(shoot_power.cpp, shoot_power.h) (56/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 57
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(sight.h) str
(") p n
() N
(#define) K
( SIGHT_FPC 3) p n
() N
(View::Sight::Sight\(SDL_Renderer * r, ) S
(int) k
( ratio, ) p
(int) k
( angle\) :) p n
(  sprite\(SIGHT_FPC, INFINITE_GOING_AND_BACK\) {) N
(  ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_DEFAULT_SIGHT, r\);) p n
(  ) S
(this) K
(->ratio = ratio;) p n
(  ) S
(this) K
(->angle = angle;) p n
() N
(  ) S
(this) K
(->sprite.setSpriteSheet\(&) p
(this) K
(->texture\);) p n
(}) N
() N
(View::Sight::~Sight\(\) {) N
() N
(}) N
() N
(int) k
( View::Sight::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::Sight::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::Sight::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Sight::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Sight::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x - ) p
(this) K
(->texture.getWidth\(\) / 2;) p n
(}) N
() N
(void) k
( View::Sight::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y - ) p
(this) K
(->texture.getWidth\(\) / 2;) p n
(}) N
() N
(void) k
( View::Sight::setXYcenter\() p
(int) k
( xc, ) p
(int) k
( yc\) {) p n
(  ) S
(this) K
(->xCenter = xc;) p n
(  ) S
(this) K
(->yCenter = yc;) p n
(}) N
() N
(void) k
( View::Sight::setAngle\() p
(int) k
( a\) {) p n
(  ) S
(this) K
(->angle = a * DEGTORAD;) p n
(}) N
() N
(void) k
( View::Sight::setRatio\() p
(int) k
( r\) {) p n
(  ) S
(this) K
(->ratio = r;) p n
(}) N
() N
(void) k
( View::Sight::setMirrored\() p
(bool) k
( m\) {) p n
(  ) S
(this) K
(->mirrored = m;) p n
(}) N
() N
(void) k
( View::Sight::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(int) k
( fct;) p n
(  ) S
(this) K
(->mirrored ? fct = 1 : fct = -1;) p n
() N
(sight.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  SDL_Rect clip = ) p
(this) K
(->sprite.getNextClip\(\);) p n
(  ) S
(int) k
( x = xCenter + \() p
(int) k
(\)\() p
(this) K
(->ratio * cos\() p
(this) K
(->angle\) * fct\);) p n
(  ) S
(int) k
( y = yCenter - \() p
(int) k
(\)\() p
(this) K
(->ratio * sin\() p
(this) K
(->angle\)\);) p n
(  ) S
(this) K
(->texture.render\(r, x - ) p
(this) K
(->texture.getWidth\(\) / 2 - camX, y - ) p
(this) K
(->tex) p n
(ture.getWidth\(\) / 2 - camY, &clip\);) N
(}) S
(sight.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(sight.cpp) (57/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 58
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SIGHT_H__) p n
(#define) K
( __SIGHT_H__) p n
() N
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
() N
(#define) K
( DEGTORAD 0.0174533) p n
() N
(namespace View {) N
(  class Sight: public Drawable {) N
(    private:) N
(      Texture texture;) N
(      SpriteAnimation sprite;) N
(      ) S
(int) k
( ratio;) p n
(      ) S
(float) k
( angle;) p n
() N
(      ) S
(int) k
( xCenter;) p n
(      ) S
(int) k
( yCenter;) p n
() N
(      bool mirrored;) N
() N
(    public:) N
(      Sight\(SDL_Renderer * r, ) S
(int) k
( ratio = 100, ) p
(int) k
( angle = 0\);) p n
(      ~Sight\(\);) N
() N
(      ) S
(void) k
( setXYcenter\() p
(int) k
(, ) p
(int) k
(\);) p n
(      ) S
(void) k
( setAngle\() p
(int) k
(\);) p n
(      ) S
(void) k
( setRatio\() p
(int) k
(\);) p n
(      ) S
(void) k
( setMirrored\(bool\);) p n
(      ) N
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(sight.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(sprite_animation.h) str
(") p n
() N
(View::SpriteAnimation::SpriteAnimation\(size_t fpc, sprite_type_t type\) : ) N
(  fpc\(fpc\) {) N
(  ) S
(this) K
(->type = type;) p n
(  ) S
(this) K
(->reverse = ) p
(false) k
(;) p n
(  ) S
(this) K
(->counter = 0;) p n
(  ) S
(this) K
(->finish = ) p
(false) k
(;) p n
(}) N
() N
(View::SpriteAnimation::~SpriteAnimation\(\) {}) N
() N
(// Funciona y no le deseo a nadie que tenga) c n
(// que intentar de entender como es que funciona) N
(// y mucho menos tener que debuggear este metodo.) N
(SDL_Rect View::SpriteAnimation::getNextClip\() p
(int) k
( grades, ) p
(int) k
( maxGrades\) {) p n
(  ) S
(switch) K
( \() p
(this) K
(->type\) {) p n
(    ) S
(case) K
( INFINITE_GOING_AND_BACK:) p n
(      ) S
(return) K
( ) p
(this) K
(->getNextClipInfiniteRoundTrip\(\);) p n
(      ) S
(break) K
(;) p n
(    ) S
(case) K
( ONLY_GOING:) p n
(      ) S
(return) K
( ) p
(this) K
(->getNextClipOnlyGoing\(\);) p n
(      ) S
(break) K
(;) p n
(    ) S
(case) K
( INFINITE_GOING:) p n
(      ) S
(return) K
( ) p
(this) K
(->getNextClipInfiniteGoing\(\);) p n
(      ) S
(break) K
(;) p n
(    ) S
(case) K
( DEPENDENT_ON_GRADES:) p n
(      ) S
(return) K
( ) p
(this) K
(->getNextClipDependentOnGrades\(grades, maxGrades\);) p n
(      ) S
(break) K
(;) p n
(    ) S
(default) K
(:) p n
(      ) S
(return) K
( {0, 0, 0, 0};) p n
(  }) N
(}) N
() N
(void) k
( View::SpriteAnimation::setSpriteSheet\(Texture * newTexture\) {) p n
(  ) S
(this) K
(->currentSpriteSheet = newTexture;) p n
(  ) S
(this) K
(->clipWidth = ) p
(this) K
(->currentSpriteSheet->getWidth\(\);) p n
(  ) S
(this) K
(->clipHeight = clipWidth;) p n
(  ) S
(this) K
(->numClips = ) p
(this) K
(->currentSpriteSheet->getHeight\(\) / clipWidth;) p n
(  ) S
(this) K
(->reverse = ) p
(false) k
(;) p n
(  ) S
(this) K
(->finish = ) p
(false) k
(;) p n
(  ) S
(this) K
(->counter = 0;) p n
(}) N
() N
(SDL_Rect View::SpriteAnimation::getNextClipInfiniteRoundTrip\() S
(void) k
(\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->reverse == ) p
(false) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->counter < ) p
(this) K
(->numClips * ) p
(this) K
(->fpc\) {) p n
(      SDL_Rect currentClip = {) N
(          0,) N
(          0 + \() S
(this) K
(->counter / ) p
(this) K
(->fpc \) * ) p
(this) K
(->clipHeight,) p n
(          ) S
(this) K
(->clipWidth,) p n
(          ) S
(this) K
(->clipHeight) p n
(      };) N
(      ) S
(this) K
(->counter++;) p n
(      ) S
(return) K
( currentClip;) p n
(    }) N
() N
(    ) S
(this) K
(->reverse = ) p
(true) k
(;) p n
(    ) S
(this) K
(->counter = \(\() p
(this) K
(->numClips - 1\) * fpc\) - 1;) p n
(  }) N
() N
(  ) S
(if) K
( \() p
(this) K
(->reverse == ) p
(true) k
(\) {) p n
(sprite_animation.cpp) (Page 1/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(sight.h, sprite_animation.cpp) (58/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 59
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(if) K
( \() p
(this) K
(->counter >= ) p
(this) K
(->fpc\) {) p n
(      SDL_Rect currentClip = {) N
(          0,) N
(          0 + \() S
(this) K
(->counter / ) p
(this) K
(->fpc \) * ) p
(this) K
(->clipHeight,) p n
(          ) S
(this) K
(->clipWidth,) p n
(          ) S
(this) K
(->clipHeight) p n
(      };) N
(      ) S
(this) K
(->counter--;) p n
(      ) S
(return) K
( currentClip;) p n
(    }) N
() N
(    ) S
(this) K
(->counter = 0;) p n
(    ) S
(this) K
(->reverse = ) p
(false) k
(;) p n
(  }) N
() N
(  SDL_Rect secondClip = {) N
(    0,) N
(    0 + \() S
(this) K
(->counter / ) p
(this) K
(->fpc \) * ) p
(this) K
(->clipHeight,) p n
(    ) S
(this) K
(->clipWidth,) p n
(    ) S
(this) K
(->clipHeight) p n
(  };) N
() N
(  ) S
(this) K
(->counter++;) p n
(  ) S
(return) K
( secondClip;) p n
(}) N
() N
(SDL_Rect View::SpriteAnimation::getNextClipOnlyGoing\() S
(void) k
(\) {) p n
(  SDL_Rect currentClip = {) N
(    0,) N
(    0 + \() S
(this) K
(->counter / ) p
(this) K
(->fpc \) * ) p
(this) K
(->clipHeight,) p n
(    ) S
(this) K
(->clipWidth,) p n
(    ) S
(this) K
(->clipHeight) p n
(  };) N
() N
(  ) S
(if) K
( \() p
(this) K
(->counter < ) p
(this) K
(->numClips * ) p
(this) K
(->fpc\) {) p n
(    ) S
(this) K
(->counter++;) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->finish = ) p
(true) k
(;) p n
(  }) N
() N
(  ) S
(return) K
( currentClip;) p n
(}) N
() N
(SDL_Rect View::SpriteAnimation::getNextClipInfiniteGoing\() S
(void) k
(\) {) p n
(  SDL_Rect currentClip = {) N
(    0,) N
(    0 + \() S
(this) K
(->counter / ) p
(this) K
(->fpc \) * ) p
(this) K
(->clipHeight,) p n
(    ) S
(this) K
(->clipWidth,) p n
(    ) S
(this) K
(->clipHeight) p n
(  };) N
() N
(  ) S
(if) K
( \() p
(this) K
(->counter < ) p
(this) K
(->numClips * ) p
(this) K
(->fpc\) {) p n
(    ) S
(this) K
(->counter++;) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->counter = 0;) p n
(    currentClip = {) N
(      0,) N
(      0 + \() S
(this) K
(->counter / ) p
(this) K
(->fpc \) * ) p
(this) K
(->clipHeight,) p n
(      ) S
(this) K
(->clipWidth,) p n
(      ) S
(this) K
(->clipHeight) p n
(    };) N
(  }) N
(sprite_animation.cpp) (Page 2/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(  ) S
(return) K
( currentClip;) p n
(}) N
() N
(SDL_Rect View::SpriteAnimation::getNextClipDependentOnGrades\() S
(int) k
( grades, ) p
(int) k
( max) p n
(Grades\) {) N
(  ) S
(int) k
( numClip = \(grades * ) p
(this) K
(->numClips\) / maxGrades;) p n
(  ) N
(  ) S
(if) K
( \(numClip == ) p
(this) K
(->numClips\) {) p n
(    numClip--;) N
(  }) N
() N
(  SDL_Rect currentClip = {) N
(    0,) N
(    0 + numClip * ) S
(this) K
(->clipHeight,) p n
(    ) S
(this) K
(->clipWidth,) p n
(    ) S
(this) K
(->clipHeight) p n
(  };) N
() N
(  ) S
(return) K
( currentClip;) p n
(}) N
() N
(bool) k
( View::SpriteAnimation::finished\() p
(void) k
(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->finish;) p n
(}) N
() N
(void) k
( View::SpriteAnimation::changeSpriteType\(sprite_type_t newType\) {) p n
(  ) S
(this) K
(->type = newType;) p n
(}) N
() N
(void) k
( View::SpriteAnimation::reset\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->finish = ) p
(false) k
(;) p n
(  ) S
(this) K
(->reverse = ) p
(false) k
(;) p n
(  ) S
(this) K
(->counter = 0;) p n
(}) N
(sprite_animation.cpp) (Page 3/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(sprite_animation.cpp) (59/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 60
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SPRITE_ANIMATION_H__) p n
(#define) K
( __SPRITE_ANIMATION_H__) p n
() N
(#include) K
( ") p
(texture.h) str
(") p n
() N
(#define) K
( DEFAULT_FPC 3) p n
() N
(typedef) K
( ) p
(enum) k
( {) p n
(  INFINITE_GOING_AND_BACK = 0,) N
(  ONLY_GOING = 1,) N
(  INFINITE_GOING = 2,) N
(  DEPENDENT_ON_GRADES = 3) N
(} sprite_type_t;) N
() N
(namespace View {) N
(  class SpriteAnimation {) N
(    private:) N
(      Texture * currentSpriteSheet;) N
(      ) N
(      ) S
(int) k
( fpc; ) p
(// Frames per clip) c n
(      ) p
(int) k
( counter;) p n
(      ) S
(int) k
( clipWidth;) p n
(      ) S
(int) k
( clipHeight;) p n
(      ) S
(int) k
( numClips;) p n
(      bool reverse;) N
(      bool finish;) N
() N
(      sprite_type_t type;) N
() N
(      SDL_Rect getNextClipInfiniteRoundTrip\() S
(void) k
(\);) p n
(      SDL_Rect getNextClipOnlyGoing\() S
(void) k
(\);) p n
(      SDL_Rect getNextClipInfiniteGoing\() S
(void) k
(\);) p n
(      SDL_Rect getNextClipDependentOnGrades\() S
(int) k
( grades, ) p
(int) k
( maxGrades = 360\);) p n
() N
(    public:) N
(      SpriteAnimation\(size_t fpc = DEFAULT_FPC, sprite_type_t type = INFINITE_GO) N
(ING_AND_BACK\);) N
(      ~SpriteAnimation\(\);) N
(      ) S
(void) k
( setSpriteSheet\(Texture *\);) p n
() N
(      SDL_Rect getNextClip\() S
(int) k
( grades = -1, ) p
(int) k
( maxGrades = 360\);) p n
() N
(      ) S
(// Verifica si el recorrido del spritesheet) c n
(      ) p
(// finalizo \(para ONLY_GOING sprites\)) c n
(      bool finished\() p
(void) k
(\);) p n
() N
(      ) S
(// Cambia el tipo de sprite sheet) c n
(      ) p
(void) k
( changeSpriteType\(sprite_type_t\);) p n
() N
(      ) S
(// Resetea la animacion y empieza desde el principio) c n
(      ) p
(void) k
( reset\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(sprite_animation.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(teams_health.h) str
(") p n
() N
(#define) K
( PADDING_PERCENT 5) p n
(#define) K
( WHITE_TICKNESS_PERCENT 10) p n
(#define) K
( SIZE_TEXT_PERCENT 25) p n
(#define) K
( BARS_PERCENT 75) p n
() N
(View::TeamsHealth::TeamsHealth\(SDL_Renderer * r, ) S
(int) k
( width, ) p
(int) k
( height, ) p
(int) k
( team) p n
(sAmount, ) S
(int) k
( wormsHealth, ) p
(int) k
( maxWormsTeams\) : ) p n
(  text\(height / \(100 / SIZE_TEXT_PERCENT\), 2, gPath.PATH_FONT_ARIAL_BOLD\) {) N
(  ) S
(this) K
(->width = width;) p n
(  ) S
(this) K
(->height = height;) p n
(  ) S
(this) K
(->teamsAmount = teamsAmount;) p n
(  ) S
(this) K
(->wormsHealth = wormsHealth;) p n
(  ) S
(this) K
(->padding = ) p
(this) K
(->height / \(100 / PADDING_PERCENT\);) p n
(  ) S
(this) K
(->heightHealthRect = \(height / \(100 / BARS_PERCENT\) / teamsAmount\) - \() p
(this) K
() p n
(->padding * 2\);) N
(  ) S
(this) K
(->whiteTickness = ) p
(this) K
(->heightHealthRect / \(100 / WHITE_TICKNESS_PERCENT\);) p n
(  ) S
(this) K
(->maxTeamHealth = maxWormsTeams * ) p
(this) K
(->wormsHealth;) p n
(  ) S
(this) K
(->hide = ) p
(false) k
(;) p n
() N
(  SDL_Color black = {0,0,0,0};) N
(  ) S
(this) K
(->text.setBackgroundColor\(black\);) p n
() N
(  SDL_Color white = {255, 255, 255, 255};) N
(  ) S
(this) K
(->text.setTextColor\(white\);) p n
() N
(  ) S
(this) K
(->text.setText\(r, ") p
(Teams health) str
("\);) p n
(  ) N
(  ) S
(for) K
( \() p
(int) k
( i = 0 ; i < ) p
(this) K
(->teamsAmount ; i++\) {) p n
(    ) S
(this) K
(->teamsHealth[i+1] = ) p
(this) K
(->maxTeamHealth;) p n
(  }) N
(}) N
() N
(View::TeamsHealth::~TeamsHealth\(\) {) N
() N
(}) N
() N
(int) k
( View::TeamsHealth::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::TeamsHealth::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::TeamsHealth::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::TeamsHealth::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::TeamsHealth::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x - ) p
(this) K
(->width / 2;) p n
(  ) S
(this) K
(->text.setX\(x\);) p n
(}) N
() N
(void) k
( View::TeamsHealth::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y - ) p
(this) K
(->height / 2;) p n
(  ) S
(this) K
(->text.setY\(y - ) p
(this) K
(->height / 2 + ) p
(this) K
(->text.getHeight\(\) / 2\);) p n
(teams_health.cpp) (Page 1/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(sprite_animation.h, teams_health.cpp) (60/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 61
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(}) p n
() N
(void) k
( View::TeamsHealth::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->hide\) {) p n
(    ) S
(return) K
(;) p n
(  }) N
(  ) N
(  ) S
(const) K
( SDL_Color colors[] = {) p n
(    {0, 0, 0, 0},) N
(    {255, 0, 0, 0},) N
(    {0, 255, 0, 0},) N
(    {0, 0, 255, 0}) N
(  };) N
(  ) N
(  ) S
(// Render text) c n
(  ) p
(this) K
(->text.render\(r, camX, camY\);) p n
() N
(  ) S
(for) K
( \() p
(int) k
( i = 0 ; i < ) p
(this) K
(->teamsAmount ; i++\) {) p n
(    ) S
(// White rects) c n
(    SDL_Rect whiteRect = {) p n
(      ) S
(this) K
(->x + ) p
(this) K
(->padding,) p n
(      ) S
(this) K
(->y + i * \() p
(this) K
(->padding + ) p
(this) K
(->heightHealthRect\) + ) p
(this) K
(->text.getHei) p n
(ght\(\),) N
(      ) S
(this) K
(->width - ) p
(this) K
(->padding * 2,) p n
(      ) S
(this) K
(->heightHealthRect) p n
(    };) N
() N
(    SDL_SetRenderDrawColor\(r, 0xFF, 0xFF, 0xFF, 0xFF\);        ) N
(    SDL_RenderFillRect\(r, &whiteRect\);) N
() N
(    ) S
(// Black rects) c n
(    SDL_Rect blackRect = {) p n
(      ) S
(this) K
(->x + ) p
(this) K
(->padding + ) p
(this) K
(->whiteTickness,) p n
(      ) S
(this) K
(->y + i * \() p
(this) K
(->padding + ) p
(this) K
(->heightHealthRect\) + ) p
(this) K
(->whiteTickne) p n
(ss + ) S
(this) K
(->text.getHeight\(\),) p n
(      ) S
(this) K
(->width - ) p
(this) K
(->padding * 2 - ) p
(this) K
(->whiteTickness * 2,) p n
(      ) S
(this) K
(->heightHealthRect - ) p
(this) K
(->whiteTickness * 2) p n
(    };) N
() N
(    SDL_SetRenderDrawColor\(r, 0x00, 0x00, 0x00, 0xFF\);        ) N
(    SDL_RenderFillRect\(r, &blackRect\);) N
() N
(    ) S
(int) k
( currentHealth = ) p
(this) K
(->teamsHealth[i + 1];) p n
(    ) S
(int) k
( maxRectHealthWidth = ) p
(this) K
(->width - ) p
(this) K
(->padding * 2 - ) p
(this) K
(->whiteTickne) p n
(ss * 2;) N
(    ) S
(int) k
( rectHealthWidth = \(currentHealth * maxRectHealthWidth\) / ) p
(this) K
(->maxTeamHe) p n
(alth;) N
() N
(    ) S
(// Team health rect) c n
(    SDL_Rect teamRect = {) p n
(      ) S
(this) K
(->x + ) p
(this) K
(->padding + ) p
(this) K
(->whiteTickness,) p n
(      ) S
(this) K
(->y + i * \() p
(this) K
(->padding + ) p
(this) K
(->heightHealthRect\) + ) p
(this) K
(->whiteTickne) p n
(ss + ) S
(this) K
(->text.getHeight\(\),) p n
(      rectHealthWidth,) N
(      ) S
(this) K
(->heightHealthRect - ) p
(this) K
(->whiteTickness * 2) p n
(    };) N
() N
(    SDL_SetRenderDrawColor\(r, colors[i+1].r, colors[i+1].g, colors[i+1].b, color) N
(s[i+1].a\);        ) N
(    SDL_RenderFillRect\(r, &teamRect\);    ) N
(  }) N
(}) N
(teams_health.cpp) (Page 2/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(void) k
( View::TeamsHealth::update\() p
(const) K
( YAML::Node & teamsHealthNode\) {) p n
(  YAML::const_iterator it = teamsHealthNode.begin\(\);) N
() N
(  ) S
(for) K
( \(; it != teamsHealthNode.end\(\) ; it++\) {) p n
(    ) S
(int) k
( teamId = it->first.as<) p
(int) k
(>\(\);) p n
(    ) S
(this) K
(->teamsHealth[teamId] = it->second.as<) p
(int) k
(>\(\);) p n
(  }) N
(}) N
() N
(void) k
( View::TeamsHealth::toggleHide\() p
(void) k
(\) {) p n
(  ) S
(this) K
(->hide = !) p
(this) K
(->hide;) p n
(}) S
(teams_health.cpp) (Page 3/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(teams_health.cpp) (61/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 62
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __TEAMS_HEALTH_H__) p n
(#define) K
( __TEAMS_HEALTH_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
() N
(namespace View {) N
(  class TeamsHealth: public Drawable {) N
(    private:) N
(      RectangleText text;) N
(      ) S
(int) k
( padding;) p n
(      ) S
(int) k
( whiteTickness;) p n
(      ) S
(int) k
( teamsAmount;) p n
(      ) S
(int) k
( wormsHealth;) p n
(      ) S
(int) k
( heightHealthRect;) p n
(      ) S
(int) k
( maxTeamHealth;) p n
() N
(      std::map<) S
(int) k
(, ) p
(int) k
(> teamsHealth;) p n
(      bool hide;) N
() N
(    public:) N
(      TeamsHealth\(SDL_Renderer *, ) S
(int) k
(, ) p
(int) k
(, ) p
(int) k
(, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      ~TeamsHealth\(\);) N
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
() N
(      ) S
(void) k
( update\() p
(const) K
( YAML::Node &\);) p n
(      ) S
(void) k
( toggleHide\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(teams_health.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(texture.h) str
(") p n
() N
(View::Texture::Texture\(\) {) N
() S 8 T () S
(this) K
(->texture = ) p
(NULL) K
(;) p n
() S 8 T () S
(this) K
(->width = 0;) p n
() S 8 T () S
(this) K
(->height = 0;) p n
() S 8 T () S
(this) K
(->x = 0;) p n
() S 8 T () S
(this) K
(->y = 0;) p n
(}) N
() N
(View::Texture::~Texture\(\) {) N
() S 8 T () S
(this) K
(->free\(\);) p n
(}) N
() N
(void) k
( View::Texture::loadFromFile\(std::string path, SDL_Renderer * renderer\) {) p n
() S 8 T () S
(// Liberamos la textura actual) c n
() p 8 T () S
(this) K
(->free\(\);) p n
() N
() S 8 T () S
(// La textura final) c n
() p 8 T (SDL_Texture* newTexture = ) S
(NULL) K
(;) p n
() N
() S 8 T () S
(// Cargamos la surface en el path indicado) c n
() p 8 T (SDL_Surface* loadedSurface = IMG_Load\(path.c_str\(\)\);) N
() S 8 T () S
(if) K
( \(loadedSurface == ) p
(NULL) K
(\) {) p n
(    ) S
(throw) K
( View::Exception\(") p
(%s %s. %s: %s) str
(", ERR_MSG_LOAD_IMAGE, path.c_str\(\), ") p
(SDL_I) str n
(MG_Load\(\) ) S
(", IMG_GetError\(\)\);) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(//Color key image) c n
() p 8 T () S 16 T (SDL_SetColorKey\(loadedSurface, SDL_TRUE, SDL_MapRGB\(loadedSurfac) N
(e->format, 0x80, 0x80, 0xBE\)\);) N
() N
() S 8 T () S 16 T () S
(//Create texture from surface pixels) c n
(    newTexture = SDL_CreateTextureFromSurface\(renderer, loadedSurface\);) p n
() S 8 T () S 16 T () S
(if) K
( \(newTexture == ) p
(NULL) K
(\) {) p n
(      ) S
(throw) K
( View::Exception\(") p
(%s %s. %s: %s) str
(", ERR_MSG_CREATE_TEXTURE, path.c_str\(\),) p n
( ") S
(SDL_CreateTextureFromSurface\(\) ) str
(", SDL_GetError\(\)\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(// Cargamos las dimensiones de la imagen) c n
() p 8 T () S 16 T () S 24 T () S
(this) K
(->width = loadedSurface->w;) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->height = loadedSurface->h;) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// Liberamos la surface) c n
() p 8 T () S 16 T (SDL_FreeSurface\( loadedSurface \);) N
() S 8 T (}) N
() N
() S 8 T () S
(//Return success) c n
() p 8 T () S
(this) K
(->texture = newTexture;) p n
(}) N
() N
(void) k
( View::Texture::loadFromRenderedText\(SDL_Renderer * r, Font & font, std::str) p n
(ing textureText, SDL_Color textColor\) {) N
() S 8 T () S
(//Get rid of preexisting texture) c n
() p 8 T (free\(\);) N
() N
() S 8 T () S
(//Render text surface) c n
() p 8 T (SDL_Surface * textSurface = TTF_RenderText_Solid\(font.getFont\(\), texture) N
(Text.c_str\(\), textColor\);) N
() S 8 T () S
(if) K
( \(textSurface == ) p
(NULL) K
(\) {) p n
() S 8 T () S 16 T () S
(throw) K
( View::Exception\(") p
(%s. %s: %s) str
(", ERR_MSG_RENDER_TEXT_SURFACE, ") p
() str n
(SDL_ttf Error) S
(", TTF_GetError\(\)\);) p n
() S 8 T (}) S 16 T () S
(else) K
( {) p n
() S 8 T () S 16 T () S
(//Create texture from surface pixels) c n
(texture.cpp) (Page 1/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(teams_health.h, texture.cpp) (62/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 63
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(this) K
(->texture = SDL_CreateTextureFromSurface\(r, textSurface\);) p n
() S 8 T () S 16 T () S
(if) K
( \() p
(this) K
(->texture == ) p
(NULL) K
(\) {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( View::Exception\(") p
(%s. %s: %s) str
(", ERR_MSG_CREATE_TEXTURE) p n
(_TEXT, ") S
(SDL Error) str
(", SDL_GetError\(\)\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(//Get image dimensions) c n
() p 8 T () S 16 T () S 24 T () S
(this) K
(->width = textSurface->w;) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->height = textSurface->h;) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(//Get rid of old surface) c n
() p 8 T () S 16 T (SDL_FreeSurface\( textSurface \);) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::Texture::free\(\) {) p n
() S 8 T () S
(//Free texture if it exists) c n
() p 8 T () S
(if) K
( \() p
(this) K
(->texture != ) p
(NULL) K
(\) {) p n
() S 8 T () S 16 T (SDL_DestroyTexture\( ) S
(this) K
(->texture \);) p n
() S 8 T () S 16 T () S
(this) K
(->texture = ) p
(NULL) K
(;) p n
() S 8 T () S 16 T () S
(this) K
(->width = 0;) p n
() S 8 T () S 16 T () S
(this) K
(->height = 0;) p n
() S 8 T () S 16 T () S
(this) K
(->x = 0;) p n
() S 8 T () S 16 T () S
(this) K
(->y = 0;) p n
() S 8 T (}) N
(}) N
() N
(void) k
( View::Texture::render\(SDL_Renderer * renderer, ) p
(int) k
( x, ) p
(int) k
( y\) {) p n
() S 8 T () S
(// Seteamos el espacio de dibujado y donde dibujarlo) c n
() p 8 T (SDL_Rect renderQuad = { x, y, ) S
(this) K
(->width, ) p
(this) K
(->height };) p n
() S 8 T (SDL_RenderCopy\(renderer, ) S
(this) K
(->texture, ) p
(NULL) K
(, &renderQuad\);) p n
(}) N
() N
(void) k
( View::Texture::render\(SDL_Renderer * renderer, ) p
(int) k
( x, ) p
(int) k
( y, ) p
(int) k
( width, ) p
(int) k
() p n
( height, SDL_Rect * clip\) {) N
() S 8 T (SDL_Rect renderQuad = { x, y, width, height };) N
() S 8 T (SDL_RenderCopy\(renderer, ) S
(this) K
(->texture, clip, &renderQuad\);) p n
(}) N
() N
(void) k
( View::Texture::render\(SDL_Renderer * renderer\) {) p n
() S 8 T (SDL_RenderCopy\(renderer, ) S
(this) K
(->texture, ) p
(NULL) K
(, ) p
(NULL) K
(\);) p n
(}) N
() N
(void) k
( View::Texture::render\() p n
() S 8 T (SDL_Renderer * renderer, ) N
() S 8 T () S
(int) k
( x, ) p n
() S 8 T () S
(int) k
( y, ) p n
() S 8 T (SDL_Rect* clip, ) N
() S 8 T () S
(double) k
( angle, ) p n
() S 8 T (SDL_Point* center, ) N
() S 8 T (SDL_RendererFlip flip\) {) N
() N
() S 8 T () S
(// Seteamos espacio de renderizado) c n
() p 8 T (SDL_Rect renderQuad = { x, y, ) S
(this) K
(->width, ) p
(this) K
(->height };) p n
() N
() S 8 T () S
(// Seteamos las dimensiones del clip) c n
() p 8 T () S
(if) K
( \(clip\) {) p n
() S 8 T () S 16 T (renderQuad.w = clip->w;) N
() S 8 T () S 16 T (renderQuad.h = clip->h;) N
() S 8 T (}) N
() N
(texture.cpp) (Page 2/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(//Renderizamos al screen) c n
() p 8 T (SDL_RenderCopyEx\(renderer, ) S
(this) K
(->texture, clip, &renderQuad, angle, cent) p n
(er, flip\);) N
(}) N
() N
(int) k
( View::Texture::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::Texture::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::Texture::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Texture::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Texture::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x;) p n
(}) N
() N
(void) k
( View::Texture::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y;) p n
(}) N
() N
(void) k
( View::Texture::setColor\(Uint8 red, Uint8 green, Uint8 blue\) {) p n
() S 8 T () S
(//Modulate texture rgb) c n
() p 8 T (SDL_SetTextureColorMod\() S
(this) K
(->texture, red, green, blue\);) p n
(}) N
() N
(void) k
( View::Texture::setBlendMode\(SDL_BlendMode blending\) {) p n
() S 8 T () S
(//Set blending function) c n
() p 8 T (SDL_SetTextureBlendMode\() S
(this) K
(->texture, blending\);) p n
(}) N
() N
(void) k
( View::Texture::setAlpha\(Uint8 alpha\) {) p n
() S 8 T () S
(//Modulate texture alpha) c n
() p 8 T (SDL_SetTextureAlphaMod\() S
(this) K
(->texture, alpha\);) p n
(}) N
(texture.cpp) (Page 3/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(texture.cpp) (63/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 64
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __TEXTURE_H__) p n
(#define) K
( __TEXTURE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <SDL2/SDL_image.h>) p n
(#include) K
( <SDL2/SDL_ttf.h>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(font.h) str
(") p n
(#include) K
( ") p
(view_exceptions.h) str
(") p n
(#include) K
( ") p
(drawable.h) str
(") p n
() N
(namespace View {) N
(  class Texture: public Drawable {) N
(    private:) N
(      ) S
(// La textura actual) c n
(      SDL_Texture* texture;) p n
() N
(      ) S
(// Desaloca memoria) c n
(      ) p
(void) k
( free\(\);) p n
() N
(    public:) N
(      ) S
(//Initializes variables) c n
(      Texture\(\);) p n
() N
(      ) S
(//Deallocates memory) c n
(      ~Texture\(\);) p n
() N
(      ) S
(// Carga la imagen desde un archivo) c n
(      ) p
(void) k
( loadFromFile\(std::string path, SDL_Renderer *\);) p 64 T () S 72 T () N
() N
(      ) S
(// Renderiza la textura en toda la pantalla) c n
(      ) p
(void) k
( render\(SDL_Renderer *\);) p n
(      ) S
(// Render textura a un punto dado) c n
(      virtual ) p
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      ) S
(// Para poder renderizar texturas espejadas o rotadas) c n
() p 8 T () S 16 T (  ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
( x, ) p
(int) k
( y, SDL_Rect* clip, ) p
(doub) k n
(le) S
( angle = 0.0, SDL_Point* center = ) p
(NULL) K
(, SDL_RendererFlip flip = SDL_FLIP_NONE\)) p n
(;) N
(      ) S
(// Para forzar un ancho y un alto de la imagen a renderizar) c n
(      ) p
(void) k
( render\(SDL_Renderer * renderer, ) p
(int) k
( x, ) p
(int) k
( y, ) p
(int) k
( width, ) p
(int) k
( height, ) p n
(SDL_Rect * rct = ) S
(NULL) K
(\);) p n
() N
(      ) S
(// Dimensiones de la imagen) c n
(      virtual ) p
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
() N
(      ) S
(// Posiciones de la imagen) c n
(      virtual ) p
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
() N
(      ) S
(// Seteo de posiciones de la imagen) c n
(      virtual ) p
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
() N
(      ) S
(//Creates image from font string) c n
(      ) p
(void) k
( loadFromRenderedText\(SDL_Renderer *, Font &, std::string textureText,) p n
( SDL_Color textColor\);) N
() N
(      ) S
(//Set color modulation) c n
(      ) p
(void) k
( setColor\(Uint8 red, Uint8 green, Uint8 blue\);) p n
() N
(      ) S
(//Set blending) c n
(texture.h) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(void) k
( setBlendMode\(SDL_BlendMode blending\);) p n
() N
(      ) S
(//Set alpha modulation) c n
(      ) p
(void) k
( setAlpha\(Uint8 alpha\);) p n
(  };) N
(}) N
() N
(#endif) K n
(texture.h) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(texture.h) (64/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 65
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(view_exceptions.h) str
(") p n
(#include) K
( <errno.h>) p n
(#include) K
( <cstdio>) p n
(#include) K
( <cstdarg>) p n
() N
(View::Exception::Exception\() S
(const) K
( ) p
(char) k
(* fmt, ...\) noexcept {) p n
(  ) S
(this) K
(->_errno = errno;) p n
(  ) N
(  va_list args;) N
(  va_start\(args, fmt\);) N
() N
(  ) S
(int) k
( s = vsnprintf\() p
(this) K
(->msg_error, ERR_BUFF_LEN, fmt, args\);) p n
(  va_end\(args\); ) N
() N
(  ) S
(if) K
( \() p
(this) K
(->_errno\) {) p n
(    strncpy\() S
(this) K
(->msg_error+s, strerror\(_errno\), ERR_BUFF_LEN-s\);) p n
(  }  ) N
() N
(  ) S
(this) K
(->msg_error[ERR_BUFF_LEN-1] = 0;) p n
(}) N
() N
(View::Exception::~Exception\(\) {}) N
() N
(const) K
( ) p
(char) k
( * View::Exception::what\(\) ) p
(const) K
( noexcept {) p n
(  ) S
(return) K
( ) p
(this) K
(->msg_error;) p n
(}) N
() N
(view_exceptions.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __COMMON_EXCEPTIONS_H__) p n
(#define) K
( __COMMON_EXCEPTIONS_H__) p n
() N
(#include) K
( <iostream>) p n
(#include) K
( <typeinfo>) p n
(#include) K
( <errno.h>) p n
(#include) K
( <cstring>) p n
(#include) K
( <cstdio>) p n
(#include) K
( <cstdarg>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(view_exceptions_messages.h) str
(") p n
() N
(#define) K
( ERR_BUFF_LEN 512) p n
() N
(namespace View {) N
(  class Exception : public std::exception {) N
(    private:) N
(      ) S
(char) k
( msg_error[ERR_BUFF_LEN];) p n
(      ) S
(int) k
( _errno;) p n
() N
(    public:) N
(      explicit Exception\() S
(const) K
( ) p
(char) k
(* fmt, ...\) noexcept;) p n
(      virtual ) S
(const) K
( ) p
(char) k
( *what\(\) ) p
(const) K
( noexcept;) p n
(      virtual ~Exception\(\) noexcept;) N
(  };) N
(}) N
() N
() N
(#endif) K n
(view_exceptions.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(view_exceptions.cpp, view_exceptions.h) (65/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 66
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __VIEW_EXCEPTION_MESSAGES_H__) p n
(#define) K
( __VIEW_EXCEPTION_MESSAGES_H__) p n
() N
(#define) K
( ERR_MSG_LOAD_IMAGE \\) p n
(") S
(No se pudo cargar la imagen) str
(") p n
() N
(#define) K
( ERR_MSG_INIT_WINDOW \\) p n
(") S
(No se pudo inicializar la ventana) str
(") p n
() N
(#define) K
( ERR_MSG_SDL_CREATE_WINDOW \\) p n
(") S
(No se pudo crear la ventana) str
(") p n
() N
(#define) K
( ERR_MSG_SDL_CREATE_RENDERER \\) p n
(") S
(No se pudo crear el renderer) str
(") p n
() N
(#define) K
( ERR_MSG_SDL_INIT_VIDEO \\) p n
(") S
(No se pudo inicializar el video de SDL) str
(") p n
() N
(#define) K
( ERR_MSG_SDL_IMAGE_INIT \\) p n
(") S
(No se pudo inicializar la imagen de SDL) str
(") p n
() N
(#define) K
( ERR_MSG_SDL_MIXER_INIT \\) p n
(") S
(No se pudo inicializar el sonido de SDL) str
(") p n
() N
(#define) K
( ERR_MSG_LOADING_SOUND \\) p n
(") S
(No se pudo cargar el sonido) str
(") p n
() N
(#define) K
( ERR_MSG_SDL_TTF_INIT \\) p n
(") S
(No se pudo inicializar TTF de SDL) str
(") p n
() N
(#define) K
( ERR_MSG_CREATE_TEXTURE \\) p n
(") S
(No se pudo crear la textura) str
(") p n
() N
(#define) K
( ERR_MSG_OPEN_FONT \\) p n
(") S
(No se pudo abrir la fuente especificada) str
(") p n
() N
(#define) K
( ERR_MSG_RENDER_TEXT_SURFACE \\) p n
(") S
(No se pudo renderizar superficie de texto) str
(") p n
() N
(#define) K
( ERR_MSG_CREATE_TEXTURE_TEXT \\) p n
(") S
(No se pudo crear la textura con el texto) str
(") p n
() N
(#define) K
( ERR_MSG_UNKNOWN_PROJECTIL_TYPE \\) p n
(") S
(Tipo de proyectil desconocido) str
(") p n
() N
(#endif) K n
(view_exceptions_messages.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(waiting_match.h) str
(") p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( <qt5/QtWidgets/QMessageBox>) p n
(#include) K
( ") p
(QStackedWidget) str
(") p n
(#include) K
( <fstream>) p n
(#include) K
( ") p
(client_game.h) str
(") p n
() N
(#define) K
( PAGE_LOBBY_INDEX 1) p n
() N
(WaitingMatch::WaitingMatch\(Protocol * p, QStackedWidget * pag\) :) N
(protocol\(p\),) N
(pages\(pag\) {) N
(    ) S
(this) K
(->keep_running = ) p
(true) k
(;) p n
(}) N
() N
(bool) k
( WaitingMatch::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(this) K
(->keep_running;) p n
(}) N
() N
(void) k
( WaitingMatch::run\() p
(void) k
(\) {) p n
(    ) S
(while) K
( \(keep_running\) {) p n
(        YAML::Node msg;) N
(        ) S
(this) K
(->protocol->rcvMsg\(msg\);) p n
() N
(        ) S
(if) K
( \(msg[") p
(code) str
("].as<) p
(int) k
(>\(\) == 1\) {) p n
(            ) S
(if) K
( \(msg[") p
(msg) str
("].as<std::string>\(\) == ") p
(exited) str
("\) {) p n
(                ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(                ) S
(return) K
(;) p n
(            }) N
(            ) S
(if) K
( \(msg[") p
(msg) str
("].as<std::string>\(\) == ") p
(started) str
("\) {) p n
(                size_t team_id = msg[") S
(team_id) str
("].as<size_t>\(\);) p n
(                ) S
(// Este evento se manda para destrabar el event receiver del ser) c n
(vidor y que pueda pasarle el socket) N
(                ) p
(// al handler de la partida...) c n
(                Event new_event\(a_goToMatch\);) p n
(                ) S
(this) K
(->protocol->sendEvent\(new_event\);      ) p n
(                ClientGame the_game\() S
(this) K
(->protocol, team_id\);) p n
(                the_game.startGame\(\);) N
(                ) S
(this) K
(->pages->setCurrentIndex\(PAGE_LOBBY_INDEX\);) p n
(                ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(                ) S
(return) K
(;) p n
(            }) N
(        } ) S
(else) K
( ) p
(if) K
( \(msg[") p
(code) str
("].as<) p
(int) k
(>\(\) == 0\) {) p n
(            ) S
(if) K
( \(msg[") p
(msg) str
("].as<std::string>\(\) == ") p
(aborted) str
("\) {) p n
(                QMessageBox msgBox;) N
(                msgBox.setWindowTitle\(") S
(Partida cancelada.) str
("\);) p n
(                msgBox.setText\(") S
(El creador del juego cancel\303\263 la partida.) str
("\);) p n
(                msgBox.exec\(\);) N
(                ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(                ) S
(return) K
(;) p n
(            }) N
(        }) N
(    }) N
(}) N
() N
(void) k
( WaitingMatch::stop\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(}) N
() N
(size_t WaitingMatch::getId\() S
(void) k
(\) ) p
(const) K
( {) p n
(waiting_match.cpp) (Page 1/2) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(view_exceptions_messages.h, waiting_match.cpp) (66/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 67
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( 0;) p n
(}) S
(waiting_match.cpp) (Page 2/2) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WAITING_MATCH_H__) p n
(#define) K
( __WAITING_MATCH_H__) p n
() N
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(QStackedWidget) str
(") p n
() N
(class WaitingMatch : public Thread {) N
(    private:) N
(        Protocol * protocol;) N
(        QStackedWidget * pages;) N
(        bool keep_running;) N
() N
(        size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
() N
(    public:) N
(        WaitingMatch\(Protocol *, QStackedWidget*\);) N
(        bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ) S
(void) k
( stop\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(waiting_match.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(waiting_match.cpp, waiting_match.h) (67/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 68
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(walking.h) str
(") p n
() N
(View::Walking::Walking\(View::Worm * worm, SDL_Renderer * r\) {) N
(  ) S
(this) K
(->state = WS_WALKING;) p n
(  ) S
(this) K
(->context = worm;) p n
(  ) S
(this) K
(->textures[NONE].loadFromFile\(gPath.PATH_WORM_WALK, r\);) p n
(  ) S
(this) K
(->textures[UP].loadFromFile\(gPath.PATH_WORM_WALK_UP, r\);) p n
(  ) S
(this) K
(->textures[DOWN].loadFromFile\(gPath.PATH_WORM_WALK_DOWN, r\);) p n
(  ) S
(this) K
(->sprites[NONE].setSpriteSheet\(&) p
(this) K
(->textures[NONE]\);) p n
(  ) S
(this) K
(->sprites[UP].setSpriteSheet\(&) p
(this) K
(->textures[UP]\);) p n
(  ) S
(this) K
(->sprites[DOWN].setSpriteSheet\(&) p
(this) K
(->textures[DOWN]\);) p n
(  ) S
(this) K
(->walkingSound.setSound\(gPath.PATH_SOUND_WORM_WALKING\);) p n
(  ) S
(this) K
(->walkingExpandSound.setSound\(gPath.PATH_SOUND_WORM_WALKING_EXPAND\);) p n
(  ) S
(this) K
(->playedExpand = ) p
(true) k
(;) p n
(}) N
() N
(View::Walking::~Walking\(\) {) N
(  ) S
(this) K
(->walkingSound.stopSound\(\);) p n
(}) N
() N
(void) k
( View::Walking::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY, worm_inclinatio) p n
(n_t incl, ) S
(bool) k
( mirrored, ) p
(int) k
( angle\) {) p n
(  ) S
(if) K
( \(!) p
(this) K
(->walkingExpandSound.isPlaying\(\) && !) p
(this) K
(->walkingSound.isPlaying\(\)\) ) p n
({) N
(    ) S
(if) K
( \() p
(this) K
(->playedExpand\) {) p n
(      ) S
(this) K
(->walkingSound.playSound\(0\);) p n
(      ) S
(this) K
(->playedExpand = ) p
(false) k
(;) p n
(    } ) S
(else) K
( {) p n
(      ) S
(this) K
(->walkingExpandSound.playSound\(0\);) p n
(      ) S
(this) K
(->playedExpand = ) p
(true) k
(;) p n
(    }) N
(  }) N
(  ) N
(  SDL_Rect clip = ) S
(this) K
(->sprites[incl].getNextClip\(\);) p n
(  View::Texture & current = ) S
(this) K
(->textures[incl];) p n
(  ) S
(if) K
( \(mirrored\) {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip, ) N
(      0, ) N
(      ) S
(NULL) K
(, ) p n
(      SDL_FLIP_HORIZONTAL) N
(    \);) N
(  } ) S
(else) K
( {) p n
(    current.render\() N
(      r, ) N
(      ) S
(this) K
(->context->getX\(\) - current.getWidth\(\) / 2 - camX, ) p n
(      ) S
(this) K
(->context->getY\(\) - current.getWidth\(\) / 2 - camY, ) p n
(      &clip) N
(    \);) N
(  }) N
(}) N
() N
(void) k
( View::Walking::resetAnimation\() p
(void) k
(\) {) p n
(  std::map<worm_inclination_t, SpriteAnimation>::iterator it = ) S
(this) K
(->sprites.beg) p n
(in\(\);) N
(  ) S
(for) K
( \(; it != ) p
(this) K
(->sprites.end\(\) ; it++\) {) p n
(    it->second.reset\(\);) N
(  }) N
(}) S
(walking.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WALKING_H__) p n
(#define) K
( __WALKING_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
() N
(  class Walking: public WormState {) N
(    private:) N
(      std::map<worm_inclination_t, View::Texture> textures;) N
(      std::map<worm_inclination_t, View::SpriteAnimation> sprites;) N
(      SoundEffect walkingSound;) N
(      SoundEffect walkingExpandSound;) N
(      bool playedExpand;) N
() N
(    public:) N
(      Walking\(View::Worm * context, SDL_Renderer * r\);) N
(      ~Walking\(\);) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
(\);) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(walking.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(walking.cpp, walking.h) (68/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 69
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(water.h) str
(") p n
() N
(View::Water::Water\(\) {}) N
() N
(View::Water::~Water\(\) {}) N
() N
(void) k
( View::Water::init\(SDL_Renderer * r, ) p
(int) k
( x, ) p
(int) k
( y, ) p
(int) k
( levelWidth, ) p
(int) k
( level) p n
(Height, ) S
(const) K
( ) p
(char) k
( * patterPath\) {) p n
(  ) S
(this) K
(->x = x;) p n
(  ) S
(this) K
(->y = y;) p n
(  ) S
(this) K
(->width = levelWidth;) p n
(  ) S
(this) K
(->height = levelHeight - y;) p n
(  ) N
(  ) S
(if) K
( \(patterPath\) {) p n
(    ) S
(this) K
(->texture.loadFromFile\(patterPath, r\);) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->texture.loadFromFile\(gPath.PATH_WATER_DEFAULT, r\);) p n
(  } ) N
(}) N
() N
(void) k
( View::Water::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(int) k
( tileWidth = ) p
(this) K
(->texture.getWidth\(\);) p n
(  ) S
(int) k
( tileHeight = ) p
(this) K
(->texture.getHeight\(\);) p n
(  ) S
(for) K
( \() p
(int) k
( x = 0 ; x <= ) p
(this) K
(->width / tileWidth ; x++\) {) p n
(    ) S
(for) K
( \() p
(int) k
( y = 0 ; y <= ) p
(this) K
(->height / tileHeight ; y++\) {) p n
(      ) S
(this) K
(->texture.render\() p n
(        r, ) N
(        ) S
(this) K
(->x + x * tileWidth - camX, ) p n
(        ) S
(this) K
(->y + y * tileHeight - camY\);) p n
(    }    ) N
(  }) N
(}) N
() N
(int) k
( View::Water::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
(int) k
( View::Water::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::Water::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Water::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Water::setX\() p
(int) k
( x\) {) p n
(  ) S
(this) K
(->x = x;) p n
(}) N
() N
(void) k
( View::Water::setY\() p
(int) k
( y\) {) p n
(  ) S
(this) K
(->y = y;) p n
(}) S
(water.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WATER_H__) p n
(#define) K
( __WATER_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
(#define) K
( MAX_FRAME 10) p n
(#define) K
( MAX_NUM_CLIP 9) p n
() N
(namespace View {) N
(  class Water: public Drawable {) N
(    private:) N
(      ) S
(int) k
( x;) p n
(      ) S
(int) k
( y;) p n
(      ) S
(int) k
( width;) p n
(      ) S
(int) k
( height;) p n
(      Texture texture;) N
(    public:) N
(      Water\(\);) N
(      ~Water\(\);) N
(      ) S
(void) k
( init\(SDL_Renderer * r, ) p
(int) k
( x, ) p
(int) k
( y, ) p
(int) k
( levelWidth, ) p
(int) k
( levelHeight,) p n
( ) S
(const) K
( ) p
(char) k
( * waterPath = ) p
(NULL) K
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(  };) N
(}) N
() N
() N
(#endif) K
(water.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(water.cpp, water.h) (69/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 70
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(wind.h) str
(") p n
() N
(#define) K
( MAX_MOD_WIND_POWER 6) p n
(#define) K
( WHITE_TICKNESS_PERCENT 10) p n
() N
(View::Wind::Wind\(SDL_Renderer * r, ) S
(int) k
( width, ) p
(int) k
( height\) : ) p n
(  text\(height / 2, 2, gPath.PATH_FONT_ARIAL_BOLD\) {) N
(  ) S
(this) K
(->windPower = 0;) p n
(  ) S
(this) K
(->width = width;) p n
(  ) S
(this) K
(->height = height;) p n
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
() N
(  ) S
(this) K
(->whiteTickness = ) p
(this) K
(->height / \(100 / WHITE_TICKNESS_PERCENT\);) p n
() N
(  SDL_Color black = {0,0,0,0};) N
(  ) S
(this) K
(->text.setBackgroundColor\(black\);) p n
() N
(  SDL_Color white = {255, 255, 255, 255};) N
(  ) S
(this) K
(->text.setTextColor\(white\);) p n
() N
(  ) S
(this) K
(->text.setText\(r, ") p
(Wind force) str
("\);) p n
(  ) S
(this) K
(->windLeft.loadFromFile\(gPath.PATH_WIND_LEFT, r\);) p n
(  ) S
(this) K
(->windRight.loadFromFile\(gPath.PATH_WIND_RIGHT, r\);) p n
(}) N
() N
(View::Wind::~Wind\(\) {) N
() N
(}) N
() N
(int) k
( View::Wind::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->width;) p n
(}) N
() N
(int) k
( View::Wind::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->height;) p n
(}) N
() N
(int) k
( View::Wind::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Wind::getY\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Wind::setX\() p
(int) k
( x\) {) p n
() S 8 T () S
(this) K
(->x = x - ) p
(this) K
(->width / 2;) p n
(  ) S
(this) K
(->text.setX\() p
(this) K
(->x - ) p
(this) K
(->text.getWidth\(\) / 2 - ) p
(this) K
(->whiteTickness\);) p n
(}) N
() N
(void) k
( View::Wind::setY\() p
(int) k
( y\) {) p n
() S 8 T () S
(this) K
(->y = y - ) p
(this) K
(->height / 2;) p n
(  ) S
(this) K
(->text.setY\() p
(this) K
(->y + ) p
(this) K
(->height / 2\);) p n
(}) N
() N
(void) k
( View::Wind::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(// White rect) c n
(  SDL_Rect whiteRect = {) p n
(    ) S
(this) K
(->x,) p n
(    ) S
(this) K
(->y,) p n
(    ) S
(this) K
(->width,) p n
(wind.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(this) K
(->height,) p n
(  };) N
() N
(  SDL_SetRenderDrawColor\(r, 0xFF, 0xFF, 0xFF, 0xFF\);        ) N
(  SDL_RenderFillRect\(r, &whiteRect\);) N
() N
(  ) S
(// Black rects) c n
(  SDL_Rect blackRect = {) p n
(    ) S
(this) K
(->x + ) p
(this) K
(->whiteTickness,) p n
(    ) S
(this) K
(->y + ) p
(this) K
(->whiteTickness,) p n
(    ) S
(this) K
(->width - ) p
(this) K
(->whiteTickness - ) p
(this) K
(->width / 2 - ) p
(this) K
(->whiteTickness / ) p n
(2, ) N
(    ) S
(this) K
(->height - ) p
(this) K
(->whiteTickness * 2,) p n
(  };) N
() N
(  SDL_SetRenderDrawColor\(r, 0x00, 0x00, 0x00, 0xFF\);        ) N
(  SDL_RenderFillRect\(r, &blackRect\);) N
() N
(  blackRect = {) N
(    ) S
(this) K
(->x + ) p
(this) K
(->width / 2 + ) p
(this) K
(->whiteTickness / 2,) p n
(    ) S
(this) K
(->y + ) p
(this) K
(->whiteTickness,) p n
(    ) S
(this) K
(->width - ) p
(this) K
(->whiteTickness - ) p
(this) K
(->width / 2 - ) p
(this) K
(->whiteTickness / ) p n
(2, ) N
(    ) S
(this) K
(->height - ) p
(this) K
(->whiteTickness * 2,) p n
(  };) N
() N
(  SDL_SetRenderDrawColor\(r, 0x00, 0x00, 0x00, 0xFF\);        ) N
(  SDL_RenderFillRect\(r, &blackRect\);) N
() N
(  ) S
(if) K
( \() p
(this) K
(->windPower > 0\) {) p n
(    ) S
(this) K
(->windRight.render\(r, ) p
(this) K
(->windRectX, ) p
(this) K
(->windRectY, ) p
(this) K
(->windRectWi) p n
(dth, ) S
(this) K
(->height - ) p
(this) K
(->whiteTickness * 2\);) p n
(  } ) S
(else) K
( {) p n
(    ) S
(this) K
(->windLeft.render\(r, ) p
(this) K
(->windRectX, ) p
(this) K
(->windRectY, ) p
(this) K
(->windRectWid) p n
(th, ) S
(this) K
(->height - ) p
(this) K
(->whiteTickness * 2\);) p n
(  }) N
() N
(  ) S
(this) K
(->text.render\(r, 0, 0\);) p n
(}) N
() N
(void) k
( View::Wind::setWindPower\() p
(int) k
( newPower\) {) p n
(  ) S
(this) K
(->windPower = newPower;) p n
() N
(  ) S
(int) k
( maxWidth = ) p
(this) K
(->width / 2 - ) p
(this) K
(->whiteTickness - ) p
(this) K
(->whiteTickness / 2) p n
(;) N
(  ) S
(this) K
(->windRectWidth = \(abs\(newPower\) * maxWidth\) / MAX_MOD_WIND_POWER;) p n
() N
(  ) S
(if) K
( \(newPower > 0\) {) p n
(    ) S
(this) K
(->windRectX = ) p
(this) K
(->x + ) p
(this) K
(->width / 2 + ) p
(this) K
(->whiteTickness / 2;) p n
(  }) N
() N
(  ) S
(if) K
( \(newPower <= 0\) {) p n
(    ) S
(this) K
(->windRectX = ) p
(this) K
(->x + ) p
(this) K
(->width / 2 - ) p
(this) K
(->whiteTickness / 2 - ) p
(this) K
() p n
(->windRectWidth;) N
(  }) N
() N
(  ) S
(this) K
(->windRectY = ) p
(this) K
(->y + ) p
(this) K
(->whiteTickness;) p n
(}) N
(wind.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(wind.cpp) (70/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 71
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WIND_H__) p n
(#define) K
( __WIND_H__) p n
() N
(#include) K
( <stdlib.h>) p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
() N
(namespace View {) N
(  class Wind: public Drawable {) N
(    private:) N
(      ) S
(int) k
( windPower;) p n
(      ) S
(int) k
( whiteTickness;) p n
(      ) S
(int) k
( windRectWidth;) p n
(      ) S
(int) k
( windRectX;) p n
(      ) S
(int) k
( windRectY;) p n
() N
(      Texture windLeft;) N
(      Texture windRight;) N
() N
(      RectangleText text;) N
() N
(    public:) N
(      Wind\(SDL_Renderer * r, ) S
(int) k
(, ) p
(int) k
(\);) p n
(      ~Wind\(\);) N
() N
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
() N
(      ) S
(void) k
( setWindPower\() p
(int) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K
(wind.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <vector>) p n
(#include) K
( <iterator>) p n
(#include) K
( ") p
(window_game.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( <limits.h>) p n
() N
(#define) K
( MAP_WIDTH 2500) p n
(#define) K
( MAP_HEIGHT 1500) p n
(#define) K
( BACKGROUND_PATH ") p
(/usr/etc/worms/temp/background.png) str
(") p n
() N
(View::WindowGame::WindowGame\(YAML::Node & staticNode, ) S
(int) k
( w, ) p
(int) k
( h, ) p
(bool) k
( fs, ) p
(boo) k n
(l) S
( ed_mode\) : staticMap\(staticNode\) {) p n
() S 8 T () S
(this) K
(->screen_width = w;) p n
() S 8 T () S
(this) K
(->screen_height = h;) p n
() S 8 T () S
(this) K
(->full_screen = fs;) p n
() S 8 T () S
(this) K
(->edition_mode = ed_mode;) p n
() S 8 T () S
(this) K
(->init\(\);) p n
() S 8 T () S
(if) K
( \() p
(this) K
(->edition_mode\) {) p n
() S 8 T () S 16 T () S
(this) K
(->background.loadFromFile\() p
(this) K
(->staticMap[") p
(background) str
("][") p
(file) str
("]) p n
(.as<std::string>\(\), renderer\);) N
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(this) K
(->background.loadFromFile\(BACKGROUND_PATH, renderer\);) p n
() S 8 T (}) N
() S 8 T () S
(this) K
(->backgroundDisplayMode = ) p
(this) K
(->staticMap[") p
(background) str
("][") p
(display) str
("].as<st) p n
(d::string>\(\);) N
() S 8 T () S
(this) K
(->loadStaticObjects\(\);) p n
() S 8 T () S
(this) K
(->water.init\() p n
() S 8 T () S 16 T () S
(this) K
(->renderer,) p n
() S 8 T () S 16 T (0,) N
() S 8 T () S 16 T (MAP_HEIGHT - ) S
(this) K
(->staticMap[") p
(water_level) str
("].as<) p
(int) k
(>\(\),) p n
() S 8 T () S 16 T (MAP_WIDTH,) N
() S 8 T () S 16 T (MAP_HEIGHT,) N
() S 8 T () S 16 T (gPath.PATH_WATER_2.c_str\(\)) N
() S 8 T (\);) N
(}) N
() N
(void) k
( View::WindowGame::loadStaticObjects\() p
(void) k
(\) {) p n
() S 8 T () S
(const) K
( YAML::Node & nodeShortGirders = ) p
(this) K
(->staticMap[") p
(short_girders) str
("];) p n
() S 8 T () S
(const) K
( YAML::Node & nodeLongGirders = ) p
(this) K
(->staticMap[") p
(long_girders) str
("];) p n
() S 8 T (YAML::const_iterator it;) N
() N
() S 8 T () S
(for) K
( \(it = nodeShortGirders.begin\(\) ; it != nodeShortGirders.end\(\) ; it++) p n
(\) {) N
() S 8 T () S 16 T () S
(const) K
( YAML::Node & eachGirder = *it;) p n
() S 8 T () S 16 T (View::GirderShort * newShortGirder = ) S
(new) K
( View::GirderShort\() p
(this) K
(-) p n
(>renderer, eachGirder[") S
(angle) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T (newShortGirder->setX\(eachGirder[") S
(x) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T (newShortGirder->setY\(eachGirder[") S
(y) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->shortGirders.push_back\(newShortGirder\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(for) K
( \(it = nodeLongGirders.begin\(\) ; it != nodeLongGirders.end\(\) ; it++\) ) p n
({) N
() S 8 T () S 16 T () S
(const) K
( YAML::Node & eachGirder = *it;) p n
() S 8 T () S 16 T (View::GirderLong * newLongGirder = ) S
(new) K
( View::GirderLong\() p
(this) K
(->re) p n
(nderer, eachGirder[") S
(angle) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T (newLongGirder->setX\(eachGirder[") S
(x) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T (newLongGirder->setY\(eachGirder[") S
(y) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S
(this) K
(->longGirders.push_back\(newLongGirder\);) p n
() S 8 T (}) N
(window_game.cpp) (Page 1/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(wind.h, window_game.cpp) (71/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 72
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(}) p n
() N
(View::WindowGame::~WindowGame\(\) {) N
(    ) S
(this) K
(->close\(\);) p n
(}) N
() N
(int) k
( View::WindowGame::getWidthResolution\() p
(void) k
(\) {) p n
() S 8 T (SDL_DisplayMode DM;) N
() S 8 T (SDL_GetCurrentDisplayMode\(0, &DM\);) N
() S 8 T () S
(return) K
( DM.w;) p n
(}) N
() N
(int) k
( View::WindowGame::getHeightResolution\() p
(void) k
(\) {) p n
() S 8 T (SDL_DisplayMode DM;) N
() S 8 T (SDL_GetCurrentDisplayMode\(0, &DM\);) N
() S 8 T () S
(return) K
( DM.h;) p n
(}) N
() N
(void) k
( View::WindowGame::init\() p
(void) k
(\) {) p n
() S 8 T () S
(// Initialize SDL) c n
() p 8 T () S
(if) K
( \(SDL_Init\(SDL_INIT_VIDEO | SDL_INIT_AUDIO\) < 0\) {) p n
(        ) S
(throw) K
( View::Exception\(") p
(%s. SDL Error: %s) str
(", ERR_MSG_SDL_INIT_VIDEO, SDL_GetEr) p n
(ror\(\)\);) N
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(// Set texture filtering to linear) c n
() p 8 T () S 16 T () S
(if) K
( \(!SDL_SetHint\( SDL_HINT_RENDER_SCALE_QUALITY, ") p
(1) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T (printf\( ") S
(Warning: Linear texture filtering not enabled!) str
(" \);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(// Si se inicio con los argumentos en 0 se inicializa con ) c n
() p 8 T () S 16 T () S
(// el tamano de la pantalla) c n
() p 8 T () S 16 T () S
(if) K
( \() p
(this) K
(->full_screen\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->screen_width = ) p
(this) K
(->getWidthResolution\(\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->screen_height = ) p
(this) K
(->getHeightResolution\(\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// Create window) c n
() p 8 T () S 16 T () S
(this) K
(->window = SDL_CreateWindow\() p n
(            ") S
(Worms Taller Party) str
(", ) p n
(            SDL_WINDOWPOS_UNDEFINED, ) N
(            SDL_WINDOWPOS_UNDEFINED, ) N
(            ) S
(this) K
(->screen_width, ) p n
(            ) S
(this) K
(->screen_height, ) p n
(            ) S
(this) K
(->full_screen ? SDL_WINDOW_FULLSCREEN : SDL_WINDOW_SHOWN) p n
(        \);) N
() N
() S 8 T () S 16 T () S
(if) K
( \() p
(this) K
(->window == ) p
(NULL) K
(\) {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( View::Exception\(") p
(%s. SDL Error: %s) str
(", ERR_MSG_SDL_CREAT) p n
(E_WINDOW, SDL_GetError\(\)\);) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(//Create this->renderer for window) c n
() p 8 T () S 16 T () S 24 T () S
(//this->renderer = SDL_CreateRenderer\( gWindow, -1, SDL_) c n
(RENDERER_ACCELERATED \);) N
() p 8 T () S 16 T () S 24 T () S
(this) K
(->renderer = SDL_CreateRenderer\() p
(this) K
(->window, -1, SD) p n
(L_RENDERER_ACCELERATED\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \() p
(this) K
(->renderer == ) p
(NULL) K
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(throw) K
( View::Exception\(") p
(%s. SDL Error: %s) str
(", ERR_MSG_S) p n
(DL_CREATE_RENDERER, SDL_GetError\(\)\);) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(//Initialize this->renderer color) c n
() p 8 T () S 16 T () S 24 T () S 32 T (SDL_SetRenderDrawColor\( ) S
(this) K
(->renderer, 0xFF, 0x) p n
(FF, 0xFF, 0xFF \);) N
(window_game.cpp) (Page 2/5) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S
(//Initialize PNG loading) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( imgFlags = IMG_INIT_PNG;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(!\(IMG_Init\(imgFlags\) & imgFlags\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(throw) K
( View::Exception\(") p
(%s. SDL Error: %s) str
(", E) p n
(RR_MSG_SDL_IMAGE_INIT, IMG_GetError\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(Mix_OpenAudio\(44100, MIX_DEFAULT_FORMAT, 2, ) p n
(2048\) < 0\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(throw) K
( View::Exception\(") p
(%s. SDL Error: %s) str
(", E) p n
(RR_MSG_SDL_MIXER_INIT, Mix_GetError\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// Inicializamos TTF) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(TTF_Init\(\) == -1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(throw) K
( View::Exception\(") p
(%s. SDL Error: %s) str
(", E) p n
(RR_MSG_SDL_TTF_INIT, TTF_GetError\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::WindowGame::close\() p
(void) k
(\) {) p n
() S 8 T () S
(//Destroy window) c 32 T () N
() p 8 T (SDL_DestroyRenderer\() S
(this) K
(->renderer\);) p n
() S 8 T (SDL_DestroyWindow\() S
(this) K
(->window\);) p n
() S 8 T () S
(this) K
(->window = ) p
(NULL) K
(;) p n
() S 8 T () S
(this) K
(->renderer = ) p
(NULL) K
(;) p n
() N
() S 8 T () S
(//Destroy girders) c n
() p 8 T () S
(for) K
( \(size_t i = 0 ; i < ) p
(this) K
(->longGirders.size\(\) ; i++\) {) p n
() S 8 T () S 16 T () S
(delete) K
( longGirders[i];) p n
() S 8 T (}) N
() N
() S 8 T () S
(for) K
( \(size_t i = 0 ; i < ) p
(this) K
(->shortGirders.size\(\) ; i++\) {) p n
() S 8 T () S 16 T () S
(delete) K
( shortGirders[i];) p n
() S 8 T (}) N
() N
() S 8 T () S
(//Quit SDL subsystems) c n
() p 8 T (IMG_Quit\(\);) N
() S 8 T (SDL_Quit\(\);) N
() S 8 T (Mix_Quit\(\);) N
() S 8 T (TTF_Quit\(\);) N
(}) N
() N
(SDL_Renderer * View::WindowGame::getRenderer\() S
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->renderer;) p n
(}) N
() N
(int) k
( View::WindowGame::getScreenWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->screen_width;) p n
(}) N
() N
(int) k
( View::WindowGame::getScreenHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->screen_height;) p n
(}) N
() N
(int) k
( View::WindowGame::getBgWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(//return this->background.getWidth\(\);) c n
() p 8 T () S
(return) K
( MAP_WIDTH;) p n
(}) N
(window_game.cpp) (Page 3/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(window_game.cpp) (72/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 73
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(int) k
( View::WindowGame::getBgHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
() S 8 T () S
(//return this->background.getHeight\(\);) c n
() p 8 T () S
(return) K
( MAP_HEIGHT;) p n
(}) N
() N
(void) k
( View::WindowGame::render\(View::Camera & camera\) {) p n
() S 8 T () S
(this) K
(->renderBackground\(camera\);) p n
() N
() S 8 T (std::vector<View::GirderLong *>::iterator it_l;) N
() S 8 T () S
(for) K
( \(it_l = ) p
(this) K
(->longGirders.begin\(\); it_l != ) p
(this) K
(->longGirders.end\(\); ) p n
(it_l++\) {) N
() S 8 T () S 16 T (\(*it_l\)->render\() S
(this) K
(->renderer, camera.getX\(\), camera.getY\(\)\);) p n
() S 8 T (}) N
() N
() S 8 T (std::vector<View::GirderShort *>::iterator it_s;) N
() S 8 T () S
(for) K
( \(it_s = ) p
(this) K
(->shortGirders.begin\(\); it_s != ) p
(this) K
(->shortGirders.end\(\)) p n
(; it_s++\) {) N
() S 8 T () S 16 T (\(*it_s\)->render\() S
(this) K
(->renderer, camera.getX\(\), camera.getY\(\)\);) p n
() S 8 T (}) N
(}) N
() N
(void) k
( View::WindowGame::renderWater\(View::Camera & camera\) {) p n
() S 8 T () S
(this) K
(->water.render\() p
(this) K
(->renderer, camera.getX\(\), camera.getY\(\)\);) p n
(}) N
() N
(void) k
( View::WindowGame::renderBackground\(Camera & c\) {) p n
() S 8 T () S
(// Expandida) c n
() p 8 T () S
(if) K
( \() p
(this) K
(->backgroundDisplayMode == ") p
(expanded) str
("\) {) p n
() S 8 T () S 16 T () S
(this) K
(->background.render\() p
(this) K
(->renderer, 0 - c.getX\(\), 0 - c.getY) p n
(\(\), MAP_WIDTH, MAP_HEIGHT\);) N
() S 8 T () S 16 T () S
(return) K
(;) p n
() S 8 T (}) S 16 T () N
() N
() S 8 T () S
(// Mosaico) c n
() p 8 T () S
(int) k
( bgW = ) p
(this) K
(->background.getWidth\(\);) p n
() S 8 T () S
(int) k
( bgH = ) p
(this) K
(->background.getHeight\(\);) p n
() S 8 T () S
(if) K
( \() p
(this) K
(->backgroundDisplayMode == ") p
(mosaic) str
("\) {) p n
() S 8 T () S 16 T () S
(for) K
( \(size_t i = 0 ; i * bgW < MAP_WIDTH ; i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(for) K
( \(size_t j = 0 ; j * bgH < MAP_HEIGHT ; j++\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(this) K
(->background.render\() p
(this) K
(->renderer, i * bgW ) p n
(- c.getX\(\), j * bgH - c.getY\(\)\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(// Centrado) c n
() p 8 T () S
(if) K
( \() p
(this) K
(->backgroundDisplayMode == ") p
(centered) str
("\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(bgW < MAP_WIDTH && bgH < MAP_HEIGHT\) {) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->background.render\() p
(this) K
(->renderer, \(MAP_WIDTH - bgW) p n
(\) / 2 - c.getX\(\), \(MAP_HEIGHT - bgH\) / 2 - c.getY\(\)\);) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(// Si la imagen es mas grande que el mapa) c n
() p 8 T () S 16 T () S 24 T () S
(// se dibuja el fondo centrado) c n
() p 8 T () S 16 T () S 24 T () S
(this) K
(->background.render\() p
(this) K
(->renderer, 0 - c.getX\(\), 0 ) p n
(- c.getY\(\), MAP_WIDTH, MAP_HEIGHT\);) N
() S 8 T () S 16 T () S 24 T () S
(return) K
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::WindowGame::hide\() p
(void) k
(\) {) p n
(window_game.cpp) (Page 4/5) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (SDL_HideWindow\() S
(this) K
(->window\);) p n
(}) N
() N
(void) k
( View::WindowGame::show\() p
(void) k
(\) {) p n
() S 8 T (SDL_ShowWindow\() S
(this) K
(->window\);) p n
(}) S
(window_game.cpp) (Page 5/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(window_game.cpp) (73/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 74
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WINDOW_GAME_H__) p n
(#define) K
( __WINDOW_GAME_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <SDL2/SDL_mixer.h>) p n
(#include) K
( <vector>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(girder_short.h) str
(") p n
(#include) K
( ") p
(girder_long.h) str
(") p n
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(water.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(namespace View {) N
(class WindowGame;) N
(}) N
() N
(class View::WindowGame {) N
(  private:) N
(    SDL_Renderer * renderer;) N
(    SDL_Window* window;) N
(     ) S
(// Vector de vigas creadas) c n
(    std::vector<View::GirderLong *> longGirders;) p n
(    std::vector<View::GirderShort *> shortGirders;) N
(    ) S
(int) k
( screen_width;) p n
(    ) S
(int) k
( screen_height;) p n
(    bool full_screen;) N
(    bool edition_mode;) N
(    ) N
(    YAML::Node & staticMap;) N
(    Water water;) N
() N
(    ) S
(// TODO: Crear clase background y encapsular esto) c n
(    View::Texture background;) p n
(    std::string backgroundDisplayMode;) N
() N
(    ) S
(void) k
( init\() p
(void) k
(\);) p n
(    bool loadMedia\() S
(void) k
(\);) p n
(    ) S
(void) k
( close\() p
(void) k
(\);) p n
(    ) S
(int) k
( getWidthResolution\() p
(void) k
(\);) p n
(    ) S
(int) k
( getHeightResolution\() p
(void) k
(\);) p n
(    ) S
(void) k
( loadStaticObjects\() p
(void) k
(\);) p n
() N
(  public:) N
(    ) S
(// Constructor para el cliente) c n
(    WindowGame\(YAML::Node &, ) p
(int) k
( w = 0, ) p
(int) k
( h = 0, bool fs = false, bool ed_mode) p n
( = false\);) N
(    ) N
(    ) S
(// Constructor para el editor de mapas) c n
(    WindowGame\(std::string pathToBg, ) p
(int) k
( waterLevel\);) p n
(    ~WindowGame\(\);) N
(    SDL_Renderer * getRenderer\() S
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(int) k
( getScreenWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(int) k
( getScreenHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(int) k
( getBgWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(int) k
( getBgHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(void) k
( render\(View::Camera &\);) p n
() N
(    ) S
(// El agua debe ser lo ultimo que se dibuja) c n
(    ) p
(void) k
( renderWater\(View::Camera &\);) p n
() N
(window_game.h) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(// Renderiza el fondo. Se puede programar) c n
(    ) p
(// para que sea en mosaico, centrado o expandido) c n
(    ) p
(void) k
( renderBackground\(View::Camera &\);) p n
() N
(    ) S
(// Esconde la ventana) c n
(    ) p
(void) k
( hide\() p
(void) k
(\);) p n
() N
(    ) S
(// Muestra la ventana) c n
(    ) p
(void) k
( show\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K n
(window_game.h) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(window_game.h) (74/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 75
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(worm.h) str
(") p n
() N
(#define) K
( PADDING 1) p n
(#define) K
( RECTANGLE_HEIGHT 22) p n
(#define) K
( DISTANCE_TEXT_FROM_WORM 30) p n
(#define) K
( FPC 2) p n
() N
(View::Worm::Worm\(SDL_Renderer * r, std::string name, size_t team, ) S
(int) k
( health\) :) p n
(  sight\(r\),) N
(  team\(team\),) N
(  health\(health\),) N
(  font\(gPath.PATH_FONT_ARIAL_BOLD, 20\),) N
(  healthTxt\(RECTANGLE_HEIGHT, PADDING, gPath.PATH_FONT_ARIAL_BOLD\),) N
(  nameTxt\(RECTANGLE_HEIGHT, PADDING, gPath.PATH_FONT_ARIAL_BOLD\) {) N
() N
(  SDL_Color colors[] = {) N
(    {0, 0, 0, 0},) N
(    {255, 0, 0, 0},) N
(    {0, 255, 0, 0},) N
(    {0, 0, 255, 0}) N
(  };) N
(  ) N
(  ) S
(this) K
(->mirrored = ) p
(false) k
(;) p n
(  ) S
(this) K
(->walking = ) p
(false) k
(;) p n
(  ) S
(this) K
(->alive = ) p
(true) k
(;) p n
(  ) S
(this) K
(->falling = ) p
(false) k
(;) p n
(  ) S
(this) K
(->protagonic = ) p
(false) k
(;) p n
() N
(  ) S
(this) K
(->x = 0;) p n
(  ) S
(this) K
(->y = 0;) p n
(  ) S
(this) K
(->inclination = NONE;) p n
(  ) S
(this) K
(->angleDirection = 0;) p n
(  ) S
(this) K
(->name = name;) p n
() N
(  ) S
(this) K
(->nameText.loadFromRenderedText\(r, ) p
(this) K
(->font, name, colors[) p
(this) K
(->team]\);) p n
(  ) S
(this) K
(->healthText.loadFromRenderedText\(r, ) p
(this) K
(->font, std::to_string\() p
(this) K
(->heal) p n
(th\), colors[) S
(this) K
(->team]\);) p n
() N
(  ) S
(this) K
(->healthTxt.setTextColor\(colors[) p
(this) K
(->team]\);) p n
(  ) S
(this) K
(->nameTxt.setTextColor\(colors[) p
(this) K
(->team]\);) p n
() N
(  ) S
(this) K
(->healthTxt.setText\(r, std::to_string\() p
(this) K
(->health\)\);) p n
(  ) S
(this) K
(->nameTxt.setText\(r, name\);) p n
() N
(  ) S
(this) K
(->dataConfiguration = ALL;) p n
() N
(  ) S
(this) K
(->states[WS_BREATHING] = ) p
(new) K
( View::Breathing\() p
(this) K
(, r\);) p n
(  ) S
(this) K
(->states[WS_WALKING] = ) p
(new) K
( View::Walking\() p
(this) K
(, r\);) p n
(  ) S
(this) K
(->states[WS_FALLING] = ) p
(new) K
( View::Falling\() p
(this) K
(, r\);) p n
(  ) S
(this) K
(->states[WS_FLYING] = ) p
(new) K
( View::Flying\() p
(this) K
(, r\);) p n
(  ) S
(this) K
(->states[WS_DEAD] = ) p
(new) K
( View::Dead\() p
(this) K
(, r\);) p n
() N
(  ) S
(this) K
(->state = ) p
(this) K
(->states[WS_BREATHING];) p n
(  ) S
(this) K
(->stateName = WS_BREATHING;) p n
(}) N
() N
(View::Worm::~Worm\(\) {) N
(  std::map<view_worm_state_t, WormState *>::iterator it = ) S
(this) K
(->states.begin\(\);) p n
(  ) S
(for) K
( \(; it != ) p
(this) K
(->states.end\(\) ; it++\) {) p n
(    ) S
(delete) K
( it->second;) p n
(worm.cpp) (Page 1/4) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  }) p n
(}) N
() N
(int) k
( View::Worm::getWidth\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( 60;) p n
(}) N
() N
(int) k
( View::Worm::getHeight\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( 60;) p n
(}) N
() N
(int) k
( View::Worm::getX\() p
(void) k
(\) ) p
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->x;) p n
(}) N
() N
(int) k
( View::Worm::getY\() p
(void) k
(\) ) p
(const) K
( { ) p n
(  ) S
(return) K
( ) p
(this) K
(->y;) p n
(}) N
() N
(void) k
( View::Worm::setX\() p
(int) k
( x\) {) p n
(  ) S
(this) K
(->healthTxt.setX\(x\);) p n
(  ) S
(this) K
(->nameTxt.setX\(x\);) p n
(  ) S
(this) K
(->x = x;) p n
(}) N
() N
(void) k
( View::Worm::setY\() p
(int) k
( y\) {) p n
(  ) S
(this) K
(->healthTxt.setY\(y - ) p
(this) K
(->healthTxt.getHeight\(\) / 2 - DISTANCE_TEXT_FROM_) p n
(WORM\);) N
(  ) S
(this) K
(->nameTxt.setY\() p
(this) K
(->healthTxt.getY\(\) - ) p
(this) K
(->nameTxt.getHeight\(\) / 2\);) p n
(  ) S
(this) K
(->y = y;) p n
(}) N
() N
(void) k
( View::Worm::setState\(view_worm_state_t newState\) {) p n
(  ) S
(this) K
(->state->resetAnimation\(\);) p n
(  ) S
(this) K
(->stateName = newState;) p n
(  ) S
(this) K
(->state = ) p
(this) K
(->states[newState];) p n
(}) N
() N
(void) k
( View::Worm::updateState\() p
(const) K
( YAML::Node & status\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->stateName == WS_DEAD\) {) p n
(    ) S
(return) K
(;) p n
(  }) N
() N
(  ) S
(this) K
(->mirrored = status[") p
(mirrored) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(this) K
(->inclination = \(worm_inclination_t\)status[") p
(inclination) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(bool) k
( walking = status[") p
(walking) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(bool) k
( falling = status[") p
(falling) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(bool) k
( grounded = status[") p
(grounded) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(this) K
(->affectedByExplosion = status[") p
(affected_by_explosion) str
("].as<) p
(int) k
(>\(\);) p n
(  ) S
(this) K
(->angleDirection = status[") p
(angle_direction) str
("].as<) p
(int) k
(>\(\);) p n
() N
(  ) S
(if) K
( \(affectedByExplosion\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->stateName != WS_FLYING\) {) p n
(      ) S
(this) K
(->setState\(WS_FLYING\);) p n
(      ) S
(return) K
(;) p n
(    }) N
(  }  ) N
() N
(  ) S
(if) K
( \(grounded && !walking && !affectedByExplosion\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->stateName != WS_BREATHING\) {) p n
(      ) S
(this) K
(->setState\(WS_BREATHING\);) p n
(      ) S
(return) K
(;) p n
(worm.cpp) (Page 2/4) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(worm.cpp) (75/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 76
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    }) p n
(  }) N
() N
(  ) S
(if) K
( \(walking && !affectedByExplosion\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->stateName != WS_WALKING\) {) p n
(      ) S
(this) K
(->setState\(WS_WALKING\);) p n
(      ) S
(return) K
(;) p n
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(falling && !affectedByExplosion\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->stateName != WS_FALLING\) {) p n
(      ) S
(this) K
(->setState\(WS_FALLING\);) p n
(      ) S
(return) K
(;) p n
(    }) N
(  }) N
(}) N
() N
(void) k
( View::Worm::render\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(this) K
(->state->render\(r, camX, camY, ) p
(this) K
(->inclination, ) p
(this) K
(->mirrored, ) p
(this) K
(->an) p n
(gleDirection\);) N
(  ) N
(  ) S
(// Display de la data) c n
(  ) p
(this) K
(->renderWormData\(r, camX, camY\);) p n
() N
(  ) S
(// Display sight if protagonic) c n
(  ) p
(if) K
( \() p
(this) K
(->protagonic\) {) p n
(    ) S
(this) K
(->sight.setXYcenter\() p
(this) K
(->x, ) p
(this) K
(->y\);) p n
(    ) S
(this) K
(->sight.setMirrored\() p
(this) K
(->mirrored\);) p n
(    ) S
(this) K
(->sight.render\(r, camX, camY\);) p n
(  }) N
(}) N
() N
(void) k
( View::Worm::renderWormData\(SDL_Renderer * r, ) p
(int) k
( camX, ) p
(int) k
( camY\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->stateName == WS_DEAD\) {) p n
(    ) S
(return) K
(;) p n
(  }) N
(  ) N
(  ) S
(if) K
( \() p
(this) K
(->dataConfiguration != NO_DATA\) {) p n
(    ) S
(this) K
(->healthTxt.setText\(r, std::to_string\() p
(this) K
(->health\)\);) p n
(    ) S
(this) K
(->healthTxt.render\(r, camX, camY\);) p n
() N
(    ) S
(if) K
( \() p
(this) K
(->dataConfiguration == ALL\) {) p n
(      ) S
(this) K
(->nameTxt.render\(r, camX, camY\);) p n
(    }  ) N
(  }) N
(}) N
() N
(void) k
( View::Worm::setHealth\() p
(int) k
( newHealth\) {) p n
(  ) S
(if) K
( \() p
(this) K
(->stateName != WS_DEAD\) {) p n
(    ) S
(this) K
(->health = newHealth;) p n
(    ) S
(if) K
( \() p
(this) K
(->health <= 0\) {) p n
(      ) S
(this) K
(->setState\(WS_DEAD\);) p n
(    }) N
(  }) N
(}) N
() N
(int) k
( View::Worm::getHealth\() p
(void) k
(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->health;) p n
(}) N
() N
(bool) k
( View::Worm::isAlive\() p
(void) k
(\) {) p n
(worm.cpp) (Page 3/4) (jun 26, 18 12:23) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  ) p
(return) K
( ) p
(this) K
(->alive;) p n
(}) N
() N
(void) k
( View::Worm::setMirrored\() p
(bool) k
( mirr\) {) p n
(  ) S
(this) K
(->mirrored = mirr;) p n
(}) N
() N
(void) k
( View::Worm::setWalking\() p
(bool) k
( walk\) {) p n
(  ) S
(this) K
(->walking = walk;) p n
(}) N
() N
(void) k
( View::Worm::setFalling\() p
(bool) k
( fall\) {) p n
(  ) S
(this) K
(->falling = fall;) p n
(}) N
() N
(void) k
( View::Worm::setGrounded\() p
(bool) k
( grd\) {) p n
(  ) S
(this) K
(->grounded = grd;) p n
(}) N
() N
(void) k
( View::Worm::setProtagonic\() p
(bool) k
( p\) {) p n
(  ) S
(this) K
(->protagonic = p;) p n
(}) N
() N
(void) k
( View::Worm::setSightAngle\() p
(int) k
( angle\) {) p n
(  ) S
(this) K
(->sight.setAngle\(angle\);) p n
(}) N
() N
(void) k
( View::Worm::setAffectedByExplosion\() p
(bool) k
( af\) {) p n
(  ) S
(this) K
(->affectedByExplosion = af;) p n
(}) N
() N
(void) k
( View::Worm::setDataConfiguration\(worm_data_cfg_t config\) {) p n
(  ) S
(this) K
(->dataConfiguration = config;) p n
(}) N
() N
(bool) k
( View::Worm::isAffectedByExplosion\(\) {) p n
(  ) S
(return) K
( ) p
(this) K
(->affectedByExplosion;) p n
(}) N
() N
(std::string View::Worm::getName\(\) ) S
(const) K
( {) p n
(  ) S
(return) K
( ) p
(this) K
(->name;) p n
(}) S
(worm.cpp) (Page 4/4) (jun 26, 18 12:23) title
border
grestore
(Printed by Gabriel Robles) rhead
(worm.cpp) (76/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 77
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __VIEW_WORM_H__) p n
(#define) K
( __VIEW_WORM_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <map>) p n
(#include) K
( <string>) p n
() N
(// States) c n
(#include) K
( ") p
(worm_state.h) str
(") p n
(#include) K
( ") p
(breathing.h) str
(") p n
(#include) K
( ") p
(walking.h) str
(") p n
(#include) K
( ") p
(falling.h) str
(") p n
(#include) K
( ") p
(flying.h) str
(") p n
(#include) K
( ") p
(dead.h) str
(") p n
() N
(#include) K
( ") p
(texture.h) str
(") p n
(#include) K
( ") p
(drawable.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(rectangle_text.h) str
(") p n
(#include) K
( ") p
(sprite_animation.h) str
(") p n
(#include) K
( ") p
(sound_effect.h) str
(") p n
(#include) K
( ") p
(font.h) str
(") p n
(#include) K
( ") p
(sight.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(namespace View {) N
(  class WormState;) N
() N
(  class Worm: public Drawable {) N
(    private:) N
(      ) S
(// Animation) c n
(      std::map<view_worm_state_t, WormState *> states;) p n
(      ) N
(      View::WormState * state;) N
(      view_worm_state_t stateName;) N
(      ) N
(      ) S
(// Animation state) c n
(      bool grounded;) p n
(      bool mirrored;) N
(      bool walking;) N
(      bool falling;) N
(      bool alive;) N
(      bool protagonic;) N
(      bool affectedByExplosion;) N
(      ) S
(int) k
( angleDirection;) p n
(      worm_inclination_t inclination;) N
(      std::string name;) N
() N
(      ) N
(      ) N
(      Sight sight;) N
() N
() N
(      ) S
(// Worm data) c n
(      size_t team;) p n
(      ) S
(int) k
( health;) p n
() N
(      ) S
(// Worm data UI) c n
(      worm_data_cfg_t dataConfiguration;) p n
(      Font font;) N
(      Texture nameText;) N
(worm.h) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      Texture healthText;) p n
(      RectangleText healthTxt;) N
(      RectangleText nameTxt;) N
() N
(      ) S
(// Setea el nuevo state del worm) c n
(      ) p
(void) k
( setState\(view_worm_state_t\);) p n
() N
(    public:) N
(      Worm\(SDL_Renderer *, std::string, size_t, ) S
(int) k
(\);) p n
(      virtual ~Worm\() S
(void) k
(\);) p n
(      virtual ) S
(int) k
( getWidth\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getHeight\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getX\() p
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(int) k
( getY\() p
(void) k
(\) ) p
(const) K
(;) p n
(      std::string getName\() S
(void) k
(\) ) p
(const) K
(;) p n
(      virtual ) S
(void) k
( setX\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( setY\() p
(int) k
(\);) p n
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      ) S
(void) k
( updateState\() p
(const) K
( YAML::Node &\);) p n
(      ) S
(void) k
( setProtagonic\(bool\);) p n
(      ) S
(void) k
( setMirrored\(bool\);) p n
(      ) S
(void) k
( setWalking\(bool\);) p n
(      ) S
(void) k
( renderWormData\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(\);) p n
(      ) S
(void) k
( setHealth\() p
(int) k
(\);) p n
(      ) S
(void) k
( setFalling\(bool\);) p n
(      ) S
(void) k
( setGrounded\(bool\);) p n
(      ) S
(void) k
( setAffectedByExplosion\(bool\);) p n
(      ) S
(void) k
( setSightAngle\() p
(int) k
(\);) p n
(      ) S
(void) k
( setDataConfiguration\(worm_data_cfg_t\);) p n
(      ) S
(int) k
( getHealth\() p
(void) k
(\);) p n
(      bool isAlive\() S
(void) k
(\);) p n
(      bool isAffectedByExplosion\() S
(void) k
(\);) p n
(  };) N
(}) N
() N
(#endif) K n
(worm.h) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(worm.h) (77/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 78
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <string>) p n
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(worms_status.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
() N
(View::WormsStatus::WormsStatus\(YAML::Node & nodeWorms, SDL_Renderer * rend\) {) N
() S 8 T (YAML::const_iterator itTeam;) N
() S 8 T () S
(for) K
( \(itTeam = nodeWorms.begin\(\) ; itTeam != nodeWorms.end\(\) ; itTeam++\) ) p n
({) N
() S 8 T () S 16 T () S
(int) k
( teamId = itTeam->first.as<) p
(int) k
(>\(\);) p n
() S 8 T () S 16 T () S
(const) K
( YAML::Node & eachTeam = itTeam->second[") p
(worms) str
("];) p n
() S 8 T () S 16 T (YAML::const_iterator itWorms;) N
() S 8 T () S 16 T () S
(for) K
( \(itWorms = eachTeam.begin\(\) ; itWorms != eachTeam.end\(\) ; it) p n
(Worms++\) {) N
() S 8 T () S 16 T () S 24 T () S
(const) K
( YAML::Node & eachWorm = *itWorms;) p n
() S 8 T () S 16 T () S 24 T (View::Worm * newWorm = ) S
(new) K
( View::Worm\(rend, eachWorm[") p
(na) str n
(me) S
("].as<std::string>\(\), teamId, eachWorm[") p
(health) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S 24 T (newWorm->setX\(eachWorm[") S
(x) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S 24 T (newWorm->setY\(eachWorm[") S
(y) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S 24 T () S
(this) K
(->worms[eachWorm[") p
(id) str
("].as<size_t>\(\)] = newWorm;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::WormsStatus::render\(SDL_Renderer * renderer, View::Camera & camera\) {) p n
() S 8 T (std::map<size_t, View::Worm *>::iterator it;) N
() N
() S 8 T () S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
() S 8 T () S 16 T (it->second->render\(renderer, camera.getX\(\), camera.getY\(\)\);) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::WormsStatus::update\() p
(const) K
( YAML::Node & wormsNode\) {) p n
() S 8 T (View::Worm * worm;) N
() S 8 T (YAML::const_iterator itTeam;) N
() S 8 T () S
(for) K
( \(itTeam = wormsNode.begin\(\) ; itTeam != wormsNode.end\(\) ; itTeam++\) ) p n
({) N
() S 8 T () S 16 T () S
(const) K
( YAML::Node & eachTeam = itTeam->second[") p
(worms) str
("];) p n
() S 8 T () S 16 T (YAML::const_iterator itWorms;) N
() S 8 T () S 16 T () S
(for) K
( \(itWorms = eachTeam.begin\(\) ; itWorms != eachTeam.end\(\) ; it) p n
(Worms++\) {) N
() S 8 T () S 16 T () S 24 T () S
(const) K
( YAML::Node & eachWorm = *itWorms;) p n
() S 8 T () S 16 T () S 24 T (worm = ) S
(this) K
(->worms[eachWorm[") p
(id) str
("].as<size_t>\(\)];) p n
() S 8 T () S 16 T () S 24 T (worm->setX\(eachWorm[") S
(x) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S 24 T (worm->setY\(eachWorm[") S
(y) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S 24 T (worm->setHealth\(eachWorm[") S
(health) str
("].as<) p
(int) k
(>\(\)\);) p n
() S 8 T () S 16 T () S 24 T (worm->updateState\(eachWorm[") S
(status) str
("]\);) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::WormsStatus::updateWormProtagonic\(size_t wormId\) {) p n
() S 8 T (std::map<size_t, View::Worm *>::const_iterator it = ) S
(this) K
(->worms.begin\(\);) p n
() S 8 T () S
(for) K
( \(; it != ) p
(this) K
(->worms.end\(\) ; it++\) {) p n
() S 8 T () S 16 T (View::Worm * eachWorm = it->second;) N
() S 8 T () S 16 T (eachWorm->setProtagonic\(it->first == wormId\);) N
() S 8 T (}) N
(}) N
() N
(void) k
( View::WormsStatus::updateWormsClientConfiguration\(ClientConfiguration & cfg) p n
(\) {) N
() S 8 T (std::map<size_t, View::Worm *>::const_iterator it = ) S
(this) K
(->worms.begin\(\);) p n
(worms_status.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(for) K
( \(; it != ) p
(this) K
(->worms.end\(\) ; it++\) {) p n
() S 8 T () S 16 T (View::Worm * eachWorm = it->second;) N
() S 8 T () S 16 T (eachWorm->setDataConfiguration\(cfg.getWormDataConfiguration\(\)\);) N
() S 8 T () S 16 T (eachWorm->setSightAngle\(cfg.getSightAngle\(\)\);) N
() S 8 T (}) N
(}) N
() N
(View::WormsStatus::~WormsStatus\() S
(void) k
(\) {) p n
() S 8 T (std::map<size_t, View::Worm *>::iterator it;) N
() N
() S 8 T () S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
() S 8 T () S 16 T () S
(delete) K
( it->second;) p n
() S 8 T (}) N
(}) N
() N
(const) K
( View::Worm * View::WormsStatus::getWormView\(size_t id\) {) p n
() S 8 T () S
(if) K
( \() p
(this) K
(->worms.find\(id\) != ) p
(this) K
(->worms.end\(\)\) {) p n
() S 8 T () S 16 T () S
(return) K
( ) p
(this) K
(->worms[id];) p n
() S 8 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S
(return) K
( nullptr;) p n
() S 8 T (}) N
(}) N
() N
(const) K
( View::Worm * View::WormsStatus::getWormAffectedByExplosion\(\) {) p n
() S 8 T (std::map<size_t, View::Worm *>::iterator it;) N
() S 8 T () S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(it->second->isAffectedByExplosion\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(this) K
(->getWormView\(it->first\);) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() S 8 T () S
(return) K
( nullptr;) p n
(}) S
(worms_status.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(worms_status.cpp) (78/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 79
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WORMS_STATUS_H__) p n
(#define) K
( __WORMS_STATUS_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( <map>) p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(worm.h) str
(") p n
(#include) K
( ") p
(camera.h) str
(") p n
(#include) K
( ") p
(client_configuration.h) str
(") p n
() N
(namespace View {) N
(    class WormsStatus;) N
(}) N
() N
(class View::WormsStatus {) N
(    private:) N
(        std::map<size_t, View::Worm *> worms;) N
(    public:) N
(        ~WormsStatus\() S
(void) k
(\);) p n
(        WormsStatus\(YAML::Node &, SDL_Renderer * r\);) N
(        ) S
(void) k
( render\(SDL_Renderer *, View::Camera &\);) p n
(        ) S
(void) k
( update\() p
(const) K
( YAML::Node &\);) p n
(        ) S
(void) k
( updateWormProtagonic\(size_t\);) p n
(        ) S
(void) k
( updateWormsClientConfiguration\(ClientConfiguration &\);) p n
() N
(        ) S
(// Devuelve un puntero constante a la vista) c n
(        ) p
(// del worm con el id pasado por parametro) c n
(        ) p
(// en caso de no existir devuelve NULL) c n
(        ) p
(const) K
( View::Worm * getWormView\(size_t id\);) p n
(        ) S
(const) K
( View::Worm * getWormAffectedByExplosion\(\);) p n
(        ) N
(};) N
() N
(#endif) K
(worms_status.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WORM_STATE_H__) p n
(#define) K
( __WORM_STATE_H__) p n
() N
(#include) K
( <SDL2/SDL.h>) p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(paths.h) str
(") p n
() N
(namespace View {) N
(  class Worm;) N
() N
(  class WormState {) N
(    protected:) N
(      View::Worm * context;) N
(      view_worm_state_t state;) N
() N
(    public:) N
(      virtual ~WormState\(\) {};) N
(      virtual ) S
(void) k
( render\(SDL_Renderer *, ) p
(int) k
(, ) p
(int) k
(, worm_inclination_t, bool, ) p
(in) k n
(t) S
( a = -1\) = 0;) p n
(      virtual ) S
(void) k
( resetAnimation\() p
(void) k
(\) = 0;) p n
(      view_worm_state_t getState\() S
(void) k
(\) {) p n
(        ) S
(return) K
( this->state;) p n
(      }) N
(  };) N
(}) N
() N
(#endif) K
(worm_state.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(worms_status.h, worm_state.h) (79/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 80
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Table of Contents) K n
( 1 ) p
(air_strike.cpp......) k
( sheets   1 to   1 \( 1\) pages   1-  1   40 lines) p n
( 2 ) S
(air_strike.h........) k
( sheets   1 to   1 \( 1\) pages   2-  2   22 lines) p n
( 3 ) S
(banana.cpp..........) k
( sheets   2 to   2 \( 1\) pages   3-  3   48 lines) p n
( 4 ) S
(banana.h............) k
( sheets   2 to   2 \( 1\) pages   4-  4   22 lines) p n
( 5 ) S
(bazooka.cpp.........) k
( sheets   3 to   3 \( 1\) pages   5-  5   45 lines) p n
( 6 ) S
(bazooka.h...........) k
( sheets   3 to   3 \( 1\) pages   6-  6   23 lines) p n
( 7 ) S
(breathing.cpp.......) k
( sheets   4 to   4 \( 1\) pages   7-  7   47 lines) p n
( 8 ) S
(breathing.h.........) k
( sheets   4 to   4 \( 1\) pages   8-  8   29 lines) p n
( 9 ) S
(camera.cpp..........) k
( sheets   5 to   6 \( 2\) pages   9- 11  156 lines) p n
(10 ) S
(camera.h............) k
( sheets   6 to   6 \( 1\) pages  12- 12   62 lines) p n
(11 ) S
(client_configuration.cpp) k
( sheets   7 to   9 \( 3\) pages  13- 17  302 lines) p n
(12 ) S
(client_configuration.h) k
( sheets   9 to  10 \( 2\) pages  18- 19   76 lines) p n
(13 ) S
(client_game.cpp.....) k
( sheets  10 to  12 \( 3\) pages  20- 24  281 lines) p n
(14 ) S
(client_game.h.......) k
( sheets  13 to  13 \( 1\) pages  25- 25   36 lines) p n
(15 ) S
(client_lobby.cpp....) k
( sheets  13 to  17 \( 5\) pages  26- 33  406 lines) p n
(16 ) S
(client_lobby.h......) k
( sheets  17 to  18 \( 2\) pages  34- 35   85 lines) p n
(17 ) S
(client_settings.cpp.) k
( sheets  18 to  18 \( 1\) pages  36- 36    9 lines) p n
(18 ) S
(client_settings.h...) k
( sheets  19 to  19 \( 1\) pages  37- 37   20 lines) p n
(19 ) S
(clock.cpp...........) k
( sheets  19 to  20 \( 2\) pages  38- 39   91 lines) p n
(20 ) S
(clock.h.............) k
( sheets  20 to  20 \( 1\) pages  40- 40   43 lines) p n
(21 ) S
(cluster.cpp.........) k
( sheets  21 to  21 \( 1\) pages  41- 41   47 lines) p n
(22 ) S
(cluster.h...........) k
( sheets  21 to  21 \( 1\) pages  42- 42   27 lines) p n
(23 ) S
(dead.cpp............) k
( sheets  22 to  22 \( 1\) pages  43- 44   93 lines) p n
(24 ) S
(dead.h..............) k
( sheets  23 to  23 \( 1\) pages  45- 45   40 lines) p n
(25 ) S
(drawable.h..........) k
( sheets  23 to  23 \( 1\) pages  46- 46   25 lines) p n
(26 ) S
(dynamite.cpp........) k
( sheets  24 to  24 \( 1\) pages  47- 47   54 lines) p n
(27 ) S
(dynamite.h..........) k
( sheets  24 to  24 \( 1\) pages  48- 48   35 lines) p n
(28 ) S
(event_sender.cpp....) k
( sheets  25 to  25 \( 1\) pages  49- 49   47 lines) p n
(29 ) S
(event_sender.h......) k
( sheets  25 to  25 \( 1\) pages  50- 50   27 lines) p n
(30 ) S
(explosion.cpp.......) k
( sheets  26 to  26 \( 1\) pages  51- 52   64 lines) p n
(31 ) S
(explosion.h.........) k
( sheets  27 to  27 \( 1\) pages  53- 53   37 lines) p n
(32 ) S
(falling.cpp.........) k
( sheets  27 to  27 \( 1\) pages  54- 54   41 lines) p n
(33 ) S
(falling.h...........) k
( sheets  28 to  28 \( 1\) pages  55- 55   29 lines) p n
(34 ) S
(flash_notice.cpp....) k
( sheets  28 to  29 \( 2\) pages  56- 57   66 lines) p n
(35 ) S
(flash_notice.h......) k
( sheets  29 to  29 \( 1\) pages  58- 58   28 lines) p n
(36 ) S
(flying.cpp..........) k
( sheets  30 to  30 \( 1\) pages  59- 60   88 lines) p n
(37 ) S
(flying.h............) k
( sheets  31 to  31 \( 1\) pages  61- 61   33 lines) p n
(38 ) S
(font.cpp............) k
( sheets  31 to  31 \( 1\) pages  62- 62   20 lines) p n
(39 ) S
(font.h..............) k
( sheets  32 to  32 \( 1\) pages  63- 63   22 lines) p n
(40 ) S
(girder.cpp..........) k
( sheets  32 to  33 \( 2\) pages  64- 65   74 lines) p n
(41 ) S
(girder.h............) k
( sheets  33 to  33 \( 1\) pages  66- 66   46 lines) p n
(42 ) S
(girder_long.cpp.....) k
( sheets  34 to  34 \( 1\) pages  67- 67   38 lines) p n
(43 ) S
(girder_long.h.......) k
( sheets  34 to  34 \( 1\) pages  68- 68   19 lines) p n
(44 ) S
(girder_short.cpp....) k
( sheets  35 to  35 \( 1\) pages  69- 69   38 lines) p n
(45 ) S
(girder_short.h......) k
( sheets  35 to  35 \( 1\) pages  70- 70   17 lines) p n
(46 ) S
(green_grenade.cpp...) k
( sheets  36 to  36 \( 1\) pages  71- 71   47 lines) p n
(47 ) S
(green_grenade.h.....) k
( sheets  36 to  36 \( 1\) pages  72- 72   27 lines) p n
(48 ) S
(holy_grenade.cpp....) k
( sheets  37 to  37 \( 1\) pages  73- 73   56 lines) p n
(49 ) S
(holy_grenade.h......) k
( sheets  37 to  37 \( 1\) pages  74- 74   30 lines) p n
(50 ) S
(inventory.cpp.......) k
( sheets  38 to  38 \( 1\) pages  75- 75   15 lines) p n
(51 ) S
(inventory_editor.cpp) k
( sheets  38 to  41 \( 4\) pages  76- 82  362 lines) p n
(52 ) S
(inventory_editor.h..) k
( sheets  42 to  42 \( 1\) pages  83- 84   94 lines) p n
(53 ) S
(inventory.h.........) k
( sheets  43 to  43 \( 1\) pages  85- 85   53 lines) p n
(54 ) S
(inventory_weapons.cpp) k
( sheets  43 to  45 \( 3\) pages  86- 90  276 lines) p n
(55 ) S
(inventory_weapons.h.) k
( sheets  46 to  46 \( 1\) pages  91- 92   75 lines) p n
(56 ) S
(main.cpp............) k
( sheets  47 to  47 \( 1\) pages  93- 93   24 lines) p n
(57 ) S
(model_receiver.cpp..) k
( sheets  47 to  47 \( 1\) pages  94- 94   42 lines) p n
(58 ) S
(model_receiver.h....) k
( sheets  48 to  48 \( 1\) pages  95- 95   25 lines) p n
(59 ) S
(pick_weapon.cpp.....) k
( sheets  48 to  48 \( 1\) pages  96- 96   44 lines) p n
(60 ) S
(pick_weapon.h.......) k
( sheets  49 to  49 \( 1\) pages  97- 97   30 lines) p n
(61 ) S
(projectil.cpp.......) k
( sheets  49 to  50 \( 2\) pages  98- 99   68 lines) p n
(Table of Content) (Page 1/2) (jun 26, 18 12:47) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(62 ) p
(projectiles.cpp.....) k
( sheets  50 to  51 \( 2\) pages 100-101  114 lines) p n
(63 ) S
(projectiles.h.......) k
( sheets  51 to  51 \( 1\) pages 102-102   45 lines) p n
(64 ) S
(projectil.h.........) k
( sheets  52 to  52 \( 1\) pages 103-103   49 lines) p n
(65 ) S
(protected_dynamics.cpp) k
( sheets  52 to  53 \( 2\) pages 104-105  101 lines) p n
(66 ) S
(protected_dynamics.h) k
( sheets  53 to  53 \( 1\) pages 106-106   29 lines) p n
(67 ) S
(rectangle_text.cpp..) k
( sheets  54 to  54 \( 1\) pages 107-108   93 lines) p n
(68 ) S
(rectangle_text.h....) k
( sheets  55 to  55 \( 1\) pages 109-109   48 lines) p n
(69 ) S
(shoot_power.cpp.....) k
( sheets  55 to  56 \( 2\) pages 110-111   84 lines) p n
(70 ) S
(shoot_power.h.......) k
( sheets  56 to  56 \( 1\) pages 112-112   29 lines) p n
(71 ) S
(sight.cpp...........) k
( sheets  57 to  57 \( 1\) pages 113-114   68 lines) p n
(72 ) S
(sight.h.............) k
( sheets  58 to  58 \( 1\) pages 115-115   44 lines) p n
(73 ) S
(sprite_animation.cpp) k
( sheets  58 to  59 \( 2\) pages 116-118  159 lines) p n
(74 ) S
(sprite_animation.h..) k
( sheets  60 to  60 \( 1\) pages 119-119   55 lines) p n
(75 ) S
(teams_health.cpp....) k
( sheets  60 to  61 \( 2\) pages 120-122  130 lines) p n
(76 ) S
(teams_health.h......) k
( sheets  62 to  62 \( 1\) pages 123-123   43 lines) p n
(77 ) S
(texture.cpp.........) k
( sheets  62 to  63 \( 2\) pages 124-126  159 lines) p n
(78 ) S
(texture.h...........) k
( sheets  64 to  64 \( 1\) pages 127-128   67 lines) p n
(79 ) S
(view_exceptions.cpp.) k
( sheets  65 to  65 \( 1\) pages 129-129   28 lines) p n
(80 ) S
(view_exceptions.h...) k
( sheets  65 to  65 \( 1\) pages 130-130   30 lines) p n
(81 ) S
(view_exceptions_messages.h) k
( sheets  66 to  66 \( 1\) pages 131-131   47 lines) p n
(82 ) S
(waiting_match.cpp...) k
( sheets  66 to  67 \( 2\) pages 132-133   64 lines) p n
(83 ) S
(waiting_match.h.....) k
( sheets  67 to  67 \( 1\) pages 134-134   24 lines) p n
(84 ) S
(walking.cpp.........) k
( sheets  68 to  68 \( 1\) pages 135-135   60 lines) p n
(85 ) S
(walking.h...........) k
( sheets  68 to  68 \( 1\) pages 136-136   33 lines) p n
(86 ) S
(water.cpp...........) k
( sheets  69 to  69 \( 1\) pages 137-137   55 lines) p n
(87 ) S
(water.h.............) k
( sheets  69 to  69 \( 1\) pages 138-138   36 lines) p n
(88 ) S
(wind.cpp............) k
( sheets  70 to  70 \( 1\) pages 139-140  115 lines) p n
(89 ) S
(wind.h..............) k
( sheets  71 to  71 \( 1\) pages 141-141   41 lines) p n
(90 ) S
(window_game.cpp.....) k
( sheets  71 to  73 \( 3\) pages 142-146  232 lines) p n
(91 ) S
(window_game.h.......) k
( sheets  74 to  74 \( 1\) pages 147-148   74 lines) p n
(92 ) S
(worm.cpp............) k
( sheets  75 to  76 \( 2\) pages 149-152  226 lines) p n
(93 ) S
(worm.h..............) k
( sheets  77 to  77 \( 1\) pages 153-154   99 lines) p n
(94 ) S
(worms_status.cpp....) k
( sheets  78 to  78 \( 1\) pages 155-156   89 lines) p n
(95 ) S
(worms_status.h......) k
( sheets  79 to  79 \( 1\) pages 157-157   35 lines) p n
(96 ) S
(worm_state.h........) k
( sheets  79 to  79 \( 1\) pages 158-158   27 lines) p n
(Table of Content) (Page 2/2) (jun 26, 18 12:47) title
border
grestore
(Printed by Gabriel Robles) rhead
(Table of Content) (80/80) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
