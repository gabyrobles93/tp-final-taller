#ifndef CONFIGURATION_H
#define CONFIGURATION_H

class Configuration {
public:
    Configuration();
    //TURN
    float TURN_DURATION;
    
    //CONVERSIONS
    float DEGTORAD;
    float RADTODEG;
    float SCALING_FACTOR;

    //WORLD
    float WORLD_TIME_STEP;
    float WORLD_VELOCITY_ITERATIONS;
    float WORLD_POSITION_ITERATIONS;
    float WORLD_Y_LIMIT;
    
    //WORM
    float WORM_SPEED;
    float WORM_JUMP_IMPULSE;
    int WORM_MAX_FALL_DISTANCE;

    //BAZOOKA
    int BAZOOKA_BLAST_RADIUS;
    int BAZOOKA_BLAST_POWER;

    //MORTAR
    int MORTAR_BLAST_RADIUS;
    int MORTAR_BLAST_POWER;
    int MORTAR_FRAGMENT_QUANTITY;
    int MORTAR_FRAGMENT_BLAST_RADIUS;
    int MORTAR_FRAGMENT_BLAST_POWER;

    //GRENADE
    float GRENADE_RESTITUTION;
    
    //RED GRENADE
    int RED_GRENADE_BLAST_RADIUS;
    int RED_GRENADE_BLAST_POWER;
    int RED_GRENADE_FRAGMENT_QUANTITY;
    int RED_GRENADE_FRAGMENT_BLAST_RADIUS;
    int RED_GRENADE_FRAGMENT_BLAST_POWER;

    //WIND
    int MAX_WIND_FORCE;
    int MIN_WIND_FORCE;

    //BANANA
    int BANANA_BLAST_RADIUS;
    int BANANA_BLAST_POWER;

    //HOLY GRENADE
    int HOLY_GRENADE_BLAST_RADIUS;
    int HOLY_GRENADE_BLAST_POWER;

    //AIRSTRIKE
    int AIR_STRIKE_BLAST_RADIUS;
    int AIR_STRIKE_BLAST_POWER;
    int AIR_STRIKE_MISSIL_QUANTITY;

    //BAT
    int BAT_DAMAGE;
    int BAT_LENGTH;
    int BAT_IMPULSE;

    //DYNAMITE
    int DYNAMITE_BLAST_RADIUS;
    int DYNAMITE_BLAST_POWER;
    
    //GREEN GRENADE
    int GREEN_GRENADE_BLAST_RADIUS;
    int GREEN_GRENADE_BLAST_POWER;
};

extern Configuration gConfiguration;

#endif