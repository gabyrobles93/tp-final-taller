%!PS-Adobe-3.0
%%Title: AirStrike.cpp, AirStrike.h, Bat.cpp, Bat.h, Bazooka.cpp, Bazooka.h, client.cpp, client.h, Configuration.cpp, Configuration.h
%%For: Gabriel Robles
%%Creator: a2ps version 4.14
%%CreationDate: Tue Jun 26 12:49:24 2018
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 60
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1,1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(AirStrike.h) str
(") p n
() N
(AirStrike::AirStrike\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY\) : ) p n
(//Weapon\(w_air_strike\),) c n
(world\(world\) {) p n
(    ) S
(this) K
(->id = id;) p n
(    ) S
(this) K
(->deploy_x = posX;) p n
(    ) S
(this) K
(->deploy_y = posY;) p n
(    createMissils\(\);) N
(}) N
() N
(AirStrike::~AirStrike\(\) {) N
(    ) S
(// for\(std::vector<Missil*>::iterator it = this->missils.begin\(\); it != this) c n
(->missils.end\(\); ++it\) {) N
(    ) p
(//     delete \(*it\);) c n
(    ) p
(// }) c n
(}) p n
() N
(void) k
( AirStrike::createMissils\(\) {) p n
(    ) S
(for) K
( \() p
(int) k
( i = 1; i <= gConfiguration.AIR_STRIKE_MISSIL_QUANTITY; ++i\) {) p n
(        ) S
(this) K
(->missils.push_back\() p
(new) K
( Missil\() p
(this) K
(->id+i,) p n
(        ) S
(this) K
(->world,) p n
(        ) S
(this) K
(->deploy_x + \(i\),) p n
(        ) S
(this) K
(->deploy_y,) p n
(        w_air_strike\)\);) N
(    }) N
(}) N
() N
(std::vector<Missil*> AirStrike::getMissils\(\) {) N
(    ) S
(return) K
( ) p
(this) K
(->missils;) p n
(}) S
(AirStrike.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( AIR_STRIKE_H) p n
(#define) K
( AIR_STRIKE_H) p n
() N
(//#include "Weapon.h") c n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Missil.h) str
(") p n
() N
(class AirStrike {) N
(private:) N
(    b2World& world;) N
(    std::vector<Missil*> missils;) N
(    ) S
(float) k
( deploy_x;) p n
(    ) S
(float) k
( deploy_y;) p n
(    ) S
(int) k
( id;) p n
(    ) S
(void) k
( createMissils\(\);) p n
(public:) N
(    AirStrike\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY\);) p n
(    ~AirStrike\(\);) N
(    std::vector<Missil*> getMissils\(\);) N
(};) N
() N
(#endif) K
(AirStrike.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(AirStrike.cpp, AirStrike.h) (1/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Bat.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(Bat::Bat\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(bool) k
( mirrored, ) p
(float) k
( angle\) :) p n
(world\(world\) {) N
(    ) S
(this) K
(->posX = posX;) p n
(    ) S
(this) K
(->posY = posY;) p n
(    ) S
(this) K
(->mirrored = mirrored;) p n
(    ) S
(this) K
(->angle = angle;) p n
(    ) S
(this) K
(->rayLength = gConfiguration.BAT_LENGTH;) p n
(    rayCast\(\);) N
(}) N
() N
(void) k
( Bat::rayCast\(\) {) p n
(    ) S
(float) k
( c_angle;) p n
(    ) S
(if) K
( \(mirrored\) {) p n
(        c_angle = 90 - angle;) N
(    } ) S
(else) K
( c_angle = 270 + angle;) p n
() N
(    c_angle = c_angle * gConfiguration.DEGTORAD;    ) N
(    b2Vec2 rayDir\(sinf\(c_angle\), cosf\(c_angle\)\);) N
(    b2Vec2 center\(posX, posY\);) N
(    rayDir.y = -rayDir.y;    ) N
(    b2Vec2 p2 = center + rayLength * rayDir;) N
(    RayCastClosestCallBack callback;) N
() N
(    ) S
(this) K
(->world.RayCast\(&callback, center, p2\);) p n
(    ) S
(if) K
( \(callback.body\) {) p n
(        entity_t entity_type = ) S
(static_cast) k
(<Entity*>\(callback.body->GetUserData\(\)) p n
(\)->getEntityType\(\);) N
(        ) S
(if) K
( \(entity_type == WORM\) {   ) p n
(            Worm * worm = ) S
(static_cast) k
(<Worm*>\(callback.body->GetUserData\(\)\);     ) p n
(    ) N
(            atack\(worm, callback.body\);) N
(        }) N
(    }) N
() N
(}) N
() N
(void) k
( Bat::atack\(Worm* worm, b2Body* body\) {) p n
(    ) S
(float) k
( impulse = body->GetMass\(\) * gConfiguration.BAT_IMPULSE;) p n
(    ) S
(float) k
( x_impulse = impulse * cosf\(angle * gConfiguration.DEGTORAD\);) p n
(    ) S
(float) k
( y_impulse = impulse * sinf\(angle * gConfiguration.DEGTORAD\);) p n
(    ) S
(if) K
( \(!mirrored\) x_impulse = x_impulse * -1;) p n
(    body->ApplyLinearImpulse\(b2Vec2\(x_impulse, -y_impulse\), body->GetWorldCenter) N
(\(\),) S
(true) k
(\);) p n
(    worm->hurt\(gConfiguration.BAT_DAMAGE\);) N
(    worm->setAffectedByExplosion\(\);) N
(}) S
(Bat.cpp) (Page 1/1) (jun 26, 18 11:13) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( BAT_H) p n
(#define) K
( BAT_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(PhysicEntity.h) str
(") p n
(#include) K
( ") p
(RayCastClosestCallBack.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
() N
(class Bat {) N
(private:) N
(    b2World& world;) N
(    ) S
(float) k
( posX;) p n
(    ) S
(float) k
( posY;) p n
(    bool mirrored;) N
(    ) S
(float) k
( angle;) p n
(    ) S
(int) k
( rayLength;) p n
(public:) N
(    Bat\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, bool mirrored, ) p
(float) k
( angle\);) p n
(    ) S
(void) k
( rayCast\() p
(void) k
(\);) p n
(    ) S
(void) k
( atack\(Worm* worm, b2Body* body\);) p n
(};) N
() N
(#endif) K
(Bat.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Bat.cpp, Bat.h) (2/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Bazooka.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(Bazooka::Bazooka\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( mirrored,) p n
( ) N
(float) k
( shooting_angle, ) p
(int) k
( power_factor, weapon_t type\) : ) p n
(Weapon\(type\),) N
(world\(world\) {) N
(    b2BodyDef bazookaDef;) N
(    bazookaDef.type = b2_dynamicBody;) N
(    bazookaDef.position.Set\(posX, posY\);) N
(    b2Body* body = world.CreateBody\(&bazookaDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    b2PolygonShape bazookaShape;) N
(    bazookaShape.SetAsBox\(BAZOOKA_WIDTH/2, BAZOKOA_HEIGHT/2\);) N
() N
(    b2FixtureDef bazookaFixture;) N
(    bazookaFixture.shape = &bazookaShape;) N
(    bazookaFixture.density = 1;) N
(    bazookaFixture.friction = 0.3;) N
(    body->CreateFixture\(&bazookaFixture\);) N
(    ) S
(this) K
(->body = body;) p n
() N
(    ) S
(this) K
(->wind_affected = ) p
(true) k
(;) p n
(    ) S
(this) K
(->exploded = ) p
(false) k
(;) p n
(    ) S
(this) K
(->power_factor = power_factor;) p n
(    ) S
(this) K
(->mirrored = mirrored;) p n
(    ) S
(this) K
(->shooting_angle = shooting_angle;) p n
(    ) S
(this) K
(->id = id;) p n
(    ) S
(this) K
(->blast_power = gConfiguration.BAZOOKA_BLAST_POWER;) p n
(    ) S
(this) K
(->blast_radius = gConfiguration.BAZOOKA_BLAST_RADIUS;) p n
(    shoot\(\);) N
(}) N
() N
(Bazooka::~Bazooka\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Bazooka::explode\(\) {) p n
(    ExplosionManager explosionManager\() S
(this) K
(->world\);) p n
(    b2Vec2 center = ) S
(this) K
(->body->GetPosition\(\);) p n
(    explosionManager.manageExplosion\(center, blast_radius, blast_power\);) N
(    ) S
(this) K
(->exploded = ) p
(true) k
(;) p n
(}) N
() N
(float) k
( Bazooka::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Bazooka::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
() N
(void) k
( Bazooka::shoot\(\) {) p n
(    ) S
(float) k
( impulse = ) p
(this) K
(->body->GetMass\(\) * power_factor;) p n
(    ) S
(float) k
( x_impulse = impulse * cosf\(shooting_angle * gConfiguration.DEGTORAD\);) p n
(    ) S
(float) k
( y_impulse = impulse * sinf\(shooting_angle * gConfiguration.DEGTORAD\);) p n
(    ) S
(if) K
( \(!mirrored\) x_impulse = x_impulse * -1;) p n
(    ) S
(this) K
(->body->ApplyLinearImpulse\(b2Vec2\(x_impulse, -y_impulse\), ) p
(this) K
(->body->Ge) p n
(tWorldCenter\(\), ) S
(true) k
(\);) p n
(Bazooka.cpp) (Page 1/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(}) p n
() N
(void) k
( Bazooka::update\() p
(int) k
( currenTime, ) p
(int) k
( wind_force\) {) p n
(    ) S
(if) K
( \(getPosY\(\) > gConfiguration.WORLD_Y_LIMIT ) p
(/*|| contact*/) c
(\) {) p n
(        ) S
(this) K
(->explode\(\);) p n
(    }) N
(    ) S
(if) K
( \(wind_affected\) {) p n
(        ) S
(this) K
(->body->ApplyForce\(body->GetMass\(\) * b2Vec2\(wind_force,0\), body->Get) p n
(WorldCenter\(\), ) S
(true) k
(\);) p n
(    }) N
(    b2Vec2 mov_speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
() N
(    ) S
(if) K
( \(round\(mov_speed.x\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.y > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 180;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.y < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 0;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(if) K
( \(round\(mov_speed.y\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.x > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 90;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.x < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 270;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(int) k
( ang = atan\(mov_speed.x/mov_speed.y\) * gConfiguration.RADTODEG;) p n
() N
(    ) S
(// Primer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = -ang;) p n
(    }) N
() N
(    ) S
(// Segundo cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 360 - ang;) p n
(    }) N
() N
(    ) S
(// Tercer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
() N
(    ) S
(// Cuarto cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
(}) N
() N
(bool) k
( Bazooka::isMoving\(\) {) p n
(    b2Vec2 speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(if) K
( \(!speed.x && !speed.y\) ) p
(return) K
( ) p
(false) k
(;) p n
(Bazooka.cpp) (Page 2/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Bazooka.cpp) (3/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3,1) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( ) p
(true) k
(;) p n
(}) N
() N
(Bazooka.cpp) (Page 3/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( BAZOOKA_H) p n
(#define) K
( BAZOOKA_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
() N
(#define) K
( BAZOOKA_WIDTH 0.7f) p n
(#define) K
( BAZOKOA_HEIGHT 0.2f) p n
() N
(class Bazooka : public Weapon {) N
(protected:) N
(    b2World& world;) N
(    b2Body* body;) N
(    ) S
(int) k
( shooting_angle;) p n
(    ) S
(int) k
( power_factor;) p n
(    bool mirrored;) N
(    ) S
(int) k
( blast_power;) p n
(public:) N
(    Bazooka\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( mirrored, ) p
(floa) k n
(t) S
( shooting_angle, ) p
(int) k
( power_factor, weapon_t type\);) p n
(    ~Bazooka\(\);) N
(    ) S
(void) k
( explode\() p
(void) k
(\);) p n
(    ) S
(float) k
( getPosX\(\);) p n
(    ) S
(float) k
( getPosY\(\);) p n
(    ) S
(void) k
( shoot\() p
(void) k
(\);) p n
(    bool isMoving\() S
(void) k
(\);) p n
(    entity_t getEntityType\(\) {) S
(return) K
( BAZOOKA;}) p n
(    ) S
(void) k
( update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\);) p n
(};) N
() N
(#endif) K
(Bazooka.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Bazooka.cpp, Bazooka.h) (4/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <fstream>) p n
(#include) K
( <string>) p n
(#include) K
( <sstream>) p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(Client::Client\(Protocol prt, std::string & pn\) :) N
(protocol\(std::move\(prt\)\){) N
(    ) S
(this) K
(->player_name = pn;) p n
(    ) S
(this) K
(->status = lobby;) p n
(    ) S
(this) K
(->in_match_id = 0;) p n
(    ) S
(this) K
(->defeated = ) p
(false) k
(;) p n
(    ) S
(this) K
(->exited = ) p
(false) k
(;) p n
(}) N
() N
(void) k
( Client::sendGamesStatus\(YAML::Node gameStatusNode\) {) p n
(    protocol.sendGameStatus\(gameStatusNode\);) N
(}) N
() N
(Event Client::rcvEvent\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->protocol.rcvEvent\(\);) p n
(}) N
() N
(std::string Client::getPlayerName\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->player_name;) p n
(}) N
() N
(void) k
( Client::setStatus\(client_status_t new_status\) {) p n
(    ) S
(this) K
(->status = new_status;) p n
(}) N
() N
(client_status_t Client::getStatus\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->status;) p n
(}) N
() N
(void) k
( Client::sendResponse\() p
(int) k
( code, std::string & msg\) {) p n
(    YAML::Node response;) N
(    response[") S
(code) str
("] = code;) p n
(    response[") S
(msg) str
("] = msg;) p n
(    ) S
(this) K
(->protocol.sendMsg\(response\);) p n
(}) N
() N
(void) k
( Client::setJoinedMatchGameCreator\(std::string & jmn\) {) p n
(    ) S
(this) K
(->joined_match_creator_name = jmn;) p n
(}) N
() N
(void) k
( Client::clearJoinedMatchGameCreator\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->joined_match_creator_name.clear\(\);) p n
(}) N
() N
(std::string Client::getJoinedMatchCreatorName\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->joined_match_creator_name;) p n
(}) N
() N
(void) k
( Client::sendWaitingPlayers\(std::vector<std::string> players\) {) p n
(    YAML::Node response;) N
(    response[") S
(waiting_players) str
("];) p n
(    response[") S
(waiting_players) str
("] = players;) p n
(    ) S
(this) K
(->protocol.sendMsg\(response\);) p n
(client.cpp) (Page 1/2) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(}) p n
() N
(void) k
( Client::sendGameStart\() p
(int) k
( code, std::string & msg, std::string & team_id\) {) p n
(    YAML::Node response;) N
(    response[") S
(code) str
("] = code;) p n
(    response[") S
(msg) str
("] = msg;) p n
(    response[") S
(team_id) str
("] = team_id;) p n
(    ) S
(this) K
(->protocol.sendMsg\(response\);) p n
(}) N
() N
(void) k
( Client::sendMapGame\(std::fstream & map_file\) {) p n
(    ) S
(this) K
(->protocol.sendFile\(map_file\);) p n
(}) N
() N
(void) k
( Client::sendSnapShot\(std::stringstream & ss\) {) p n
(    ) S
(this) K
(->protocol.sendGameMapAsString\(ss\);) p n
(}) N
() N
(void) k
( Client::setIdInMatch\(size_t id\) {) p n
(    ) S
(this) K
(->defeated = ) p
(false) k
(;) p n
(    ) S
(this) K
(->exited = ) p
(false) k
(;) p n
(    ) S
(this) K
(->in_match_id = id;) p n
(}) N
() N
(size_t Client::getIdInMatch\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->in_match_id;) p n
(}) N
() N
(void) k
( Client::rcvMapGame\(std::fstream & map_file\) {) p n
(    ) S
(this) K
(->protocol.rcvFile\(map_file\);) p n
(}) N
() N
(void) k
( Client::setExited\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->exited = ) p
(true) k
(;) p n
(}) N
() N
(void) k
( Client::setDefeated\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->defeated = ) p
(true) k
(;) p n
(}) N
() N
(bool) k
( Client::isDefeated\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->defeated;) p n
(}) N
() N
(bool) k
( Client::isExited\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->exited;) p n
(}) S
(client.cpp) (Page 2/2) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(client.cpp) (5/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __CLIENT_H__) p n
(#define) K
( __CLIENT_H__) p n
() N
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( <string>) p n
(#include) K
( <vector>) p n
(#include) K
( <sstream>) p n
(#include) K
( <fstream>) p n
() N
(class Client {) N
(    private:) N
(        Protocol protocol;) N
(        std::string player_name;) N
(        client_status_t status;) N
(        std::string joined_match_creator_name;) N
(        size_t in_match_id;) N
(        bool defeated;) N
(        bool exited;) N
() N
(    public:) N
(        Client\(Protocol, std::string &\);) N
(        ) S
(void) k
( sendGamesStatus\(YAML::Node\);) p n
(        Event rcvEvent\() S
(void) k
(\);) p n
(        std::string getPlayerName\() S
(void) k
(\);) p n
(        ) S
(void) k
( setStatus\(client_status_t\);) p n
(        client_status_t getStatus\() S
(void) k
(\);) p n
(        ) S
(void) k
( sendResponse\() p
(int) k
(, std::string &\);) p n
(        ) S
(void) k
( sendGameStart\() p
(int) k
(, std::string &, std::string &\);) p n
(        ) S
(void) k
( setJoinedMatchGameCreator\(std::string &\);) p n
(        ) S
(void) k
( clearJoinedMatchGameCreator\() p
(void) k
(\);) p n
(        std::string getJoinedMatchCreatorName\() S
(void) k
(\);) p n
(        ) S
(void) k
( sendWaitingPlayers\(std::vector<std::string>\);) p n
(        ) S
(void) k
( sendMapGame\(std::fstream &\);) p n
(        ) S
(void) k
( sendSnapShot\(std::stringstream &\);) p n
(        ) S
(void) k
( setIdInMatch\(size_t\);) p n
(        size_t getIdInMatch\() S
(void) k
(\);) p n
(        ) S
(void) k
( rcvMapGame\(std::fstream &\);) p n
(        ) S
(void) k
( setExited\() p
(void) k
(\);) p n
(        ) S
(void) k
( setDefeated\() p
(void) k
(\);) p n
(        bool isDefeated\() S
(void) k
(\);) p n
(        bool isExited\() S
(void) k
(\);) p n
(};) N
() N
(#endif) K
(client.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( ") p
(Configuration.h) str
(") p n
() N
(Configuration::Configuration\(\) {) N
(    ) S
(//TURN) c n
(    ) p
(this) K
(->TURN_DURATION = 50; ) p
(//) c n
(    ) p
(//CONVERSION) c n
(    ) p
(this) K
(->SCALING_FACTOR = 0.0416; ) p
(//) c n
(    ) p
(this) K
(->DEGTORAD = 0.0174533; ) p
(//) c n
(    ) p
(this) K
(->RADTODEG = 57.2958; ) p
(//) c n
() p n
(    ) S
(//WORLD) c n
(    ) p
(this) K
(->WORLD_TIME_STEP = 1.0f/60.0f; ) p
(//) c n
(    ) p
(this) K
(->WORLD_VELOCITY_ITERATIONS = 6; ) p
(//) c n
(    ) p
(this) K
(->WORLD_POSITION_ITERATIONS = 2; ) p
(//) c n
(    ) p
(this) K
(->WORLD_Y_LIMIT = 58.24f;) p n
() N
(    ) S
(//WORM) c n
(    ) p
(this) K
(->WORM_SPEED = 2;   ) p
(//) c n
(    ) p
(this) K
(->WORM_FRONT_JUMP_X_IMPULSE = 4; ) p
(//) c n
(    ) p
(this) K
(->WORM_FRONT_JUMP_Y_IMPULSE = 4; ) p
(//) c n
(    ) p
(this) K
(->WORM_BACK_JUMP_X_IMPULSE = 4;) p n
(    ) S
(this) K
(->WORM_BACK_JUMP_Y_IMPULSE = 4;) p n
(    ) S
(this) K
(->WORM_MAX_FALL_DISTANCE = 4; ) p
(//) c n
() p n
(    ) S
(//BAZOOKA) c n
(    ) p
(this) K
(->BAZOOKA_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->BAZOOKA_BLAST_POWER = 50; ) p
(//) c n
() p n
(    ) S
(//MORTAR) c n
(    ) p
(this) K
(->MORTAR_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->MORTAR_BLAST_POWER = 50; ) p
(//) c n
(    ) p
(this) K
(->MORTAR_FRAGMENT_QUANTITY = 6; ) p
(//) c n
(    ) p
(this) K
(->MORTAR_FRAGMENT_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->MORTAR_FRAGMENT_BLAST_POWER = 10; ) p
(//) c n
() p n
(    ) S
(//WIND) c n
(    ) p
(this) K
(->MAX_WIND_FORCE = 6; ) p
(//) c n
(    ) p
(this) K
(->MIN_WIND_FORCE = -6; ) p
(//) c n
(    ) p n
(    ) S
(//GRENADE) c n
(    ) p
(this) K
(->GRENADE_RESTITUTION = 0.6; ) p
(//) c n
() p n
(    ) S
(//RED GRENADE) c n
(    ) p
(this) K
(->RED_GRENADE_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->RED_GRENADE_BLAST_POWER = 30; ) p
(//) c n
(    ) p
(this) K
(->RED_GRENADE_FRAGMENT_QUANTITY = 50; ) p
(//) c n
(    ) p
(this) K
(->RED_GRENADE_FRAGMENT_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->RED_GRENADE_FRAGMENT_BLAST_POWER = 10; ) p
(//) c n
() p n
(    ) S
(//BANANA) c n
(    ) p
(this) K
(->BANANA_BLAST_RADIUS = 4; ) p
(//) c n
(    ) p
(this) K
(->BANANA_BLAST_POWER = 70; ) p
(//) c n
() p n
(    ) S
(//HOLY GRENADE) c n
(    ) p
(this) K
(->HOLY_GRENADE_BLAST_RADIUS = 8; ) p
(//) c n
(    ) p
(this) K
(->HOLY_GRENADE_BLAST_POWER = 110; ) p
(//) c n
() p n
(    ) S
(//AIRSTRIKE) c n
(    ) p
(this) K
(->AIR_STRIKE_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->AIR_STRIKE_BLAST_POWER = 40; ) p
(//) c n
(    ) p
(this) K
(->AIR_STRIKE_MISSIL_QUANTITY = 6; ) p
(//) c n
(Configuration.cpp) (Page 1/5) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(client.h, Configuration.cpp) (6/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    ) S
(//BAT) c n
(    ) p
(this) K
(->BAT_DAMAGE = 10; ) p
(//) c n
(    ) p
(this) K
(->BAT_LENGTH = 1; ) p
(//) c n
(    ) p
(this) K
(->BAT_IMPULSE = 10; ) p
(//) c n
() p n
(    ) S
(//DYNAMITE) c n
(    ) p
(this) K
(->DYNAMITE_BLAST_RADIUS = 4; ) p
(//) c n
(    ) p
(this) K
(->DYNAMITE_BLAST_POWER =50; ) p
(//) c n
(    ) p n
(    ) S
(//GREEN GRENADE) c n
(    ) p
(this) K
(->GREEN_GRENADE_BLAST_RADIUS = 2; ) p
(//) c n
(    ) p
(this) K
(->GREEN_GRENADE_BLAST_POWER = 30; ) p
(//) c n
(}) p n
() N
(void) k
( Configuration::loadConfigFile\(YAML::Node & configNode\) {) p n
(    size_t counter = 0;) N
() N
(    ) S
(if) K
( \(configNode[") p
(match) str
("][") p
(turn_duration) str
("]\) {) p n
(        ) S
(this) K
(->TURN_DURATION = configNode[") p
(match) str
("][") p
(turn_duration) str
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(scaling_factor_pixels_meters) str
("]\) {) p n
(        ) S
(this) K
(->SCALING_FACTOR = configNode[") p
(world_physics) str
("][") p
(scaling_factor_pixels_meters) str
("].) p n
(as<) S
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
(   ) N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(scaling_degree_radian) str
("]\) {) p n
(        ) S
(this) K
(->DEGTORAD = configNode[") p
(world_physics) str
("][") p
(scaling_degree_radian) str
("].as<) p
(float) k
(>\(\)) p n
(; ) S
(//) c n
(        counter++;) p n
(    }) N
(    ) N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(scaling_radian_degree) str
("]\) {) p n
(        ) S
(this) K
(->RADTODEG = configNode[") p
(world_physics) str
("][") p
(scaling_radian_degree) str
("].as<) p
(float) k
(>\(\)) p n
(; ) S
(//) c n
(        counter++;) p n
(    }) N
(     ) N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(world_time_step) str
("]\) {) p n
(        ) S
(this) K
(->WORLD_TIME_STEP = configNode[") p
(world_physics) str
("][") p
(world_time_step) str
("].as<) p
(float) k
() p n
(>\(\); ) S
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(world_velocity_iterations) str
("]\) {) p n
(        ) S
(this) K
(->WORLD_VELOCITY_ITERATIONS = configNode[") p
(world_physics) str
("][") p
(world_velocity_it) str n
(erations) S
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(world_position_iterations) str
("]\) {) p n
(        ) S
(this) K
(->WORLD_POSITION_ITERATIONS = configNode[") p
(world_physics) str
("][") p
(world_position_it) str n
(erations) S
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(world_y_limit) str
("]\) {) p n
(        ) S
(this) K
(->WORLD_Y_LIMIT = configNode[") p
(world_physics) str
("][") p
(world_y_limit) str
("].as<) p
(float) k
(>\(\)) p n
(; ) S
(//) c n
(Configuration.cpp) (Page 2/5) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(max_wind_force) str
("]\) {) p n
(        ) S
(this) K
(->MAX_WIND_FORCE = configNode[") p
(world_physics) str
("][") p
(max_wind_force) str
("].as<) p
(int) k
(>\() p n
(\); ) S
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(world_physics) str
("][") p
(min_wind_force) str
("]\) {) p n
(        ) S
(this) K
(->MIN_WIND_FORCE = configNode[") p
(world_physics) str
("][") p
(min_wind_force) str
("].as<) p
(int) k
(>\(\)) p n
(; ) S
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(worms) str
("][") p
(worms_speed) str
("]\) {) p n
(        ) S
(this) K
(->WORM_SPEED = configNode[") p
(worms) str
("][") p
(worms_speed) str
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(worms) str
("][") p
(worm_front_jump_x_impulse) str
("]\) {) p n
(        ) S
(this) K
(->WORM_FRONT_JUMP_X_IMPULSE = configNode[") p
(worms) str
("][") p
(worm_front_jump_x_imp) str n
(ulse) S
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
() N
(    ) S
(if) K
( \(configNode[") p
(worms) str
("][") p
(worm_front_jump_y_impulse) str
("]\) {) p n
(        ) S
(this) K
(->WORM_FRONT_JUMP_Y_IMPULSE = configNode[") p
(worms) str
("][") p
(worm_front_jump_y_imp) str n
(ulse) S
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(worms) str
("][") p
(worm_back_jump_x_impulse) str
("]\) {) p n
(        ) S
(this) K
(->WORM_BACK_JUMP_X_IMPULSE = configNode[") p
(worms) str
("][") p
(worm_back_jump_x_impu) str n
(lse) S
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(worms) str
("][") p
(worm_back_jump_y_impulse) str
("]\) {) p n
(        ) S
(this) K
(->WORM_BACK_JUMP_Y_IMPULSE = configNode[") p
(worms) str
("][") p
(worm_back_jump_y_impu) str n
(lse) S
("].as<) p
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(worms) str
("][") p
(worm_max_fall_distance) str
("]\) {) p n
(        ) S
(this) K
(->WORM_MAX_FALL_DISTANCE = configNode[") p
(worms) str
("][") p
(worm_max_fall_distance) str
("].) p n
(as<) S
(int) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(physics) str
("][") p
(grenade_restitution) str
("]\) {) p n
(        ) S
(this) K
(->GRENADE_RESTITUTION = configNode[") p
(weapons) str
("][") p
(physics) str
("][") p
(grenade_restitution) str
() p n
("].as<) S
(float) k
(>\(\); ) p
(//) c n
(        counter++;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(bazooka) str
("]\) {) p n
(        ) S
(this) K
(->BAZOOKA_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(bazooka) str
("][") p
(radious) str
("].as<) p
() k n
(int) S
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->BAZOOKA_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(bazooka) str
("][") p
(damage) str
("].as<) p
(i) k n
(nt) S
(>\(\); ) p
(//) c n
(Configuration.cpp) (Page 3/5) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(Configuration.cpp) (7/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        counter += 2;) p n
(    }) N
(    ) N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(mortar) str
("]\) {) p n
(        ) S
(this) K
(->MORTAR_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(mortar) str
("][") p
(radious) str
("].as<) p
(in) k n
(t) S
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->MORTAR_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(mortar) str
("][") p
(damage) str
("].as<) p
(int) k
() p n
(>\(\); ) S
(//) c n
(        ) p
(this) K
(->MORTAR_FRAGMENT_QUANTITY = configNode[") p
(weapons) str
("][") p
(mortar) str
("][") p
(fragments_q) str n
(ty) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->MORTAR_FRAGMENT_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(mortar) str
("][") p
(fragme) str n
(nts_radious) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->MORTAR_FRAGMENT_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(mortar) str
("][") p
(fragmen) str n
(ts_damage) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        counter += 5;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(red_grenade) str
("]\) {) p n
(        ) S
(this) K
(->RED_GRENADE_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(red_grenade) str
("][") p
(radious) str
() p n
("].as<) S
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->RED_GRENADE_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(red_grenade) str
("][") p
(damage) str
() p n
("].as<) S
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->RED_GRENADE_FRAGMENT_QUANTITY = configNode[") p
(weapons) str
("][") p
(red_grenade) str
("][) p n
(") S
(fragments_qty) str
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->RED_GRENADE_FRAGMENT_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(red_grenad) str n
(e) S
("][") p
(fragments_radious) str
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->RED_GRENADE_FRAGMENT_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(red_grenade) str
() p n
("][") S
(fragments_damage) str
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        counter += 5;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(banana) str
("]\) {) p n
(        ) S
(this) K
(->BANANA_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(banana) str
("][") p
(radious) str
("].as<) p
(in) k n
(t) S
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->BANANA_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(banana) str
("][") p
(damage) str
("].as<) p
(int) k
() p n
(>\(\); ) S
(//) c n
(        counter += 2;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(holy_grenade) str
("]\) {) p n
(        ) S
(this) K
(->HOLY_GRENADE_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(holy_grenade) str
("][") p
(radi) str n
(ous) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->HOLY_GRENADE_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(holy_grenade) str
("][") p
(dama) str n
(ge) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        counter += 2;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(air_strike) str
("]\) {) p n
(        ) S
(this) K
(->AIR_STRIKE_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(air_strike) str
("][") p
(radious) str
("]) p n
(.as<) S
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->AIR_STRIKE_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(air_strike) str
("][") p
(damage) str
("].) p n
(as<) S
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->AIR_STRIKE_MISSIL_QUANTITY = configNode[") p
(weapons) str
("][") p
(air_strike) str
("][") p
(qty) str
("]) p n
(.as<) S
(int) k
(>\(\); ) p
(//) c n
(        counter += 3;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(bat) str
("]\) {) p n
(        ) S
(this) K
(->BAT_DAMAGE = configNode[") p
(weapons) str
("][") p
(bat) str
("][") p
(damage) str
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->BAT_LENGTH = configNode[") p
(weapons) str
("][") p
(bat) str
("][") p
(length) str
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->BAT_IMPULSE = configNode[") p
(weapons) str
("][") p
(bat) str
("][") p
(impulse) str
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        counter += 3;) p n
(Configuration.cpp) (Page 4/5) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    }) p n
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(dynamite) str
("]\) {) p n
(        ) S
(this) K
(->DYNAMITE_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(dynamite) str
("][") p
(radious) str
("].as) p n
(<) S
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->DYNAMITE_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(dynamite) str
("][") p
(damage) str
("].as) p n
(<) S
(int) k
(>\(\); ) p
(//) c n
(        counter += 2;) p n
(    }) N
() N
(    ) S
(if) K
( \(configNode[") p
(weapons) str
("][") p
(green_grenade) str
("]\) {) p n
(        ) S
(this) K
(->GREEN_GRENADE_BLAST_RADIUS = configNode[") p
(weapons) str
("][") p
(green_grenade) str
("][") p
(ra) str n
(dious) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        ) p
(this) K
(->GREEN_GRENADE_BLAST_POWER = configNode[") p
(weapons) str
("][") p
(green_grenade) str
("][") p
(da) str n
(mage) S
("].as<) p
(int) k
(>\(\); ) p
(//) c n
(        counter += 2;) p n
(    }) N
(}) N
(Configuration.cpp) (Page 5/5) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(Configuration.cpp) (8/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( CONFIGURATION_H) p n
(#define) K
( CONFIGURATION_H) p n
() N
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(class Configuration {) N
(public:) N
(    Configuration\(\);) N
(    ) S
(void) k
( loadConfigFile\(YAML::Node &\);) p n
(    ) S
(//TURN) c n
(    ) p
(float) k
( TURN_DURATION;) p n
(    ) N
(    ) S
(//CONVERSIONS) c n
(    ) p
(float) k
( DEGTORAD;) p n
(    ) S
(float) k
( RADTODEG;) p n
(    ) S
(float) k
( SCALING_FACTOR;) p n
() N
(    ) S
(//WORLD) c n
(    ) p
(float) k
( WORLD_TIME_STEP;) p n
(    ) S
(float) k
( WORLD_VELOCITY_ITERATIONS;) p n
(    ) S
(float) k
( WORLD_POSITION_ITERATIONS;) p n
(    ) S
(float) k
( WORLD_Y_LIMIT;) p n
(    ) N
(    ) S
(//WORM) c n
(    ) p
(float) k
( WORM_SPEED;) p n
(    ) S
(float) k
( WORM_JUMP_IMPULSE;) p n
(    ) S
(int) k
( WORM_MAX_FALL_DISTANCE;) p n
(    ) S
(int) k
( WORM_FRONT_JUMP_X_IMPULSE;) p n
(    ) S
(int) k
( WORM_FRONT_JUMP_Y_IMPULSE;) p n
(    ) S
(int) k
( WORM_BACK_JUMP_X_IMPULSE;) p n
(    ) S
(int) k
( WORM_BACK_JUMP_Y_IMPULSE;) p n
() N
(    ) S
(//BAZOOKA) c n
(    ) p
(int) k
( BAZOOKA_BLAST_RADIUS;) p n
(    ) S
(int) k
( BAZOOKA_BLAST_POWER;) p n
() N
(    ) S
(//MORTAR) c n
(    ) p
(int) k
( MORTAR_BLAST_RADIUS;) p n
(    ) S
(int) k
( MORTAR_BLAST_POWER;) p n
(    ) S
(int) k
( MORTAR_FRAGMENT_QUANTITY;) p n
(    ) S
(int) k
( MORTAR_FRAGMENT_BLAST_RADIUS;) p n
(    ) S
(int) k
( MORTAR_FRAGMENT_BLAST_POWER;) p n
() N
(    ) S
(//GRENADE) c n
(    ) p
(float) k
( GRENADE_RESTITUTION;) p n
(    ) N
(    ) S
(//RED GRENADE) c n
(    ) p
(int) k
( RED_GRENADE_BLAST_RADIUS;) p n
(    ) S
(int) k
( RED_GRENADE_BLAST_POWER;) p n
(    ) S
(int) k
( RED_GRENADE_FRAGMENT_QUANTITY;) p n
(    ) S
(int) k
( RED_GRENADE_FRAGMENT_BLAST_RADIUS;) p n
(    ) S
(int) k
( RED_GRENADE_FRAGMENT_BLAST_POWER;) p n
() N
(    ) S
(//WIND) c n
(    ) p
(int) k
( MAX_WIND_FORCE;) p n
(    ) S
(int) k
( MIN_WIND_FORCE;) p n
() N
(    ) S
(//BANANA) c n
(    ) p
(int) k
( BANANA_BLAST_RADIUS;) p n
(    ) S
(int) k
( BANANA_BLAST_POWER;) p n
() N
(    ) S
(//HOLY GRENADE) c n
(Configuration.h) (Page 1/2) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(int) k
( HOLY_GRENADE_BLAST_RADIUS;) p n
(    ) S
(int) k
( HOLY_GRENADE_BLAST_POWER;) p n
() N
(    ) S
(//AIRSTRIKE) c n
(    ) p
(int) k
( AIR_STRIKE_BLAST_RADIUS;) p n
(    ) S
(int) k
( AIR_STRIKE_BLAST_POWER;) p n
(    ) S
(int) k
( AIR_STRIKE_MISSIL_QUANTITY;) p n
() N
(    ) S
(//BAT) c n
(    ) p
(int) k
( BAT_DAMAGE;) p n
(    ) S
(int) k
( BAT_LENGTH;) p n
(    ) S
(int) k
( BAT_IMPULSE;) p n
() N
(    ) S
(//DYNAMITE) c n
(    ) p
(int) k
( DYNAMITE_BLAST_RADIUS;) p n
(    ) S
(int) k
( DYNAMITE_BLAST_POWER;) p n
(    ) N
(    ) S
(//GREEN GRENADE) c n
(    ) p
(int) k
( GREEN_GRENADE_BLAST_RADIUS;) p n
(    ) S
(int) k
( GREEN_GRENADE_BLAST_POWER;) p n
(};) N
() N
(extern) K
( Configuration gConfiguration;) p n
() N
(#endif) K
(Configuration.h) (Page 2/2) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(Configuration.h) (9/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(ContactListener.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(ContactListener::ContactListener\(\){}) N
(ContactListener::~ContactListener\(\) {}) N
() N
(void) k
( ContactListener::BeginContact\(b2Contact* contact\) {) p n
() N
(    b2WorldManifold worldManifold;) N
(    contact->GetWorldManifold\(&worldManifold\);) N
() N
(    ) S
(void) k
(* bodyAUserData = contact->GetFixtureA\(\)->GetBody\(\)->GetUserData\(\);) p n
(    ) S
(void) k
(* bodyBUserData = contact->GetFixtureB\(\)->GetBody\(\)->GetUserData\(\);) p n
(   ) N
(    ) S
(if) K
( \(bodyAUserData && bodyBUserData\) {) p n
(        entity_t entityA_type = ) S
(static_cast) k
(<Entity*>\(bodyAUserData\)->getEntityTy) p n
(pe\(\); ) N
(        entity_t entityB_type = ) S
(static_cast) k
(<Entity*>\(bodyBUserData\)->getEntityTy) p n
(pe\(\);    ) N
() N
(        ) S
(//WORM FOOT CONTACT) c n
(        ) p
(if) K
( \(entityA_type == WORM && entityB_type == STRUCTURE\) {) p n
(            ) S
(float) k
( angle = ) p
(static_cast) k
(<Girder*>\(bodyBUserData\)->getAngle\(\);) p n
(            ) S
(static_cast) k
(<Worm*>\(bodyAUserData\)->setNormal\(worldManifold.normal\);) p n
(            ) S
(if) K
( \(angle <= 0.8 && angle >= -0.8\) {) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyAUserData\)->setAngle\(angle\);) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyAUserData\)->addFootContact\(\);) p n
(            }) N
(        }) N
() N
(        ) S
(if) K
( \(entityB_type == WORM && entityA_type == STRUCTURE\) {) p n
(            ) S
(float) k
( angle = ) p
(static_cast) k
(<Girder*>\(bodyAUserData\)->getAngle\(\);) p n
(            ) S
(static_cast) k
(<Worm*>\(bodyBUserData\)->setNormal\(worldManifold.normal\);) p n
(            ) S
(if) K
( \(angle <= 0.8 && angle >= -0.8\) {) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyBUserData\)->setAngle\(angle\);) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyBUserData\)->addFootContact\(\);) p n
(            }) N
(        }) N
() N
(        ) S
(//WORM WATER CONTACT) c n
(        ) p
(if) K
( \(entityA_type == WORM && entityB_type == WATER\) {) p n
(           ) S
(static_cast) k
(<Worm*>\(bodyAUserData\)->kill\(\);) p n
(        }) N
() N
(        ) S
(if) K
( \(entityB_type == WORM && entityA_type == WATER\) {) p n
(           ) S
(static_cast) k
(<Worm*>\(bodyBUserData\)->kill\(\);) p n
(        }) N
() N
(        ) S
(//GRENADE WALL/WATER CONTACT) c n
(        ) p
(if) K
( \(entityA_type == GRENADE && \(entityB_type == WALL || entityB_type == ) p n
(WATER\)\) {) N
(            ) S
(static_cast) k
(<Grenade*>\(bodyAUserData\)->explode\(\);) p n
(        }) N
() N
(        ) S
(if) K
( \(entityB_type == GRENADE && \(entityA_type == WALL || entityA_type == ) p n
(WATER\)\) {) N
(            ) S
(static_cast) k
(<Grenade*>\(bodyBUserData\)->explode\(\);) p n
(        }) N
() N
(        ) S
(//BAZOOKA WORM/STRUCTURE CONTACT) c n
(        ) p
(if) K
( \(entityA_type == BAZOOKA && \(entityB_type == WORM || entityB_type == ) p n
(STRUCTURE || entityB_type == WATER || entityB_type == WALL\)\) {) N
(ContactListener.cpp) (Page 1/2) (jun 26, 18 11:13) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            ) p
(static_cast) k
(<Bazooka*>\(bodyAUserData\)->explode\(\);) p n
(        }) N
() N
(        ) S
(if) K
( \(entityB_type == BAZOOKA && \(entityA_type == WORM || entityA_type == ) p n
(STRUCTURE || entityA_type == WATER || entityA_type == WALL\)\) {) N
(            ) S
(static_cast) k
(<Bazooka*>\(bodyBUserData\)->explode\(\);) p n
(        }) N
() N
(        ) S
(//MISSIL STRUCTURE/WATER CONTACT) c n
(        ) p
(if) K
( \(entityA_type == MISSIL && \(entityB_type == WORM || entityB_type == S) p n
(TRUCTURE || entityB_type == WATER || entityB_type == WALL\)\) {) N
(            ) S
(static_cast) k
(<Missil*>\(bodyAUserData\)->explode\(\);) p n
(        }) N
(        ) N
(        ) S
(if) K
( \(entityB_type == MISSIL && \(entityA_type == WORM || entityA_type == S) p n
(TRUCTURE || entityA_type == WATER || entityA_type == WALL\)\) {) N
(            ) S
(static_cast) k
(<Missil*>\(bodyBUserData\)->explode\(\);) p n
(        }) N
() N
(        ) S
(// FRAGMENT STRUCTURE/WATER CONTACT) c n
(        ) p
(if) K
( \(entityA_type == FRAGMENT && \(entityB_type == WORM || entityB_type ==) p n
( STRUCTURE || entityB_type == WATER\)\) {) N
(            ) S
(static_cast) k
(<Fragment*>\(bodyAUserData\)->explode\(\);) p n
(        }) N
(        ) N
(        ) S
(if) K
( \(entityB_type == FRAGMENT && \(entityA_type == WORM || entityA_type ==) p n
( STRUCTURE || entityA_type == WATER\)\) {) N
(            ) S
(static_cast) k
(<Fragment*>\(bodyBUserData\)->explode\(\);) p n
(        }) N
(    }) N
(}) N
() N
(void) k
( ContactListener::EndContact\(b2Contact* contact\) {) p n
(    ) S
(void) k
(* bodyAUserData = contact->GetFixtureA\(\)->GetBody\(\)->GetUserData\(\);) p n
(    ) S
(void) k
(* bodyBUserData = contact->GetFixtureB\(\)->GetBody\(\)->GetUserData\(\);) p n
() N
(    ) S
(if) K
( \(bodyAUserData && bodyBUserData\) {) p n
(        entity_t entityA_type = ) S
(static_cast) k
(<Entity*>\(bodyAUserData\)->getEntityTy) p n
(pe\(\); ) N
(        entity_t entityB_type = ) S
(static_cast) k
(<Entity*>\(bodyBUserData\)->getEntityTy) p n
(pe\(\);       ) N
() N
(        ) S
(//WORM FOOT CONTACT) c n
(        ) p
(if) K
( \(entityA_type == WORM && entityB_type == STRUCTURE\) {) p n
(            ) S
(float) k
( angle = ) p
(static_cast) k
(<Girder*>\(bodyBUserData\)->getAngle\(\);) p n
(            ) S
(if) K
( \(angle <= 0.8 && angle >= -0.8\) {) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyAUserData\)->deleteFootContact\(\);) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyAUserData\)->setNormal\(b2Vec2\(0,0\)\);      ) p n
(              ) N
(            }) N
(        }) N
() N
(        ) S
(if) K
( \(entityB_type == WORM && entityA_type == STRUCTURE\) {) p n
(            ) S
(float) k
( angle = ) p
(static_cast) k
(<Girder*>\(bodyAUserData\)->getAngle\(\);) p n
(            ) S
(if) K
( \(angle <= 0.8 && angle >= -0.8\) {) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyBUserData\)->deleteFootContact\(\);) p n
(                ) S
(static_cast) k
(<Worm*>\(bodyBUserData\)->setNormal\(b2Vec2\(0,0\)\);      ) p n
(              ) N
(            }) N
(        }) N
(    }) N
(}) S
(ContactListener.cpp) (Page 2/2) (jun 26, 18 11:13) title
border
grestore
(Printed by Gabriel Robles) rhead
(ContactListener.cpp) (10/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( CONTACT_LISTENER_H) p n
(#define) K
( CONTACT_LISTENER_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( ") p
(Girder.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(Bat.h) str
(") p n
(#include) K
( ") p
(Bazooka.h) str
(") p n
(#include) K
( ") p
(Missil.h) str
(") p n
(#include) K
( ") p
(Fragment.h) str
(") p n
(#include) K
( ") p
(Grenade.h) str
(") p n
() N
(class ContactListener : public b2ContactListener {) N
(public: ) N
(    ContactListener\(\);) N
(    virtual ~ContactListener\(\);) N
(    ) S
(void) k
( BeginContact\(b2Contact* contact\);) p n
(    ) S
(void) k
( EndContact\(b2Contact* contact\);) p n
(};) N
() N
(#endif) K
(ContactListener.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Dynamite.h) str
(") p n
(#include) K
( <iostream>) p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(Dynamite::Dynamite\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(int) k
( delay, ) p
(in) k n
(t) S
( currentTime\) :) p n
(Weapon\(w_dynamite\),) N
(detonationTime\(currentTime + delay\),) N
(world\(world\) {) N
(    b2BodyDef dynamiteDef;) N
(    dynamiteDef.type = b2_dynamicBody;) N
(    dynamiteDef.fixedRotation = ) S
(true) k
(;) p n
(    dynamiteDef.position.Set\(posX, posY\);) N
(    dynamiteDef.allowSleep = ) S
(false) k
(;) p n
(    b2Body* body = world.CreateBody\(&dynamiteDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    b2PolygonShape dynamiteShape;) N
(    dynamiteShape.SetAsBox\(0.1f, 0.2f\);) N
() N
(    b2FixtureDef dynamiteFixture;) N
(    dynamiteFixture.shape = &dynamiteShape;) N
(    dynamiteFixture.density = 1;) N
(    dynamiteFixture.friction = 1;) N
(    body->CreateFixture\(&dynamiteFixture\);) N
(    ) N
(    ) S
(this) K
(->body = body;) p n
(    ) S
(this) K
(->exploded = ) p
(false) k
(;) p n
(    ) S
(this) K
(->id = id;) p n
(    ) S
(this) K
(->blast_radius = gConfiguration.DYNAMITE_BLAST_RADIUS;) p n
(    ) S
(this) K
(->blast_power = gConfiguration.DYNAMITE_BLAST_POWER;) p n
(}) N
() N
(Dynamite::~Dynamite\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Dynamite::update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\) {) p n
(    ) S
(if) K
( \(currentTime >= ) p
(this) K
(->detonationTime && !exploded\) {) p n
(        explode\(\);) N
(    }) N
(    ) S
(if) K
( \(wind_affected\) {) p n
(       ) S
(this) K
(->body->ApplyForce\(body->GetMass\(\) * b2Vec2\(wind_force,0\), body->GetW) p n
(orldCenter\(\), ) S
(true) k
(\);) p n
(    }) N
(    ) S
(this) K
(->countdown = ) p
(this) K
(->detonationTime - currentTime;) p n
(}) N
() N
(void) k
( Dynamite::explode\(\) {) p n
(    ExplosionManager explosionManager\() S
(this) K
(->world\);) p n
(    b2Vec2 center = ) S
(this) K
(->body->GetPosition\(\);) p n
(    explosionManager.manageExplosion\(center, blast_radius, blast_power\); ) N
(    ) S
(this) K
(->exploded = ) p
(true) k
(;) p n
(}) N
() N
(float) k
( Dynamite::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Dynamite::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
(Dynamite.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(ContactListener.h, Dynamite.cpp) (11/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(bool) k
( Dynamite::isMoving\(\) {) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) S
(Dynamite.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( DYNAMITE_H) p n
(#define) K
( DYNAMITE_H) p n
() N
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D/Box2D.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
() N
(#define) K
( DYNAMITE_WIDTH 0.1f) p n
(#define) K
( DYNAMITE_HEIGHT 0.2f) p n
() N
(class Dynamite : public Weapon{) N
(private: ) N
(    ) S
(int) k
( detonationTime;) p n
(    b2World& world;) N
(    b2Body* body;) N
(    ) S
(int) k
( blast_power;) p n
(public:) N
(    Dynamite\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(int) k
( delay, ) p
(int) k
( curr) p n
(entTime\);) N
(    ~Dynamite\(\);) N
(    ) S
(void) k
( explode\() p
(void) k
(\);) p n
(    ) S
(void) k
( update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\);) p n
(    bool hasExploded\() S
(void) k
(\);) p n
(    ) S
(float) k
( getPosX\() p
(void) k
(\);) p n
(    ) S
(float) k
( getPosY\() p
(void) k
(\);) p n
(    bool isMoving\() S
(void) k
(\);) p n
(    entity_t getEntityType\(\) {) S
(return) K
( DYNAMITE;}) p n
(};) N
() N
(#endif) K
(Dynamite.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Dynamite.cpp, Dynamite.h) (12/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( ENTITY_H) p n
(#define) K
( ENTITY_H) p n
() N
(typedef) K
( ) p
(enum) k
( {) p n
(    WORM,) N
(    STRUCTURE,) N
(    DYNAMITE,) N
(    BAT,) N
(    WATER,) N
(    BAZOOKA,) N
(    MISSIL,) N
(    GRENADE,) N
(    FRAGMENT,) N
(    WALL,) N
(} entity_t;) N
() N
(class Entity {) N
(public:) N
(    virtual entity_t getEntityType\(\) = 0;) N
(    virtual ) S
(float) k
( getPosX\(\) = 0;) p n
(    virtual ) S
(float) k
( getPosY\(\) = 0;) p n
(    ) S
(//virtual void update\(int currentTime\) = 0;) c n
(};) p n
() N
(#endif) K
(Entity.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(event_receiver.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
() N
(EventReceiver::EventReceiver\(Client * cli, World & w, Match & match, size_t id\) ) N
(:) N
(client\(cli\),) N
(world\(w\),) N
(match\(match\),) N
(team_id\(id\) {) N
(    ) S
(this) K
(->keep_running = ) p
(true) k
(;) p n
(    ) S
(this) K
(->quit_event = ) p
(false) k
(;) p n
(}) N
() N
(bool) k
( EventReceiver::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(this) K
(->keep_running;) p n
(}) N
() N
(size_t EventReceiver::getId\() S
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(this) K
(->team_id;) p n
(}) N
() N
(void) k
( EventReceiver::run\() p
(void) k
(\) {) p n
(    ) S
(while) K
( \(keep_running\) {) p n
(        Event new_event = ) S
(this) K
(->client->rcvEvent\(\);) p n
(        ) S
(if) K
( \(new_event.quit\(\)\) {) p n
(            std::cout << ") S
(Recibido evento de quit.) str
(" << std::endl;) p n
(            ) S
(this) K
(->quit_event = ) p
(true) k
(;) p n
(            stop\(\);) N
(            ) S
(return) K
(;) p n
(        }) N
(        ) S
(int) k
( team_turn = match.getTeamTurn\(\);) p n
(        ) S
(if) K
( \(\() p
(int) k
(\) new_event.getTeamId\(\) != team_turn\) {) p n
(            ) S
(continue) K
(;) p n
(        }) N
(        ) S
(if) K
( \(match.getTurnTimeleft\(\) > 0\) {) p n
(            ) S
(// if \(match.extraTime\(\) && new_event.getNode\(\)["event"]["action"].a) c n
(s<int>\(\) == a_shoot\) {) N
(            ) p
(//     continue;) c n
(            ) p
(// }) c n
(            ) p
(this) K
(->world.executeAction\(new_event, match.getWormTurn\(team_turn\)\); ) p n
(           ) N
(        }) N
(    }) N
(}) N
() N
(bool) k
( EventReceiver::quitEvent\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->quit_event;) p n
(}) N
() N
(void) k
( EventReceiver::stop\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(}) N
(event_receiver.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Entity.h, event_receiver.cpp) (13/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __EVENT_RECEIVER_H__) p n
(#define) K
( __EVENT_RECEIVER_H__) p n
() N
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(World.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
() N
(class EventReceiver : public Thread {) N
(    private:) N
(        Client * client;) N
(        World & world;) N
(        Match & match;) N
(        size_t team_id;) N
(        bool keep_running;) N
(        bool quit_event; ) N
(        ) N
(    public:) N
(        EventReceiver\(Client *, World &, Match &, size_t\);) N
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ) S
(void) k
( stop\() p
(void) k
(\);) p n
(        bool quitEvent\() S
(void) k
(\);) p n
(        virtual bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        virtual size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(};) N
() N
(#endif) K
(event_receiver.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
() N
(/*) c n
(Fuente: https://www.iforce2d.net/b2dtut/explosions) N
(*/) N
() p n
(ExplosionManager::ExplosionManager\(b2World& world\) :) N
(world\(world\) {) N
(}) N
() N
(void) k
( ExplosionManager::manageExplosion\(b2Vec2 center, ) p
(float) k
( radius, ) p
(float) k
( power\)) p n
( {) N
(    QueryCallback queryCallback;) N
(    b2AABB aabb;) N
(    aabb.lowerBound = center - b2Vec2\(radius, radius\);) N
(    aabb.upperBound = center + b2Vec2\(radius, radius\);) N
(    ) S
(this) K
(->world.QueryAABB\(&queryCallback, aabb\);) p n
() N
(    ) S
(for) K
( \() p
(unsigned) k
( ) p
(int) k
( i = 0; i < queryCallback.foundBodies.size\(\); i++\) {) p n
(        b2Body* body = queryCallback.foundBodies[i];) N
(        b2Vec2 bodyCom = body->GetWorldCenter\(\);) N
(        ) S
(if) K
( \(\(bodyCom - center\).Length\(\) > radius\)) p n
(            ) S
(continue) K
(;) p n
(        ) S
(this) K
(->applyBlastImpulse\(body, center, bodyCom, power, radius\);) p n
(    }) N
(}) N
() N
(int) k
( ExplosionManager::calculateDamage\() p
(float) k
( blastPower, ) p
(float) k
( radius, ) p
(float) k
( dist) p n
(ance\) {) N
(    ) S
(return) K
( blastPower * \(\(-distance/radius\) + 1\);) p n
(}) N
() N
(void) k
( ExplosionManager::applyBlastImpulse\(b2Body* body, b2Vec2 blastCenter, b2Vec) p n
(2 applyPoint, ) S
(float) k
( blastPower, ) p
(float) k
( radius\) {) p n
() S 8 T (b2Vec2 blastDir = applyPoint - blastCenter;) N
() S 8 T () S
(float) k
( distance = blastDir.Normalize\(\);) p n
(    ) S
(int) k
( damage = ) p
(this) K
(->calculateDamage\(blastPower, radius, distance\);) p n
(    ) S
(if) K
( \(blastDir.y > 0\) blastDir.y = -blastDir.y;) p n
() S 8 T () S
(if) K
( \(distance <= 1\) distance = 1;) p n
() S 8 T () S
(float) k
( invDistance = 1/distance;) p n
() S 8 T () S
(float) k
( impulseMag = \(blastPower/REDUCE_FACTOR\) * invDistance;) p n
(    entity_t entity_type = ) S
(static_cast) k
(<Entity*>\(body->GetUserData\(\)\)->getEntityT) p n
(ype\(\);) N
(    ) S
(if) K
( \(entity_type == WORM\) {) p n
(        body->ApplyLinearImpulse\(impulseMag * blastDir, applyPoint, ) S
(true) k
(\);) p n
(        ) S
(static_cast) k
(<Worm*>\(body->GetUserData\(\)\)->hurt\(damage\);) p n
(        ) S
(static_cast) k
(<Worm*>\(body->GetUserData\(\)\)->setAffectedByExplosion\(\);) p n
(    }) N
(}) N
() N
() N
(ExplosionManager.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(event_receiver.h, ExplosionManager.cpp) (14/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( EXPLOSION_MANAGER_H) p n
(#define) K
( EXPLOSION_MANAGER_H) p n
() N
(#define) K
( GRADTORAD 0.0174533) p n
(#define) K
( REDUCE_FACTOR 5) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(QueryCallback.h) str
(") p n
() N
(class ExplosionManager {) N
(private:) N
(    b2World& world;) N
(    ) S
(void) k
( applyBlastImpulse\(b2Body* body, b2Vec2 blastCenter, b2Vec2 applyPoint, ) p
() k n
(float) S
( blastPower, ) p
(float) k
( radius\);) p n
(    ) S
(int) k
( calculateDamage\() p
(float) k
( blastPower, ) p
(float) k
( radius, ) p
(float) k
( distance\);    ) p n
(public:) N
(    ExplosionManager\(b2World& world\);) N
(    ) S
(void) k
( manageExplosion\(b2Vec2 center, ) p
(float) k
( radius, ) p
(float) k
( power\);) p n
(    ) N
(};) N
() N
(#endif) K
(ExplosionManager.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Fragment.h) str
(") p n
() N
(Fragment::Fragment\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, weapon_t type) p n
(\) : ) N
(Weapon\(type\),) N
(world\(world\) {) N
(    b2BodyDef fragmentDef;) N
(    fragmentDef.type = b2_dynamicBody;) N
(    fragmentDef.position.Set\(posX, posY\);) N
(    b2Body* body = world.CreateBody\(&fragmentDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    b2CircleShape fragmentShape;) N
(    fragmentShape.m_radius = FRAGMENT_RADIUS;) N
() N
(    b2FixtureDef fragmentFixture;) N
(    fragmentFixture.shape = &fragmentShape;) N
(    fragmentFixture.density = 1;) N
(    fragmentFixture.friction = 0.3;) N
() N
(    body->CreateFixture\(&fragmentFixture\);) N
() N
(    ) S
(this) K
(->body = body;) p n
(    ) S
(this) K
(->blast_radius = gConfiguration.AIR_STRIKE_BLAST_RADIUS;) p n
(    ) S
(this) K
(->blast_power = gConfiguration.AIR_STRIKE_BLAST_POWER;) p n
(    ) S
(this) K
(->exploded = ) p
(false) k
(;) p n
(    ) S
(this) K
(->id = id;) p n
(    ) S
(this) K
(->wind_affected = ) p
(true) k
(;) p n
(    shoot\(\);) N
(}) N
() N
(Fragment::~Fragment\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Fragment::explode\(\) {) p n
(    ExplosionManager explosionManager\() S
(this) K
(->world\);) p n
(    b2Vec2 center = ) S
(this) K
(->body->GetPosition\(\);) p n
(    explosionManager.manageExplosion\(center, blast_radius, blast_power\);) N
(    ) S
(this) K
(->exploded = ) p
(true) k
(;) p n
(}) N
() N
(float) k
( Fragment::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Fragment::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
() N
(void) k
( Fragment::update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->body->GetPosition\(\).y > gConfiguration.WORLD_Y_LIMIT ) p
(/*|| contact*) c n
(/) S
(\) {) p n
(        ) S
(this) K
(->explode\(\);) p n
(    }) N
(    ) N
(    ) S
(if) K
( \(wind_affected\) {) p n
(        ) S
(this) K
(->body->ApplyForce\(body->GetMass\(\) * b2Vec2\(wind_force, 0\), body->Ge) p n
(tWorldCenter\(\), ) S
(true) k
(\);) p n
(    }) N
() N
(    b2Vec2 mov_speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(Fragment.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(ExplosionManager.h, Fragment.cpp) (15/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    ) S
(if) K
( \(round\(mov_speed.x\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.y > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 180;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.y < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 0;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(if) K
( \(round\(mov_speed.y\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.x > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 90;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.x < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 270;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(int) k
( ang = atan\(mov_speed.x/mov_speed.y\) * gConfiguration.RADTODEG;) p n
() N
(    ) S
(// Primer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = -ang;) p n
(    }) N
() N
(    ) S
(// Segundo cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 360 - ang;) p n
(    }) N
() N
(    ) S
(// Tercer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
() N
(    ) S
(// Cuarto cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
(}) N
() N
(bool) k
( Fragment::isMoving\(\) {) p n
(    b2Vec2 speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(if) K
( \(!speed.x && !speed.y\) ) p
(return) K
( ) p
(false) k
(;) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) N
() N
(void) k
( Fragment::shoot\(\) {) p n
(    ) S
(float) k
( impulse = ) p
(this) K
(->body->GetMass\(\) * 7;) p n
(    ) S
(int) k
( angle = rand\(\)%\(181\);) p n
(    ) S
(float) k
( x_impulse = cosf\(angle * gConfiguration.DEGTORAD\) * impulse;) p n
(    ) S
(float) k
( y_impulse = sinf\(angle * gConfiguration.DEGTORAD\) * impulse;) p n
(    ) S
(this) K
(->body->ApplyLinearImpulse\(b2Vec2\(x_impulse, -y_impulse\), ) p
(this) K
(->body->Ge) p n
(tWorldCenter\(\), ) S
(true) k
(\);) p n
(}) S
(Fragment.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( FRAGMENT_H) p n
(#define) K
( FRAGMENT_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( <stdlib.h>) p n
() N
(#define) K
( FRAGMENT_RADIUS 0.25) p n
() N
(class Fragment : public Weapon {) N
(private:) N
(    ) S
(int) k
( blast_power;) p n
(    b2World& world;) N
(    b2Body* body;) N
(    ) S
(void) k
( shoot\(\);) p n
(public: ) N
(    Fragment\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, weapon_t type\);) p n
(    ~Fragment\(\);) N
(    ) S
(void) k
( explode\(\);) p n
(    ) S
(float) k
( getPosX\(\);) p n
(    ) S
(float) k
( getPosY\(\);) p n
(    bool isMoving\(\);) N
(    entity_t getEntityType\(\) {) S
(return) K
( FRAGMENT;}) p n
(    ) S
(void) k
( update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\);) p n
(};) N
() N
(#endif) K
(Fragment.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Fragment.cpp, Fragment.h) (16/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Girder.h) str
(") p n
() N
(Girder::Girder\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( angle, ) p
(float) k
( height) p n
(, ) S
(float) k
( width\) : ) p n
(world\(world\) {) N
(    b2BodyDef girderDef;) N
(    girderDef.type = b2_staticBody;) N
(    girderDef.position.Set\(posX, posY\);) N
(    girderDef.allowSleep = ) S
(true) k
(;) p n
(    girderDef.angle = angle;) N
(    b2Body* body = world.CreateBody\(&girderDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
(    body->SetAwake\() S
(false) k
(\);) p n
() N
(    b2PolygonShape girderShape;) N
(    girderShape.SetAsBox\(width/2, height/2\);) N
() N
(    b2FixtureDef girderFixture;) N
(    girderFixture.shape = &girderShape;) N
(    girderFixture.filter.categoryBits = STRUCTURE_PHYSIC;) N
(    girderFixture.filter.maskBits = WORM_PHYSIC;) N
(    ) S
(if) K
( \(angle <= 0.8 && angle >= -0.8\) {) p n
(        girderFixture.friction = GIRDER_FRICTION;) N
(    } ) S
(else) K
( {) p n
(        girderFixture.friction = SLIPPERY_GIRDER;) N
(    }) N
(    girderFixture.density = GIRDER_DENSITY;) N
() N
(    body->CreateFixture\(&girderFixture\);) N
() N
(    ) S
(this) K
(->body = body;) p n
(}) N
() N
(float) k
( Girder::getPosX\(\) {) p n
() S 8 T () S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Girder::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
() N
(float) k
( Girder::getAngle\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetAngle\(\);) p n
(}) N
() N
(Girder::~Girder\() S
(void) k
(\) {) p n
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Girder::update\(\) {) p n
(    ) S
(this) K
(->body->SetAwake\() p
(false) k
(\);) p n
(}) S
(Girder.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( GIRDER_H) p n
(#define) K
( GIRDER_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(PhysicEntity.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
() N
(#define) K
( GIRDER_DENSITY 1) p n
(#define) K
( GIRDER_FRICTION 5) p n
(#define) K
( SLIPPERY_GIRDER 0) p n
() N
(class Girder : public Entity {) N
(private:) N
(    b2World& world;) N
(    b2Body* body;) N
(public:) N
(    Girder\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( angle, ) p
(float) k
( height, ) p
(fl) k n
(oat) S
( width\);) p n
(    virtual ~Girder\() S
(void) k
(\);) p n
(    ) S
(float) k
( getPosX\(\);) p n
(    ) S
(float) k
( getPosY\(\);) p n
(    ) S
(float) k
( getAngle\(\);) p n
(    entity_t getEntityType\(\) {) S
(return) K
( STRUCTURE;}) p n
(    ) S
(void) k
( update\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(Girder.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Girder.cpp, Girder.h) (17/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Grenade.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(Grenade::Grenade\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(bool) k
( mirrored, ) p
() k n
(float) S
( shooting_angle, ) p
(int) k
( power_factor, ) p
(int) k
( delay, ) p
(int) k
( currentTime, weapon_t typ) p n
(e\) :) N
(Weapon\(type\),) N
(detonationTime\(currentTime + delay\),) N
(world\(world\) {) N
(    b2BodyDef grenadeDef;) N
(    grenadeDef.type = b2_dynamicBody;) N
(    grenadeDef.position.Set\(posX, posY\);) N
(    b2Body* body = world.CreateBody\(&grenadeDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    b2CircleShape grenadeShape;) N
(    grenadeShape.m_radius = GRENADE_RADIUS;) N
() N
(    b2FixtureDef grenadeFixture;) N
(    grenadeFixture.shape = &grenadeShape;) N
(    grenadeFixture.density = GRENADE_DENSITY;) N
(    grenadeFixture.friction = 50000000;) N
(    grenadeFixture.restitution = gConfiguration.GRENADE_RESTITUTION;) N
(    body->CreateFixture\(&grenadeFixture\);) N
() N
(    ) S
(this) K
(->body = body;) p n
() N
(    ) S
(this) K
(->exploded = ) p
(false) k
(;) p n
(    ) S
(this) K
(->power_factor = power_factor;) p n
(    ) S
(this) K
(->mirrored = mirrored;) p n
(    ) S
(this) K
(->shooting_angle = shooting_angle;) p n
(    ) S
(this) K
(->id = id;) p n
() N
(    ) S
(if) K
( \(type == w_banana\) {) p n
(        ) S
(this) K
(->blast_power = gConfiguration.BANANA_BLAST_POWER;) p n
(        ) S
(this) K
(->blast_radius = gConfiguration.BANANA_BLAST_RADIUS;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(type == w_holy_grenade\) {) p n
(        ) S
(this) K
(->blast_power = gConfiguration.HOLY_GRENADE_BLAST_POWER;) p n
(        ) S
(this) K
(->blast_radius = gConfiguration.HOLY_GRENADE_BLAST_RADIUS;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(type == w_green_grenade\) {) p n
(        ) S
(this) K
(->blast_power = gConfiguration.GREEN_GRENADE_BLAST_POWER;) p n
(        ) S
(this) K
(->blast_radius = gConfiguration.GREEN_GRENADE_BLAST_RADIUS;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(type == w_cluster\) {) p n
(        ) S
(this) K
(->blast_power = gConfiguration.RED_GRENADE_BLAST_POWER;) p n
(        ) S
(this) K
(->blast_radius = gConfiguration.RED_GRENADE_BLAST_RADIUS;) p n
(    }) N
(    shoot\(\);) N
(}) N
() N
(Grenade::~Grenade\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Grenade::update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\) {) p n
(    ) S
(if) K
( \(currentTime >= ) p
(this) K
(->detonationTime && !exploded\) {) p n
(        explode\(\);) N
(    }) N
(    ) S
(this) K
(->countdown = ) p
(this) K
(->detonationTime - currentTime;) p n
() N
(    ) S
(if) K
( \(wind_affected\) {) p n
(        ) S
(this) K
(->body->ApplyForce\(body->GetMass\(\) * b2Vec2\(wind_force,0\), body->Get) p n
(Grenade.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(WorldCenter\(\), ) p
(true) k
(\);) p n
(    }) N
(}) N
() N
(void) k
( Grenade::explode\(\) {) p n
(    ExplosionManager explosioManager\() S
(this) K
(->world\);) p n
(    b2Vec2 center = ) S
(this) K
(->body->GetPosition\(\); ) p n
(    explosioManager.manageExplosion\(center, blast_radius, blast_power\);) N
(    ) S
(this) K
(->exploded = ) p
(true) k
(;) p n
(}) N
() N
(float) k
( Grenade::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Grenade::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
() N
(void) k
( Grenade::shoot\(\) {) p n
(    ) S
(float) k
( impulse = ) p
(this) K
(->body->GetMass\(\) * power_factor;) p n
(    ) S
(float) k
( x_impulse = cosf\(shooting_angle * gConfiguration.DEGTORAD\) * impulse;) p n
(    ) S
(float) k
( y_impulse = sinf\(shooting_angle * gConfiguration.DEGTORAD\) * impulse;) p n
(    ) S
(if) K
( \(!mirrored\) x_impulse = x_impulse * -1;) p n
(    ) S
(this) K
(->body->ApplyLinearImpulse\(b2Vec2\(x_impulse, -y_impulse\), ) p
(this) K
(->body->Ge) p n
(tWorldCenter\(\), ) S
(true) k
(\);) p n
(}) N
() N
(bool) k
( Grenade::isMoving\(\) {) p n
(    b2Vec2 speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(if) K
( \(!speed.x && !speed.y\) ) p
(return) K
( ) p
(false) k
(;) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) S
(Grenade.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Grenade.cpp) (18/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( GRENADE_H) p n
(#define) K
( GRENADE_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
() N
(#define) K
( GRENADE_RADIUS 0.25f) p n
(#define) K
( GRENADE_DENSITY 1) p n
() N
(class Grenade : public Weapon {) N
(protected:    ) N
(    ) S
(int) k
( detonationTime;) p n
(    b2World & world;) N
(    b2Body* body;) N
(    ) S
(int) k
( blast_power;) p n
(    bool mirrored;) N
(    ) S
(int) k
( shooting_angle;) p n
(    ) S
(int) k
( power_factor;) p n
(public:) N
(    Grenade\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, bool mirrored, ) p
(float) k
() p n
( shooting_angle, ) S
(int) k
( power_factor, ) p
(int) k
( delay, ) p
(int) k
( currentTime, weapon_t type\);) p n
(    ~Grenade\(\);) N
(    ) S
(void) k
( shoot\() p
(void) k
(\);) p n
(    ) S
(void) k
( update\() p
(int) k
( current_time, ) p
(int) k
( wind_force\);) p n
(    ) S
(float) k
( getPosX\(\);) p n
(    ) S
(float) k
( getPosY\(\);) p n
(    bool isMoving\(\);) N
(    entity_t getEntityType\(\) {) S
(return) K
( GRENADE;}) p n
(    ) S
(void) k
( explode\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(Grenade.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <fstream>) p n
(#include) K
( ") p
(lobby_attendant.h) str
(") p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(LobbyAttendant::LobbyAttendant\(Client * c, ProtectedWaitingGames & wg\) :) N
(client\(c\),) N
(waiting_games \(wg\) {) N
(    ) S
(this) K
(->keep_running = ) p
(true) k
(;) p n
(    ) S
(this) K
(->player_name = client->getPlayerName\(\);) p n
(}) N
() N
(bool) k
( LobbyAttendant::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(this) K
(->keep_running;) p n
(}) N
() N
(size_t LobbyAttendant::getId\() S
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( 0;) p n
(}) N
() N
(void) k
( LobbyAttendant::stop\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(}) N
() N
(void) k
( LobbyAttendant::run\() p
(void) k
(\) {) p n
(    ) S
(while) K
( \() p
(this) K
(->keep_running\) {) p n
(        Event new_event = ) S
(this) K
(->client->rcvEvent\(\);) p n
(        ) S
(if) K
( \(new_event.quit\(\)\) {) p n
(            std::cout << ") S
(El cliente ) str
(" << ) p
(this) K
(->client->getPlayerName\(\) << ") p
( ha saldo de) str n
(l lobby.) S
(" << std::endl;) p n
(            ) S
(this) K
(->client->setStatus\(quited\);) p n
(            ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(            ) S
(return) K
(;) p n
(        }) N
(        ) S
(if) K
( \(new_event.goToMatch\(\)\) {) p n
(            std::string creator_match_name = ) S
(this) K
(->client->getJoinedMatchCreator) p n
(Name\(\);) N
(            ) S
(this) K
(->waiting_games.waitGameUntilFinish\(creator_match_name\);) p n
(            ) S
(continue) K
(;) p n
(        }) N
(        processEvent\(new_event\);) N
(    }) N
(}) N
() N
(void) k
( LobbyAttendant::processEvent\(Event & event\) {) p n
(    YAML::Node event_node = event.getNode\(\);) N
() N
(    action_t action = \(action_t\) event_node[") S
(event) str
("][") p
(action) str
("].as<) p
(int) k
(>\(\);) p n
() N
(    ) S
(switch) K
(\(action\) {) p n
(        ) S
(case) K
( a_refreshLobby: {) p n
(            refreshLobby\(\);) N
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(case) K
( a_createMatch: {) p n
(            std::string match_name = event_node[") S
(event) str
("][") p
(match_name) str
("].as<std::str) p n
(ing>\(\);) N
(            size_t players_qty = event_node[") S
(event) str
("][") p
(map_players_qty) str
("].as<size_t>\(\)) p n
(;) N
(            createMatch\(match_name, players_qty\);) N
(            ) S
(break) K
(;) p n
(lobby_attendant.cpp) (Page 1/3) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(Grenade.h, lobby_attendant.cpp) (19/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 20
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        }) p n
(        ) S
(case) K
( a_rmWaitingMatch: {) p n
(            removeWaitingMatch\(\);) N
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(case) K
( a_joinWaitingMatch: {) p n
(            std::string match_creator_name = event_node[") S
(event) str
("][") p
(creator_name) str
("].as<) p n
(std::string>\(\);) N
(            joinWaitingMatch\(match_creator_name\);) N
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(case) K
( a_exitWaitingMatch: {) p n
(            exitWaitingMatch\(\);) N
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(case) K
( a_refreshWaitingList: {) p n
(            refreshWaitingList\(\);) N
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(case) K
( a_startMatch: {) p n
(            startMatch\(\);) N
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(default) K
(: ) p
(break) K
(;) p n
(    }) N
(}) N
() N
(void) k
( LobbyAttendant::refreshLobby\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->client->sendGamesStatus\() p
(this) K
(->waiting_games.getGamesInfoNode\(\)\);) p n
(}) N
() N
(void) k
( LobbyAttendant::createMatch\(std::string & match_name, size_t map_players_qt) p n
(y\) {) N
(    std::cout << ") S
(El cliente ) str
(" << ) p
(this) K
(->player_name << ") p
( ha creado una partida.) str
(" << std::end) p n
(l;) N
(    ) S
(this) K
(->client->setStatus\(creator\);) p n
(    WaitingGame * new_waiting_game = ) S
(new) K
( WaitingGame\() p
(this) K
(->client, match_name, m) p n
(ap_players_qty\);) N
(    ) S
(this) K
(->waiting_games.addNewWaitingGame\() p
(this) K
(->player_name, new_waiting_game\);) p n
(    ) S
(this) K
(->client->setJoinedMatchGameCreator\(match_name\);) p n
(}) N
() N
(void) k
( LobbyAttendant::removeWaitingMatch\() p
(void) k
(\) {) p n
(    std::cout << ") S
(El creador de la partida en espera ) str
(" << ) p
(this) K
(->waiting_games.getGameName\() p
(th) K n
(is) S
(->player_name\) << ") p
( ha cancelado la partida.) str
(" << std::endl;) p n
(    ) S
(this) K
(->client->setStatus\(lobby\);) p n
(    ) S
(this) K
(->client->clearJoinedMatchGameCreator\(\);) p n
(    ) S
(this) K
(->waiting_games.notifyAllCancellGame\() p
(this) K
(->player_name\);) p n
(    ) S
(this) K
(->waiting_games.removeGame\() p
(this) K
(->player_name\);) p n
(}) N
() N
(void) k
( LobbyAttendant::joinWaitingMatch\(std::string & match_creator_name\) {) p n
(    std::cout << ") S
(El cliente ) str
(" << ) p
(this) K
(->player_name << ") p
( intenta joinearse a la partida de ) str
(" << m) p n
(atch_creator_name << std::endl;) N
(    ) S
(if) K
( \() p
(this) K
(->waiting_games.gameHasFreeSlots\(match_creator_name\)\) {) p n
(        ) S
(this) K
(->waiting_games.addPlayerToGame\(match_creator_name, ) p
(this) K
(->client\);) p n
(        ) S
(this) K
(->client->setStatus\(joined\);) p n
(        std::string msg = "";) N
(        ) S
(this) K
(->client->sendResponse\(1, msg\);) p n
(        ) S
(this) K
(->client->setJoinedMatchGameCreator\(match_creator_name\);) p n
(    } ) S
(else) K
( {) p n
(        std::string msg = ") S
(La partida est\303\241 llena.) str
(";) p n
(lobby_attendant.cpp) (Page 2/3) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(this) K
(->client->sendResponse\(0, msg\);) p n
(    }    ) N
(}) N
() N
(void) k
( LobbyAttendant::exitWaitingMatch\() p
(void) k
(\) {) p n
(    std::string joined_match_creator_name = ) S
(this) K
(->client->getJoinedMatchCreatorN) p n
(ame\(\);) N
(    ) S
(this) K
(->waiting_games.rmvPlayerFromGame\(joined_match_creator_name, ) p
(this) K
(->playe) p n
(r_name\);) N
(    ) S
(this) K
(->client->clearJoinedMatchGameCreator\(\);) p n
(    std::string msg = ") S
(exited) str
(";) p n
(    ) S
(this) K
(->client->sendResponse\(1, msg\);) p n
(}) N
() N
(void) k
( LobbyAttendant::refreshWaitingList\() p
(void) k
(\) {) p n
(    std::cout << ") S
(El creador de partida ) str
(" << ) p
(this) K
(->player_name << ") p
( quiere hacer refresh de la lista) str n
( de jugadores en espera.) S
(" << std::endl;) p n
(    ) S
(this) K
(->client->sendWaitingPlayers\() p
(this) K
(->waiting_games.getWaitingPlayers\() p
(this) K
(-) p n
(>player_name\)\);) N
(}) N
() N
(void) k
( LobbyAttendant::startMatch\() p
(void) k
(\) {) p n
(    std::cout << ") S
(El jugador ) str
(" << ) p
(this) K
(->player_name << ") p
( intenta iniciar su partida.) str
(" << std::) p n
(endl;) N
(    ) S
(if) K
( \() p
(this) K
(->waiting_games.gameHasFreeSlots\() p
(this) K
(->player_name\)\) {) p n
(        ) S
(// No se puede iniciar la partida, pues faltan lugares que ocupar.) c n
(        std::string msg = ") p
(La partida no tiene los suficientes jugadores para iniciar.) str
(";) p n
(        ) S
(this) K
(->client->sendResponse\(0, msg\);) p n
(    } ) S
(else) K
( {) p n
(        ) S
(// La partida puede comenzar) c n
(        std::cout << ") p
(La partida puede comenzar, se le informar\303\241 a todos los participantes.) str
(" << std::e) p n
(ndl;) N
(        ) S
(this) K
(->waiting_games.notifyAllStartGame\() p
(this) K
(->player_name\);) p n
(        std::string map_path = ) S
(this) K
(->player_name + ") p
(-map.tar.gz) str
(";) p n
(        std::fstream map_file\(map_path, std::fstream::out | std::fstream::binary) N
( | std::fstream::trunc\);) N
(        ) S
(this) K
(->client->rcvMapGame\(map_file\);) p n
(        std::cout << ") S
(Recibido el mapa del cliente creador. Va a iniciarse la partida.) str
(" << std::endl;) p n
(        map_file.close\(\);) N
(        ) S
(this) K
(->waiting_games.startWaitingGame\() p
(this) K
(->player_name, map_path\);) p n
(        ) S
(this) K
(->waiting_games.removeGame\() p
(this) K
(->player_name\);) p n
(        std::cout << ") S
(Waiting game removido.) str
(" << std::endl;) p n
(    }) N
(}) S
(lobby_attendant.cpp) (Page 3/3) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(lobby_attendant.cpp) (20/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 21
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __LOBBY_ATTENDANT_H__) p n
(#define) K
( __LOBBY_ATTENDANT_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(waiting_game.h) str
(") p n
(#include) K
( ") p
(protected_waiting_games.h) str
(") p n
() N
(class LobbyAttendant : public Thread {) N
(    private:) N
(        Client * client;) N
(        ProtectedWaitingGames & waiting_games;) N
(        bool keep_running;) N
(        std::string player_name;) N
() N
(        size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(        ) S
(void) k
( processEvent\(Event &\);) p n
(        ) S
(void) k
( refreshLobby\() p
(void) k
(\);) p n
(        ) S
(void) k
( createMatch\(std::string &, size_t\);) p n
(        ) S
(void) k
( removeWaitingMatch\() p
(void) k
(\);) p n
(        ) S
(void) k
( joinWaitingMatch\(std::string &\);) p n
(        ) S
(void) k
( exitWaitingMatch\() p
(void) k
(\);) p n
(        ) S
(void) k
( refreshWaitingList\() p
(void) k
(\);) p n
(        ) S
(void) k
( startMatch\() p
(void) k
(\);) p n
() N
(    public:) N
(        LobbyAttendant\(Client *, ProtectedWaitingGames &\);) N
(        bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ) S
(void) k
( stop\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(lobby_attendant.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <sstream>) p n
(#include) K
( <string>) p n
(#include) K
( <fstream>) p n
(#include) K
( <map>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(socket_error.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(protocol_error.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(World.h) str
(") p n
(#include) K
( ") p
(snapshot_sender.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
(#include) K
( ") p
(event_receiver.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(snapshot.h) str
(") p n
(#include) K
( ") p
(server.h) str
(") p n
(#include) K
( ") p
(server_error.h) str
(") p n
(#include) K
( <sys/stat.h>) p n
() N
(#define) K
( MIN_SRV_ARGS_QTY 2) p n
(#define) K
( MAX_SRV_ARGS_QTY 3) p n
(#define) K
( SRV_CONFIG_FILE_POS 2) p n
(#define) K
( SRV_PORT_POS 1) p n
() N
(Configuration gConfiguration;) N
() N
() N
(int) k
( main\() p
(int) k
( argc, ) p
(char) k
( *argv[]\) ) p
(try) K
( {) p n
(     ) S
(if) K
( \(argc < MIN_SRV_ARGS_QTY || argc > MAX_SRV_ARGS_QTY\) {) p n
(        std::cout << ") S
(Servidor mal invocado.) str
(" << std::endl;) p n
(        std::cout << ") S
(Forma de uso: './server <port> [config-file-path]) str
(" << std::endl;) p n
(        ) S
(return) K
( 0;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(argc == MAX_SRV_ARGS_QTY\) {) p n
(        ) S
(try) K
( {) p n
(            std::cout << ") S
(Cargando archivo de configuraci\303\263n desde ) str
(" << argv[SRV_CONFIG_FIL) p n
(E_POS] << std::endl;) N
(            YAML::Node config_node = YAML::LoadFile\(argv[SRV_CONFIG_FILE_POS]\);) N
(            gConfiguration.loadConfigFile\(config_node\);) N
(        } ) S
(catch) K
( \() p
(const) K
( YAML::Exception & err\) {) p n
(            std::cout << ") S
(No se pudo abrir el archivo de configuraci\303\263n espcificado. Se usar\303\241n valores d) str n
(e configuraci\303\263n por defecto: ) S
(" << err.what\(\) << std::endl;) p n
(        }) N
(    } ) S
(else) K
( {) p n
(        ) S
(struct) k
( stat info;) p n
(        ) S
(if) K
( \(stat\(") p
(/usr/etc/worms) str
(", &info\) == 0\) {) p n
(            std::cout << ") S
(Cargando archivo de configuraci\303\263n en /usr/etc/worms) str
(" << std::endl;) p n
(            YAML::Node config_node = YAML::LoadFile\(") S
(/usr/etc/worms/server_config.yml) str
("\);) p n
(            gConfiguration.loadConfigFile\(config_node\);) N
(        }) N
(    }) N
() N
(    std::string port\(argv[SRV_PORT_POS]\);) N
(    Server server\(port\);) N
() N
(    server.start\(\);) N
() N
(    ) S
(char) k
( c;) p n
(main.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(lobby_attendant.h, main.cpp) (21/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 22
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(do) K
( {) p n
(        c = getchar\(\);) N
(    } ) S
(while) K
( \(c != ') p
(q) str
('\);) p n
() N
(    std::cout << ") S
(Servidor detenido.) str
(" << std::endl;) p n
(    server.stop\(\);) N
(    server.join\(\);) N
() N
(    ) S
(return) K
( 0;) p n
() N
(} ) S
(catch) K
(\() p
(const) K
( SocketError & e\) {) p n
(    std::cout << e.what\(\) << std::endl;) N
(} ) S
(catch) K
(\() p
(const) K
( ServerError & s\) {) p n
(    std::cout << s.what\(\) << std::endl;) N
(} ) S
(catch) K
(\() p
(const) K
( ProtocolError & p\) {) p n
(    std::cout << p.what\(\) << std::endl;) N
(} ) S
(catch) K
(\() p
(const) K
( std::exception & g\) {) p n
(    std::cout << g.what\(\) << std::endl;) N
(}) N
(main.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( <map>) p n
(#include) K
( <vector>) p n
(#include) K
( <algorithm>) p n
(#include) K
( ") p
(team.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
() N
(#define) K
( US_SEC_FACTOR 1000000) p n
() N
(Match::Match\(std::map<) S
(int) k
(, Worm*>& worms, std::map<) p
(int) k
(, Team*> & teams, Wind* wi) p n
(nd, size_t td\) :) N
(teams\(teams\),) N
(worms\(worms\),) N
(wind\(wind\) {) N
(    ) S
(this) K
(->turn_duration_sec = td;) p n
(    ) S
(this) K
(->actual_turn_start_time = 0;) p n
(    ) S
(this) K
(->turn_timeleft_sec = td;) p n
(    ) S
(this) K
(->match_finished = ) p
(false) k
(;) p n
(    ) S
(this) K
(->winner_team = -1;) p n
(    ) S
(this) K
(->turn_finished = ) p
(false) k
(;) p n
(    ) S
(this) K
(->worms_moving = ) p
(false) k
(;) p n
(    ) S
(this) K
(->alive_projectiles = ) p
(false) k
(;) p n
(    ) S
(this) K
(->worms_affected_by_explosion = ) p
(false) k
(;) p n
(    ) S
(this) K
(->protagonic_worm_got_hurt = ) p
(false) k
(;) p n
(    ) S
(this) K
(->protagonic_worm_did_shoot = ) p
(false) k
(;) p n
(    ) S
(this) K
(->extra_time = ) p
(false) k
(;) p n
(    createTeams\(\);) N
(}) N
() N
(void) k
( Match::createTeams\(\) {) p n
(    std::map<) S
(int) k
(, Team*>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->teams.begin\(\); it != ) p
(this) K
(->teams.end\(\); it++\) {) p n
(        ) S
(this) K
(->team_turn_order.push\(\(it\)->first\);) p n
(        std::map<) S
(int) k
(, Worm*> worms_team = \(it\)->second->getWorms\(\);) p n
(        std::map<) S
(int) k
(, Worm*>::const_iterator worms_it;) p n
(        ) N
(        ) S
(for) K
(\(worms_it = worms_team.begin\(\); worms_it != worms_team.end\(\); worms_i) p n
(t++\) {) N
(            ) S
(this) K
(->worm_turn_order[\(it\)->second->getTeamId\(\)].push\(worms_it->seco) p n
(nd->getId\(\)\);) N
(        }) N
() N
(    }) N
(}) N
() N
(void) k
( Match::printTeams\() p
(void) k
(\) {) p n
(    std::map<) S
(int) k
(, Team *>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->teams.begin\(\); it != ) p
(this) K
(->teams.end\(\); it++\) {) p n
(        std::vector<) S
(int) k
(> worms_id = it->second->getWormsID\(\);) p n
(        std::vector<) S
(int) k
(>::const_iterator it2;) p n
(        std::cout << ") S
(Equipo N\303\272mero ) str
(" << it->second->getTeamId\(\) << std::endl;) p n
(        ) S
(for) K
( \(it2 = worms_id.begin\(\); it2 != worms_id.end\(\); it2++\) {) p n
(            std::cout << ") S
(Integrante: ) str
(" << *it2 << std::endl;) p n
(        }) N
(    }) N
(}) N
() N
(int) k
( Match::getTeamTurn\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->team_turn_order.front\(\);) p n
(}) N
() N
(match.cpp) (Page 1/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(main.cpp, match.cpp) (22/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 23
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(int) k
( Match::getWormTurn\() p
(int) k
( team_id\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->worm_turn_order[team_id].front\(\);) p n
(}) N
() N
(int) k
( Match::nextTurn\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->wind->updateWindForce\(\);) p n
(    ) S
(this) K
(->extra_time = ) p
(false) k
(;) p n
(    ) S
(int) k
( alive_teams;) p n
(    ) N
(    ) S
(int) k
( actual_team_turn = getTeamTurn\(\);) p n
() N
(    alive_teams = removeDeadTeamsTurns\(\);) N
(    ) S
(if) K
( \(alive_teams == 1\) {) p n
(        ) S
(this) K
(->winner_team = ) p
(this) K
(->team_turn_order.front\(\);) p n
(        ) S
(//Partida con un ganador) c n
(        ) p
(return) K
( -1;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(alive_teams == 0\) {) p n
(        ) S
(this) K
(->winner_team = 0;) p n
(        ) S
(// Partida sin ganadores) c n
(        ) p
(return) K
( -2;) p n
(    }) N
(  ) N
(    ) S
(int) k
( actual_worm_turn;) p n
(    ) S
(if) K
( \(getTeamTurn\(\) == actual_team_turn\) {) p n
(        actual_worm_turn = getWormTurn\(actual_team_turn\);) N
(        removeDeadWormsTurns\(\);) N
(        ) S
(if) K
( \(getWormTurn\(actual_team_turn\) == actual_worm_turn\) {) p n
(            ) S
(this) K
(->worm_turn_order[actual_team_turn].pop\(\);) p n
(            ) S
(this) K
(->worm_turn_order[actual_team_turn].push\(actual_worm_turn\);) p n
(        }) N
(        ) S
(this) K
(->team_turn_order.pop\(\);) p n
(        ) S
(this) K
(->team_turn_order.push\(actual_team_turn\);) p n
(    }) N
(    ) N
(    refreshWormsFlagsByNewTurn\(\);) N
() N
(    ) S
(return) K
( 0;) p n
(}) N
() N
(void) k
( Match::refreshWormsFlagsByNewTurn\() p
(void) k
(\) {) p n
(    std::map<) S
(int) k
(, Worm *>::iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
(        it->second->refreshByNewTurn\(\);) N
(    }) N
(}) N
() N
(int) k
( Match::removeDeadTeamsTurns\() p
(void) k
(\) {) p n
(    ) S
(int) k
( teams_qty = ) p
(this) K
(->team_turn_order.size\(\);) p n
(    ) S
(for) K
( \() p
(int) k
( i = 0; i < teams_qty; i++\) {) p n
(        ) S
(int) k
( team_id = ) p
(this) K
(->team_turn_order.front\(\);) p n
(        ) S
(this) K
(->team_turn_order.pop\(\);) p n
(        ) S
(if) K
( \() p
(this) K
(->teams[team_id]->haveAliveMember\(\)\) {) p n
(            ) S
(this) K
(->team_turn_order.push\(team_id\);) p n
(        }) N
(    }) N
(    ) S
(return) K
( ) p
(this) K
(->team_turn_order.size\(\);) p n
(}) N
() N
(void) k
( Match::removeDeadWormsTurns\() p
(void) k
(\) {) p n
(    std::map<) S
(int) k
(, std::queue<) p
(int) k
(>>::iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worm_turn_order.begin\(\); it != ) p
(this) K
(->worm_turn_order.end\(\); ) p n
(it++\) {) N
(match.cpp) (Page 2/5) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(int) k
( queue_size = it->second.size\(\);) p n
(        ) S
(for) K
( \() p
(int) k
( i = 0; i < queue_size; i++\) {) p n
(            ) S
(int) k
( worm_id = it->second.front\(\);) p n
(            it->second.pop\(\);) N
(            ) S
(if) K
( \(!) p
(this) K
(->worms[worm_id]->isDead\(\)\) {) p n
(                it->second.push\(worm_id\);) N
(            }) N
(        }) N
(    }) N
(}) N
() N
(std::map<size_t, ) S
(int) k
(> Match::getTeamInfo\() p
(void) k
(\) {) p n
(    std::map<size_t, ) S
(int) k
(> alive_teams;) p n
(    std::map<) S
(int) k
(, Team *>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->teams.begin\(\); it != ) p
(this) K
(->teams.end\(\); it++\) {) p n
(            alive_teams[it->second->getTeamId\(\)] = it->second->getTotalLife\(\);) N
(    }) N
(    ) S
(return) K
( alive_teams;) p n
(}) N
() N
(void) k
( Match::start\() p
(unsigned) k
( ) p
(int) k
( actual_time_sec\) {) p n
(    ) S
(this) K
(->actual_turn_start_time = actual_time_sec;) p n
(    std::cout << ") S
(Es el turno del equipo ) str
(" << getTeamTurn\(\) << ") p
( con su Worm ) str
(" << getWormTu) p n
(rn\(getTeamTurn\(\)\) << std::endl;) N
(}) N
() N
(void) k
( Match::setMovingWormsFlag\() p
(bool) k
( flag\) {) p n
(    ) S
(this) K
(->worms_moving = flag;) p n
(}) N
() N
(void) k
( Match::setAliveProjectilesFlag\() p
(bool) k
( flag\) {) p n
(    ) S
(this) K
(->alive_projectiles = flag;) p n
(}) N
() N
(void) k
( Match::setWormsAffectedByExplosion\() p
(bool) k
( flag\) {) p n
(    ) S
(this) K
(->worms_affected_by_explosion = flag;) p n
(}) N
() N
(void) k
( Match::setProtagonicWormGotHurt\() p
(bool) k
( flag\) {) p n
(    ) S
(this) K
(->protagonic_worm_got_hurt = flag;) p n
(}) N
() N
(void) k
( Match::setProtagonicWormDidShoot\() p
(bool) k
( flag\) {) p n
(    ) S
(this) K
(->protagonic_worm_did_shoot = flag;) p n
(}) N
() N
(void) k
( Match::update\() p
(unsigned) k
( ) p
(int) k
( time_passed\) {) p n
(    ) S
(//this->turn_timeleft_sec = this->turn_timeleft_sec - time_passed;) c n
(    ) p
(if) K
( \() p
(this) K
(->match_finished\) ) p
(return) K
(;) p n
(    ) S
(if) K
( \(aliveTeams\(\) < 2\) {) p n
(        ) S
(this) K
(->match_finished = ) p
(true) k
(;) p n
(    }) N
() N
(    ) S
(if) K
( \() p
(this) K
(->turn_timeleft_sec <= 0\) {) p n
(        ) S
(this) K
(->turn_finished = ) p
(true) k
(;) p n
(        ) S
(this) K
(->extra_time = ) p
(false) k
(;) p n
(    } ) S
(else) K
( {) p n
(        ) S
(this) K
(->turn_timeleft_sec = ) p
(this) K
(->turn_timeleft_sec - time_passed;) p n
(    }) N
() N
(    ) S
(if) K
( \() p
(this) K
(->protagonic_worm_did_shoot && ) p
(this) K
(->turn_timeleft_sec > 3\) {) p n
(        ) S
(this) K
(->turn_timeleft_sec = 3;) p n
(match.cpp) (Page 3/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(match.cpp) (23/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 24
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(this) K
(->protagonic_worm_did_shoot = ) p
(false) k
(;) p n
(        ) S
(this) K
(->extra_time = ) p
(true) k
(;) p n
(    }) N
() N
(    ) S
(if) K
( \(\() p
(this) K
(->protagonic_worm_did_shoot || ) p
(this) K
(->protagonic_worm_got_hurt || ) p
(th) K n
(is) S
(->turn_finished\) ) p n
(    && !) S
(this) K
(->worms_moving && !) p
(this) K
(->alive_projectiles && !) p
(this) K
(->worms_affected_) p n
(by_explosion && !) S
(this) K
(->extra_time\) {) p n
(        ) S
(//this->extra_time = false;) c n
(        ) p
(if) K
( \(nextTurn\(\) < 0\) {) p n
(            std::cout << ") S
(No se pudo cambiar de turno, la partida finaliz\303\263.) str
(" << std::endl;) p n
(            ) S
(this) K
(->match_finished = ) p
(true) k
(;) p n
(        } ) S
(else) K
( {) p n
(            std::cout << ") S
(Es el turno del equipo ) str
(" << getTeamTurn\(\) << ") p
( con su Worm ) str
(" << g) p n
(etWormTurn\(getTeamTurn\(\)\) << std::endl;) N
(            ) S
(this) K
(->turn_timeleft_sec = ) p
(this) K
(->turn_duration_sec;) p n
(            ) S
(this) K
(->turn_finished = ) p
(false) k
(;) p n
(            ) S
(return) K
(;) p n
(        }        ) N
(    }    ) N
(}) N
() N
(int) k
( Match::getTurnTimeleft\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->turn_timeleft_sec;) p n
(}) N
() N
(bool) k
( Match::finished\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->match_finished;) p n
(}) N
() N
(int) k
( Match::getWinner\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->winner_team;) p n
(}) N
() N
(int) k
( Match::getTeamTotalLife\(size_t team_id\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->teams[team_id]->getTotalLife\(\);) p n
(}) N
() N
(int) k
( Match::getWindForce\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->wind->getWindForce\(\);) p n
(}) N
() N
(bool) k
( Match::extraTime\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->extra_time;) p n
(}) N
() N
(void) k
( Match::removePlayer\(size_t tid\) {) p n
(    ) S
(this) K
(->teams[\() p
(int) k
(\)tid]->killAll\(\);) p n
(    ) S
(if) K
( \(getTeamTurn\(\) == \() p
(int) k
(\) tid\) {) p n
(        ) S
(if) K
( \(nextTurn\(\) < 0\) {) p n
(            std::cout << ") S
(No se pudo cambiar de turno, la partida finaliz\303\263.) str
(" << std::endl;) p n
(            ) S
(this) K
(->match_finished = ) p
(true) k
(;) p n
(        } ) S
(else) K
( {) p n
(            std::cout << ") S
(Es el turno del equipo ) str
(" << getTeamTurn\(\) << ") p
( con su Worm ) str
(" << g) p n
(etWormTurn\(getTeamTurn\(\)\) << std::endl;) N
(            ) S
(this) K
(->turn_timeleft_sec = ) p
(this) K
(->turn_duration_sec;) p n
(            ) S
(this) K
(->turn_finished = ) p
(false) k
(;) p n
(            ) S
(return) K
(;) p n
(        }           ) N
(    }) N
(}) N
() N
(match.cpp) (Page 4/5) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(size_t Match::aliveTeams\() p
(void) k
(\) {) p n
(    size_t counter = 0;) N
(    std::map<) S
(int) k
(, Team *>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->teams.begin\(\); it != ) p
(this) K
(->teams.end\(\); it++\) {) p n
(        ) S
(if) K
( \(it->second->haveAliveMember\(\)\) {) p n
(            counter++;) N
(        }) N
(    }) N
(    ) S
(return) K
( counter;) p n
(}) N
(match.cpp) (Page 5/5) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(match.cpp) (24/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 25
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __MATCH_H__) p n
(#define) K
( __MATCH_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( <vector>) p n
(#include) K
( <queue>) p n
(#include) K
( ") p
(team.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(Wind.h) str
(") p n
() N
(class Match {) N
(    private:) N
(        std::map<) S
(int) k
(, Team *> & teams;) p n
(        std::map<) S
(int) k
(, Worm *> & worms;) p n
(        Wind* wind;) N
(        std::queue<) S
(int) k
(> team_turn_order;) p n
(        std::map<) S
(int) k
(, std::queue<) p
(int) k
(>> worm_turn_order;) p n
(        ) S
(unsigned) k
( ) p
(int) k
( turn_duration_sec;) p n
(        ) S
(unsigned) k
( ) p
(int) k
( actual_turn_start_time;) p n
(        bool match_finished;) N
(        ) S
(int) k
( winner_team;) p n
(        ) S
(int) k
( turn_timeleft_sec;) p n
(        bool turn_finished;) N
(        bool worms_moving;) N
(        bool alive_projectiles;) N
(        bool worms_affected_by_explosion;) N
(        bool protagonic_worm_got_hurt;) N
(        bool protagonic_worm_did_shoot;) N
(        bool extra_time;) N
() N
(        ) S
(void) k
( createTeams\(\);) p n
(        ) S
(int) k
( removeDeadTeamsTurns\() p
(void) k
(\);) p n
(        ) S
(void) k
( removeDeadWormsTurns\() p
(void) k
(\);) p n
(        ) S
(void) k
( refreshWormsFlagsByNewTurn\() p
(void) k
(\);) p n
(        size_t aliveTeams\() S
(void) k
(\);) p n
() N
(    public:) N
(        Match\(std::map<) S
(int) k
(, Worm*>& worms, std::map<) p
(int) k
(, Team*> &,Wind* wind, si) p n
(ze_t\);) N
(        ) S
(void) k
( printTeams\() p
(void) k
(\);) p n
(        ) S
(int) k
( getTeamTurn\() p
(void) k
(\);) p n
(        ) S
(int) k
( getWormTurn\() p
(int) k
(\);) p n
(        ) S
(void) k
( start\() p
(unsigned) k
( ) p
(int) k
(\);) p n
(        ) S
(int) k
( nextTurn\() p
(void) k
(\);) p n
(        ) S
(void) k
( update\() p
(unsigned) k
( ) p
(int) k
(\);) p n
(        bool finished\() S
(void) k
(\);) p n
(        ) S
(int) k
( getWinner\() p
(void) k
(\);) p n
(        ) S
(int) k
( getTurnTimeleft\() p
(void) k
(\);) p n
(        std::map<size_t, ) S
(int) k
(> getTeamInfo\() p
(void) k
(\);) p n
(        ) S
(void) k
( setAliveProjectilesFlag\(bool\);) p n
(        ) S
(void) k
( setMovingWormsFlag\(bool\);) p n
(        ) S
(void) k
( setWormsAffectedByExplosion\(bool\);) p n
(        ) S
(void) k
( setProtagonicWormGotHurt\(bool\);) p n
(        ) S
(void) k
( setProtagonicWormDidShoot\(bool\);) p n
(        ) S
(int) k
( getTeamTotalLife\(size_t\);) p n
(        ) S
(int) k
( getWindForce\(\);) p n
(        bool extraTime\(\);) N
(        ) S
(void) k
( removePlayer\(size_t\);) p n
(};) N
() N
(#endif) K
(match.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Missil.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(Missil::Missil\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, weapon_t type\) : ) p n
(Weapon\(type\),) N
(world\(world\) {) N
(    b2BodyDef missilDef;) N
(    missilDef.type = b2_dynamicBody;) N
(    missilDef.position.Set\(posX, posY\);) N
(    b2Body* body = world.CreateBody\(&missilDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    b2PolygonShape missilShape;) N
(    missilShape.SetAsBox\(MISSIL_WIDTH/2, MISSIL_HEIGHT/2\);) N
() N
(    b2FixtureDef missilFixture;) N
(    missilFixture.shape = &missilShape;) N
(    missilFixture.density = 1;) N
(    missilFixture.friction = 0.3;) N
() N
(    body->CreateFixture\(&missilFixture\);) N
() N
(    ) S
(this) K
(->body = body;) p n
(    ) S
(this) K
(->blast_radius = gConfiguration.AIR_STRIKE_BLAST_RADIUS;) p n
(    ) S
(this) K
(->blast_power = gConfiguration.AIR_STRIKE_BLAST_POWER;) p n
(    ) S
(this) K
(->exploded = ) p
(false) k
(;) p n
(    ) S
(this) K
(->id = id;) p n
(    ) S
(this) K
(->wind_affected = ) p
(true) k
(;) p n
(}) N
() N
(Missil::~Missil\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Missil::explode\(\) {) p n
(    ExplosionManager explosionManager\() S
(this) K
(->world\);) p n
(    b2Vec2 center = ) S
(this) K
(->body->GetPosition\(\);) p n
(    explosionManager.manageExplosion\(center, blast_radius, blast_power\);) N
(    ) S
(this) K
(->exploded = ) p
(true) k
(;) p n
(}) N
() N
(float) k
( Missil::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Missil::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
() N
(void) k
( Missil::update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->body->GetPosition\(\).y > gConfiguration.WORLD_Y_LIMIT ) p
(/*|| contact*) c n
(/) S
(\) {) p n
(        ) S
(this) K
(->explode\(\);) p n
(    }) N
(    ) N
(    ) S
(if) K
( \(wind_affected\) {) p n
(        ) S
(this) K
(->body->ApplyForce\(body->GetMass\(\) * b2Vec2\(wind_force, 0\), body->Ge) p n
(tWorldCenter\(\), ) S
(true) k
(\);) p n
(    }) N
() N
(    b2Vec2 mov_speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
() N
(Missil.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(match.h, Missil.cpp) (25/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 26
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(if) K
( \(round\(mov_speed.x\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.y > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 180;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.y < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 0;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(if) K
( \(round\(mov_speed.y\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.x > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 90;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.x < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 270;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(int) k
( ang = atan\(mov_speed.x/mov_speed.y\) * gConfiguration.RADTODEG;) p n
() N
(    ) S
(// Primer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = -ang;) p n
(    }) N
() N
(    ) S
(// Segundo cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 360 - ang;) p n
(    }) N
() N
(    ) S
(// Tercer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
() N
(    ) S
(// Cuarto cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
(}) N
() N
(// void Missil::setContact\(bool made_contact\) {) c n
(//     this->contact = made_contact;) N
(// }) N
() p n
(bool) k
( Missil::isMoving\(\) {) p n
(    b2Vec2 speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(if) K
( \(!speed.x && !speed.y\) ) p
(return) K
( ) p
(false) k
(;) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) S
(Missil.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( MISSIL_H) p n
(#define) K
( MISSIL_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
() N
(#define) K
( MISSIL_WIDTH 0.2f) p n
(#define) K
( MISSIL_HEIGHT 0.7f) p n
() N
(class Missil : public Weapon {) N
(private:) N
(    ) S
(int) k
( blast_power;) p n
(    b2World& world;) N
(    b2Body* body;) N
(public:) N
(    Missil\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, weapon_t type\);) p n
(    ~Missil\(\);) N
(    ) S
(void) k
( explode\(\);) p n
(    ) S
(float) k
( getPosX\(\);) p n
(    ) S
(float) k
( getPosY\(\);) p n
(    bool isMoving\(\);) N
(    entity_t getEntityType\(\) {) S
(return) K
( MISSIL;}) p n
(    ) S
(void) k
( update\() p
(int) k
( currentTime, ) p
(int) k
( wind_force\);) p n
(};) N
() N
(#endif) K
(Missil.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Missil.cpp, Missil.h) (26/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 27
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Mortar.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(Mortar::Mortar\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( mirrored, ) p
(f) k n
(loat) S
( shooting_angle, ) p
(int) k
( power_factor, weapon_t type\) :) p n
(Bazooka\(id, world, posX, posY, mirrored, shooting_angle, power_factor, type\) {) N
() N
(}) N
() N
(int) k
( Mortar::addProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\) {) p n
(    ) S
(for) K
( \() p
(int) k
( i = 1; i < gConfiguration.MORTAR_FRAGMENT_QUANTITY; ++i\) {) p n
(        Fragment* fragment = ) S
(new) K
( Fragment\() p
(this) K
(->id + i,) p n
(        ) S
(this) K
(->world,) p n
(        getPosX\(\),) N
(        getPosY\(\),) N
(        w_air_strike\);) N
(        weapons.insert\(std::pair<) S
(int) k
(, Weapon*>\(fragment->getId\(\), fragment\)\);) p n
(    }) N
(    ) S
(return) K
( gConfiguration.MORTAR_FRAGMENT_QUANTITY;) p n
(}) S
(Mortar.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( MORTAR_H) p n
(#define) K
( MORTAR_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Bazooka.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(Fragment.h) str
(") p n
() N
(class Mortar : public Bazooka {) N
(public:) N
(    Mortar\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( mirrored, ) p
(float) k
() p n
( shooting_angle, ) S
(int) k
( power_factor, weapon_t type\);) p n
(    ) S
(int) k
( addProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\);) p n
(};) N
() N
(#endif) K
(Mortar.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Mortar.cpp, Mortar.h) (27/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 28
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( PHYSIC_ENTITY_H) p n
(#define) K
( PHYSIC_ENTITY_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
() N
(enum) k
( _entityCategory {) p n
(    WORM_PHYSIC = 0x0001,) N
(    STRUCTURE_PHYSIC = 0x0002,) N
(    WATER_PHYSIC = 0x0004,) N
(    BAT_PHYSIC = 0x0008,) N
(    BAZOOKA_PHYSIC = 0x0010,) N
(};) N
() N
(class PhysicEntity {) N
(public:) N
(private:) N
(};) N
() N
(#endif) K
(PhysicEntity.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(protected_waiting_games.h) str
(") p n
(#include) K
( <mutex>) p n
(#include) K
( <map>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(waiting_game.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(ProtectedWaitingGames::ProtectedWaitingGames\() S
(void) k
(\) {) p n
() N
(}) N
() N
(void) k
( ProtectedWaitingGames::addNewWaitingGame\(std::string & creator_name, Waitin) p n
(gGame * new_waiting_game\) {) N
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(this) K
(->waiting_games[creator_name] = new_waiting_game;) p n
(}) N
() N
(YAML::Node ProtectedWaitingGames::getGamesInfoNode\() S
(void) k
(\) {) p n
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    YAML::Node waiting_games;) N
(    std::map<std::string, WaitingGame*>::const_iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->waiting_games.begin\(\); it != ) p
(this) K
(->waiting_games.end\(\); it++) p n
(\) {) N
(        YAML::Node a_waiting_game_node;) N
(        a_waiting_game_node[") S
(match_name) str
("] = it->second->getMatchName\(\);) p n
(        a_waiting_game_node[") S
(creator) str
("] = it->second->getCreatorName\(\);) p n
(        a_waiting_game_node[") S
(required_players) str
("] = it->second->getPlayersQty\(\);) p n
(        a_waiting_game_node[") S
(joined_players) str
("] = it->second->getJoinedPlayersQty\(\);) p n
(        waiting_games[") S
(waiting_games) str
("].push_back\(a_waiting_game_node\);) p n
(    }) N
(    ) S
(return) K
( waiting_games;) p n
(}) N
() N
(std::string ProtectedWaitingGames::getGameName\(std::string & creator_name\) {) N
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(return) K
( ) p
(this) K
(->waiting_games[creator_name]->getMatchName\(\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::removeGame\(std::string & creator_name\) {) p n
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(delete) K
( ) p
(this) K
(->waiting_games[creator_name];) p n
(    ) S
(this) K
(->waiting_games.erase\(creator_name\);) p n
(}) N
() N
(bool) k
( ProtectedWaitingGames::gameHasFreeSlots\(std::string & creator_name\) {) p n
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(return) K
( ) p
(this) K
(->waiting_games[creator_name]->hasFreeSlots\(\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::addPlayerToGame\(std::string & creator_name, Client *) p n
( new_player\) {) N
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(this) K
(->waiting_games[creator_name]->addPlayer\(new_player\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::rmvPlayerFromGame\(std::string & creator_name, std::s) p n
(tring & rm_player_name\) {) N
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(this) K
(->waiting_games[creator_name]->rmPlayer\(rm_player_name\);) p n
(}) N
() N
(std::vector<std::string> ProtectedWaitingGames::getWaitingPlayers\(std::string & ) N
(protected_waiting_games.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(PhysicEntity.h, protected_waiting_games.cpp) (28/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 29
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(creator_name\) {) p n
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(return) K
( ) p
(this) K
(->waiting_games[creator_name]->getWaitingPlayersName\(\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::notifyAllStartGame\(std::string & creator_name\) {) p n
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(this) K
(->waiting_games[creator_name]->notifyAllStartGame\(\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::notifyAllCancellGame\(std::string & creator_name\) {) p n
(    std::lock_guard<std::mutex> lck\() S
(this) K
(->mutex\);) p n
(    ) S
(this) K
(->waiting_games[creator_name]->notifyAllCancellGame\(\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::startWaitingGame\(std::string & creator_name, std::st) p n
(ring & map_path\) {) N
(    ) S
(this) K
(->waiting_games[creator_name]->startGame\(map_path\);) p n
(}) N
() N
(void) k
( ProtectedWaitingGames::waitGameUntilFinish\(std::string & creator_name\) {) p n
(    ) S
(this) K
(->waiting_games[creator_name]->waitUntilFinish\(\);) p n
(}) S
(protected_waiting_games.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __PROTECTED_WAITING_GAMES_H__) p n
(#define) K
( __PROTECTED_WAITING_GAMES_H__) p n
() N
(#include) K
( <mutex>) p n
(#include) K
( <map>) p n
(#include) K
( <string>) p n
(#include) K
( <vector>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(waiting_game.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
() N
(class ProtectedWaitingGames {) N
(    private:) N
(        std::mutex mutex;) N
(        std::map<std::string, WaitingGame*> waiting_games;) N
(    public:) N
(        ProtectedWaitingGames\() S
(void) k
(\);) p n
(        ) S
(void) k
( addNewWaitingGame\(std::string &, WaitingGame *\);) p n
(        YAML::Node getGamesInfoNode\() S
(void) k
(\);) p n
(        std::string getGameName\(std::string &\);) N
(        ) S
(void) k
( removeGame\(std::string &\);) p n
(        bool gameHasFreeSlots\(std::string &\);) N
(        ) S
(void) k
( addPlayerToGame\(std::string &, Client *\);) p n
(        ) S
(void) k
( rmvPlayerFromGame\(std::string &, std::string &\);) p n
(        std::vector<std::string> getWaitingPlayers\(std::string &\);) N
(        ) S
(void) k
( notifyAllStartGame\(std::string &\);) p n
(        ) S
(void) k
( notifyAllCancellGame\(std::string &\);) p n
(        ) S
(void) k
( startWaitingGame\(std::string &, std::string &\);) p n
(        ) S
(void) k
( waitGameUntilFinish\(std::string &\);) p n
(};) N
() N
(#endif) K
(protected_waiting_games.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(protected_waiting_games.cpp, protected_waiting_games.h) (29/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 30
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(QueryCallback.h) str
(") p n
() N
(bool) k
( QueryCallback::ReportFixture\(b2Fixture* fixture\) {) p n
(    foundBodies.push_back\(fixture->GetBody\(\)\);) N
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) S
(QueryCallback.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( QUERY_CALLBACK_H) p n
(#define) K
( QUERY_CALLBACK_H) p n
() N
(#include) K
( <vector>) p n
(#include) K
( ") p
(Box2D.h) str
(") p n
() N
(class QueryCallback : public b2QueryCallback {) N
(public:) N
(    std::vector<b2Body*> foundBodies;) N
(    bool ReportFixture\(b2Fixture* fixture\);) N
(};) N
() N
(#endif) K
(QueryCallback.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(QueryCallback.cpp, QueryCallback.h) (30/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 31
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(RayCastClosestCallBack.h) str
(") p n
() N
(RayCastClosestCallBack::RayCastClosestCallBack\(\) {) N
(    ) S
(this) K
(->body = ) p
(NULL) K
(;) p n
(}) N
() N
(float) k
(32 RayCastClosestCallBack::ReportFixture\(b2Fixture* fixture, ) p
(const) K
( b2Vec2& ) p n
(point, ) S
(const) K
( b2Vec2& normal, ) p
(float) k
(32 fraction\) {) p n
(    body = fixture->GetBody\(\);) N
(    ) S
(this) K
(->point = point;) p n
(    ) S
(return) K
( fraction;) p n
(}) N
(RayCastClosestCallBack.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( RAYCAST_CLOSEST_CALL_BACK_H) p n
(#define) K
( RAYCAST_CLOSEST_CALL_BACK_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
() N
(class RayCastClosestCallBack : public b2RayCastCallback {) N
(public:) N
(    RayCastClosestCallBack \(\);) N
(    b2Body* body;) N
(    b2Vec2 point;) N
() N
(    ) S
(float) k
(32 ReportFixture\(b2Fixture* fixture, ) p
(const) K
( b2Vec2& point, ) p
(const) K
( b2Vec2&) p n
( normal, ) S
(float) k
(32 fraction\);) p n
(};) N
() N
(#endif) K
(RayCastClosestCallBack.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(RayCastClosestCallBack.cpp, RayCastClosestCallBack.h) (31/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 32
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(RedGrenade.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(RedGrenade::RedGrenade\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, ) p
(bool) k
( mirr) p n
(ored, ) S
(float) k
( shooting_angle, ) p
(int) k
( power_factor, ) p
(int) k
( delay, ) p
(int) k
( currentTime, weapon) p n
(_t type\) :) N
(Grenade\(id, world, posX, posY, mirrored, shooting_angle, power_factor, delay, cu) N
(rrentTime, type\) {) N
(}) N
() N
(int) k
( RedGrenade::addProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\) {) p n
(    ) S
(for) K
( \() p
(int) k
( i = 1; i < gConfiguration.RED_GRENADE_FRAGMENT_QUANTITY + 1; ++i\) {) p n
(        Fragment* fragment = ) S
(new) K
( Fragment\() p
(this) K
(->id+i, ) p n
(        ) S
(this) K
(->world, ) p n
(        getPosX\(\),) N
(        getPosY\(\),) N
(        w_air_strike\);) N
(        weapons.insert\(std::pair<) S
(int) k
(, Weapon*>\(fragment->getId\(\), fragment\)\);) p n
(    }) N
(    ) S
(return) K
( gConfiguration.RED_GRENADE_FRAGMENT_QUANTITY;) p n
(}) S
(RedGrenade.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( RED_GRENADE_H) p n
(#define) K
( RED_GRENADE_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(Grenade.h) str
(") p n
(#include) K
( ") p
(ExplosionManager.h) str
(") p n
(#include) K
( <list>) p n
(#include) K
( ") p
(Fragment.h) str
(") p n
(#include) K
( <map>) p n
() N
(class RedGrenade : public Grenade {) N
(public:) N
(    RedGrenade\() S
(int) k
( id, b2World& world, ) p
(float) k
( posX, ) p
(float) k
( posY, bool mirrored, ) p
(fl) k n
(oat) S
( shooting_angle, ) p
(int) k
( power_factor, ) p
(int) k
( delay, ) p
(int) k
( currentTime, weapon_t type\)) p n
(;) N
(    ) S
(int) k
( addProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\);) p n
(};) N
() N
(#endif) K
(RedGrenade.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(RedGrenade.cpp, RedGrenade.h) (32/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 33
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <fstream>) p n
(#include) K
( <map>) p n
(#include) K
( <sstream>) p n
(#include) K
( ") p
(server.h) str
(") p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(socket_error.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(server_error.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(lobby_attendant.h) str
(") p n
() N
(Server::Server\(std::string & port\) :) N
(skt\(port\) {) N
(    ) S
(this) K
(->keep_running = ) p
(true) k
(;) p n
(}) N
() N
(void) k
( Server::run\() p
(void) k
(\) {) p n
(    ) S
(while) K
( \(1\) {) p n
(        ) S
(try) K
( {) p n
(            Protocol newsktprotocol\(std::move\() S
(this) K
(->skt.accept_connection\(\)\)\);) p n
(            std::string player_name;) N
(            newsktprotocol.getPlayerName\(player_name\);) N
() N
(            cleanLobby\(\);) N
(            cleanQuitedClients\(\);) N
() N
(            ) S
(if) K
( \() p
(this) K
(->clients.find\(player_name\) != ) p
(this) K
(->clients.end\(\)\) {) p n
(                player_name = findFreeName\(player_name\);) N
(            }) N
() N
(            std::cout << ") S
(Bautizando al cliente como ) str
(" << player_name << std::endl;) p n
(            newsktprotocol.sendName\(player_name\);) N
() N
(            YAML::Node match_status = ) S
(this) K
(->protected_waiting_games.getGamesInfo) p n
(Node\(\);) N
(            newsktprotocol.sendGameStatus\(match_status\);) N
() N
(            Client * client = ) S
(new) K
( Client\(std::move\(newsktprotocol\), player_name\)) p n
(;) N
(            ) S
(this) K
(->clients.insert\(std::pair<std::string, Client*>\(player_name, cl) p n
(ient\)\);) N
(            LobbyAttendant * new_lobby_attendant = ) S
(new) K
( LobbyAttendant\(client, ) p
(th) K n
(is) S
(->protected_waiting_games\);) p n
(            new_lobby_attendant->start\(\);) N
(            ) S
(this) K
(->clients_in_lobby.insert\(std::pair<std::string, LobbyAttendant*) p n
(>\(player_name, new_lobby_attendant\)\);) N
(        } ) S
(catch) K
(\() p
(const) K
( SocketError & e\) {) p n
(            std::cout << ") S
(Server acceptor se detiene por cierre del socket listener.) str
(" << std::endl;) p n
(            ) S
(break) K
(;) p n
(        }) N
(    }) N
(}) N
() N
(void) k
( Server::cleanLobby\() p
(void) k
(\) {) p n
(    std::map<std::string, LobbyAttendant*>::iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients_in_lobby.begin\(\); it != ) p
(this) K
(->clients_in_lobby.end\(\)) p n
(;\) {) N
(        ) S
(if) K
( \(!it->second->isRunning\(\)\) {) p n
(            it->second->join\(\);) N
(            std::cout << ") S
(Deleteando Lobby Attendant del cliente ) str
(" << it->first << std::end) p n
(l;) N
(            ) S
(delete) K
( it->second;) p n
(server.cpp) (Page 1/2) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            ) p
(this) K
(->clients_in_lobby.erase\(it++\);) p n
(        } ) S
(else) K
( {) p n
(            ++it;) N
(        }) N
(    }) N
(}) N
() N
(void) k
( Server::cleanQuitedClients\() p
(void) k
(\) {) p n
(    std::map<std::string, Client*>::iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients.begin\(\); it != ) p
(this) K
(->clients.end\(\);\) {) p n
(        ) S
(if) K
( \(it->second->getStatus\(\) == quited\) {) p n
(            std::cout << ") S
(Deleteando al cliente ) str
(" << it->first << ") p
( que salio del Lobby.) str
(" << s) p n
(td::endl;) N
(            ) S
(delete) K
( it->second;) p n
(            ) S
(this) K
(->clients.erase\(it++\);) p n
(        } ) S
(else) K
( {) p n
(            ++it;) N
(        }) N
(    }) N
(}) N
() N
( ) S
(bool) k
( Server::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(     ) S
(return) K
( ) p
(this) K
(->keep_running;) p n
( }) N
() N
(Server::~Server\() S
(void) k
(\) {) p n
(    ) S
(// Cerrar server ordenadamente) c n
(    std::map<std::string, Client*>::iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients.begin\(\); it != ) p
(this) K
(->clients.end\(\); it++\) {) p n
(        ) S
(delete) K
( it->second;) p n
(    }) N
(}) N
() N
(size_t  Server::getId\() S
(void) k
(\) ) p
(const) K
({) p n
(    ) S
(return) K
( 0;) p n
(}) N
() N
(void) k
( Server::stop\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(    ) S
(// Destraba el accept del metodo run\(\)) c n
(    ) p
(this) K
(->skt.stopListening\(\);) p n
(}) N
() N
(std::string Server::findFreeName\(std::string & old_name\) {) N
(    ) S
(int) k
( counter = 1;) p n
(    std::string number;) N
(    std::string new_name;) N
(    std::string tmp;) N
(    ) S
(while) K
(\(1\) {) p n
(        number.clear\(\);) N
(        number.append\(") S
(-) str
(" + std::to_string\(counter\)\);) p n
(        tmp = old_name;) N
(        ) S
(if) K
( \() p
(this) K
(->clients.find\(tmp.append\(number\)\) == ) p
(this) K
(->clients.end\(\)\) {) p n
(            new_name = tmp;) N
(            ) S
(break) K
(;) p n
(        }) N
(        counter++;) N
(    }) N
(    ) S
(return) K
( new_name;) p n
(}) N
(server.cpp) (Page 2/2) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(server.cpp) (33/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 34
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(server_error.h) str
(") p n
() N
(ServerError::ServerError\() S
(const) K
( std::string & msg\) {) p n
(    ) S
(this) K
(->msg = msg;) p n
(}) N
() N
(const) K
( ) p
(char) k
( * ServerError::what\(\) ) p
(const) K
( noexcept {) p n
(    ) S
(return) K
( ) p
(this) K
(->msg.c_str\(\);) p n
(}) N
() N
(ServerError::~ServerError\(\) {) N
(}) N
(server_error.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SERVER_ERROR_H__) p n
(#define) K
( __SERVER_ERROR_H__) p n
() N
(#include) K
( <exception>) p n
(#include) K
( <iostream>) p n
(#include) K
( <string>) p n
() N
(/*) c n
(Clase para generar excepciones del tipo 'servidor'.) N
(*/) N
(class ServerError : public std::exception {) p n
(    private:) N
(        std::string msg;) N
(    public:) N
(        explicit ServerError\() S
(const) K
( std::string &\);) p n
(        virtual ) S
(const) K
( ) p
(char) k
( * what\(\) ) p
(const) K
( noexcept;) p n
(        virtual ~ServerError\(\) noexcept;) N
(};) N
() N
(#endif) K n
(server_error.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(server_error.cpp, server_error.h) (34/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 35
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <string>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( ") p
(server_game.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(World.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
(#include) K
( <fstream>) p n
(#include) K
( ") p
(snapshot_sender.h) str
(") p n
(#include) K
( ") p
(event_receiver.h) str
(") p n
() N
(#define) K
( MAX_QUEUE_SNAPSHOTS 256) p n
(#define) K
( MAP_YML_NAME ") p
(map.yml) str
(") p n
() N
(ServerGame::ServerGame\(std::vector<Client*> cl, std::string & map_path\) :) N
(clients\(cl\),) N
(map_path\(map_path\) {) N
(    std::vector<Client*>::const_iterator it;) N
(    ) S
(// Envio a todos los clientes el mapa del juego.) c n
(    std::fstream file_map\() p
(this) K
(->map_path, std::fstream::in | std::fstream::binar) p n
(y\);) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients.begin\(\); it != ) p
(this) K
(->clients.end\(\); it++\) {) p n
(        std::cout << ") S
(Iterando por clientes.) str
(" << std::endl;) p n
(        ) S
(if) K
( \(\(*it\)->getIdInMatch\(\) == 1\) ) p
(continue) K
(;) p n
(        std::cout << ") S
(Envi\303\241ndole el mapa al jugador nro. ) str
(" << \(*it\)->getIdInMatch\(\) << std) p n
(::endl;) N
(        \(*it\)->sendMapGame\(file_map\);) N
(    }) N
(    std::string map_yml_name\(MAP_YML_NAME\);) N
() S 8 T (std::string cmd_unzip_tar_gz = ") S
(tar -xf ) str
(" + map_path;) p n
() S 8 T (std::system\(cmd_unzip_tar_gz.c_str\(\)\);) N
(}) N
() N
(ServerGame::~ServerGame\() S
(void) k
(\) {) p n
(    removePreviousTempFiles\(\);) N
(}) N
() N
(void) k
( ServerGame::removePreviousTempFiles\() p
(void) k
(\) {) p n
() S 8 T (std::string cmd_rm_map_yml = ") S
(rm map.yml background.png ) str
(" + ) p
(this) K
(->map_path;) p n
() S 8 T (std::system\(cmd_rm_map_yml.c_str\(\)\);) N
(}) N
() N
(void) k
( ServerGame::startGame\() p
(void) k
(\) {) p n
(    std::cout << ") S
(Inicio de server game.) str
(" << std::endl;) p n
(    Queue<Snapshot*> snapshots\(MAX_QUEUE_SNAPSHOTS\);) N
(    std::cout << ") S
(Creando world.) str
(" << std::endl;) p n
(    std::string map_yml_name\(MAP_YML_NAME\);) N
(    World world\(map_yml_name, snapshots\);  ) N
(    std::cout << ") S
(Creando match.) str
(" << std::endl;  ) p n
(    Match match\(world.getWorms\(\), world.getTeams\(\), world.getWind\(\), gConfigurat) N
(ion.TURN_DURATION\);) N
(    std::cout << ") S
(Creando snapshot sender.) str
(" << std::endl;) p n
(    SnapshotSender snapshot_sender\(snapshots, match, ) S
(this) K
(->clients\);) p n
(    ) N
(    std::vector<Client*>::const_iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients.begin\(\); it != ) p
(this) K
(->clients.end\(\); it++\) {) p n
(        ) S
(this) K
(->event_receiver.push_back\() p
(new) K
( EventReceiver\(\(*it\), world, match, \(*) p n
(it\)->getIdInMatch\(\)\)\);) N
(    }) N
() N
(    world.start\(\);) N
(server_game.cpp) (Page 1/3) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    snapshot_sender.start\(\);) p n
(    ) S
(//Lanzo hilos de event receiver) c n
(    std::vector<EventReceiver*>::const_iterator it2;) p n
(    ) S
(for) K
( \(it2 = ) p
(this) K
(->event_receiver.begin\(\); it2 != ) p
(this) K
(->event_receiver.end\(\); ) p n
(it2++\) {) N
(        \(*it2\)->start\(\);) N
(    }) N
() N
(    std::cout << ") S
(Inicio de game loop de servidor.) str
(" << std::endl;) p n
(    gameLoop\(match, world\);) N
(    std::cout << ") S
(Fin de game loop de servidor.) str
(" << std::endl;) p n
() N
(    ) S
(if) K
( \(match.finished\(\)\) {) p n
(        std::cout << ") S
(La partida finaliz\303\263 y el ganador es ) str
(" << match.getWinner\(\) << std::en) p n
(dl;) N
(    }) N
() N
(    snapshot_sender.stop\(\);) N
(    ) S
(//Stops y joins de los hilos lanzados) c n
(    world.stop\(\);) p n
(    world.join\(\);) N
(    snapshot_sender.join\(\);) N
(    ) S
(for) K
( \(it2 = ) p
(this) K
(->event_receiver.begin\(\); it2 != ) p
(this) K
(->event_receiver.end\(\); ) p n
(it2++\) {) N
(        \(*it2\)->stop\(\);) N
(    }) N
(    ) S
(for) K
( \(it2 = ) p
(this) K
(->event_receiver.begin\(\); it2 != ) p
(this) K
(->event_receiver.end\(\); ) p n
(it2++\) {) N
(        \(*it2\)->join\(\);) N
(    }) N
() N
(    std::cout << ") S
(Fin de server game.) str
(" << std::endl;) p n
(}) N
() N
(void) k
( ServerGame::gameLoop\(Match & match, World & world\) {) p n
(    ) S
(unsigned) k
( ) p
(int) k
( timer = 0;) p n
(    match.start\(world.getTimeSeconds\(\)\);) N
(    ) S
(while) K
(\(!match.finished\(\)\) {) p n
(        timer = world.getTimeSeconds\(\);) N
(        match.setAliveProjectilesFlag\(world.hasAliveProjectiles\(\)\);) N
(        match.setMovingWormsFlag\(world.hasWormsMoving\(\)\);) N
(        match.setWormsAffectedByExplosion\(world.hasWormsAffectedByExplosion\(\)\);) N
(        match.setProtagonicWormGotHurt\(world.hasWormGotHurt\(match.getWormTurn\(ma) N
(tch.getTeamTurn\(\)\)\)\);) N
(        match.setProtagonicWormDidShoot\(world.hasWormShooted\(match.getWormTurn\(m) N
(atch.getTeamTurn\(\)\)\)\);) N
(        usleep\(16666\);) N
(        match.update\(world.getTimeSeconds\(\) - timer\);) N
(        cleanClients\(match\);) N
(    }) N
(}) N
() N
(void) k
( ServerGame::cleanClients\(Match & match\) {) p n
(    std::vector<EventReceiver*>::iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->event_receiver.begin\(\); it != ) p
(this) K
(->event_receiver.end\(\);\) {) p n
(        ) S
(if) K
( \(!\(*it\)->isRunning\(\)\) {) p n
(            \(*it\)->join\(\);) N
(            match.removePlayer\(\(*it\)->getId\(\)\);) N
(            it = ) S
(this) K
(->event_receiver.erase\(it\);) p n
(            std::cout << ") S
(Jugador removido por quit.) str
(" << std::endl;) p n
(        } ) S
(else) K
( {) p n
(            it++;) N
(server_game.cpp) (Page 2/3) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(server_game.cpp) (35/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3,1) 36
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        }) p n
(    }) N
(}) S
(server_game.cpp) (Page 3/3) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SERVER_GAME_H__) p n
(#define) K
( __SERVER_GAME_H__) p n
() N
(#include) K
( <vector>) p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
(#include) K
( ") p
(event_receiver.h) str
(") p n
() N
(class ServerGame {) N
(    private:) N
(        std::vector<Client*> clients;) N
(        ) S
(//std::map<size_t, Protocol*> protocols;) c n
(        ) p
(//YAML::Node mapNode;) c n
(        std::string map_path;) p n
(        std::vector<EventReceiver*> event_receiver;) N
(        ) S
(void) k
( gameLoop\(Match &, World &\);) p n
(        ) S
(void) k
( removePreviousTempFiles\() p
(void) k
(\);) p n
(        ) S
(void) k
( cleanClients\(Match &\);) p n
() N
(    public:) N
(        ServerGame\(std::vector<Client*>, std::string &\);) N
(        ~ServerGame\() S
(void) k
(\);) p n
(        ) S
(void) k
( startGame\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(server_game.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(server_game.cpp, server_game.h) (36/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 37
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SERVER_H__) p n
(#define) K
( __SERVER_H__) p n
(#include) K
( <string>) p n
(#include) K
( <map>) p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(socket.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( ") p
(lobby_attendant.h) str
(") p n
(#include) K
( ") p
(waiting_game.h) str
(") p n
(#include) K
( ") p
(protected_waiting_games.h) str
(") p n
() N
(#define) K
( MSG_CANT_OPEN_CFG_FILE ") p
(No se pudo abrir el archivo de configuracion.) str
(") p n
() N
(class Server : public Thread {) N
(    private:) N
(        SocketListener skt;) N
(        std::map<std::string, Client*> clients;) N
(        std::map<std::string, LobbyAttendant*> clients_in_lobby;) N
(        ProtectedWaitingGames protected_waiting_games;) N
(        std::map<std::string, WaitingGame*> waiting_games;) N
(        bool keep_running;) N
() N
(        bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(        std::string findFreeName\(std::string &\);) N
(        ) S
(void) k
( cleanLobby\() p
(void) k
(\);) p n
(        ) S
(void) k
( cleanQuitedClients\() p
(void) k
(\);) p n
(    public:) N
(        ) S
(void) k
( stop\() p
(void) k
(\);) p n
(        Server\(std::string & port\);) N
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ~Server\() S
(void) k
(\);) p n
(};) N
() N
(#endif) K
(server.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <string>) p n
(#include) K
( <vector>) p n
(#include) K
( ") p
(snapshot.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(World.h) str
(") p n
() N
(Snapshot::Snapshot\(\) {) N
(}) N
() N
(void) k
( Snapshot::updateTeams\(std::map<) p
(int) k
(, Team*> & teams\) {) p n
(    snapshot << YAML::BeginMap;) N
(    snapshot << YAML::Key<< ") S
(worms_teams) str
(";) p n
(    snapshot << YAML::Value << YAML::BeginMap;) N
() N
(    std::map<) S
(int) k
(, Team*>::const_iterator teamss_it;) p n
(    ) S
(for) K
( \(teamss_it = teams.begin\(\); teamss_it != teams.end\(\); ++teamss_it\) {) p n
(        ) N
(        ) S
(int) k
( team_id = teamss_it->second->getTeamId\(\);) p n
(        std::map<) S
(int) k
(, Worm*> & worms = teamss_it->second->getWorms\(\);) p n
(        std::map<) S
(int) k
(, Worm*>::const_iterator worm_it;) p n
() N
(        ) N
(        snapshot << YAML::Key << \() S
(int) k
(\) team_id;) p n
(        snapshot << YAML::Value << YAML::BeginMap;) N
(        snapshot << YAML::Key << ") S
(worms) str
(";) p n
(        snapshot << YAML::Value << YAML::BeginSeq;) N
(        ) N
(        ) S
(for) K
( \(worm_it = worms.begin\(\); worm_it != worms.end\(\); ++worm_it\) {) p n
(            Worm* worm = worm_it->second;) N
(            snapshot << YAML::BeginMap;) N
(            snapshot << YAML::Key << ") S
(id) str
(" << YAML::Value << worm->getId\(\);) p n
(            ) S
(//snapshot << YAML::Key << "name" << YAML::Value << worm->getName\(\);) c n
(            snapshot << YAML::Key << ") p
(health) str
(" << YAML::Value << worm->getHealth\(\)) p n
(;) N
(            snapshot << YAML::Key << ") S
(x) str
(" << YAML::Value << \() p
(int) k
(\)\(worm->getPosX\(\)) p n
( / gConfiguration.SCALING_FACTOR\);) N
(            snapshot << YAML::Key << ") S
(y) str
(" << YAML::Value << \() p
(int) k
(\)\(worm->getPosY\(\)) p n
( / gConfiguration.SCALING_FACTOR\);) N
(            snapshot << YAML::Key << ") S
(status) str
(";) p n
(            snapshot << YAML::Value << YAML::BeginMap;) N
(            snapshot << YAML::Key << ") S
(grounded) str
(" << YAML::Value << \() p
(int) k
(\) worm->isG) p n
(rounded\(\);) N
(            snapshot << YAML::Key << ") S
(falling) str
(" << YAML::Value << \() p
(int) k
(\) worm->isFal) p n
(ling\(\);) N
(            snapshot << YAML::Key << ") S
(mirrored) str
(" << YAML::Value << \() p
(int) k
(\) worm->isMi) p n
(rrored\(\);) N
(            snapshot << YAML::Key << ") S
(walking) str
(" << YAML::Value << \() p
(int) k
(\) worm->isWa) p n
(lking\(\);) N
(            snapshot << YAML::Key << ") S
(inclination) str
(" << YAML::Value << \() p
(int) k
(\) worm->ge) p n
(tInclination\(\);) N
(            snapshot << YAML::Key << ") S
(affected_by_explosion) str
(" << YAML::Value << \() p
(int) k
(\) ) p n
(worm->isAffectedByExplosion\(\);) N
(            snapshot << YAML::Key << ") S
(angle_direction) str
(" << YAML::Value <<    worm->ge) p n
(tDirectionAngle\(\);) N
(            snapshot << YAML::EndMap;) N
(            snapshot << YAML::EndMap;) N
(        }) N
(        snapshot << YAML::EndSeq;) N
() N
(        std::map<weapon_t, ) S
(int) k
(> inventory = teamss_it->second->getInventory\(\);) p n
(        std::map<weapon_t, ) S
(int) k
(>::const_iterator inventory_it;) p n
() N
(snapshot.cpp) (Page 1/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(server.h, snapshot.cpp) (37/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 38
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        snapshot << YAML::Key << ") p
(inventory) str
(";) p n
(        snapshot << YAML::Value << YAML::BeginMap;) N
() N
(    ) S
(for) K
( \(inventory_it = inventory.begin\(\); inventory_it != inventory.end\(\); ++in) p n
(ventory_it\) {) N
(        snapshot << YAML::Key << inventory_it->first;) N
(        snapshot << YAML::Value <<YAML::BeginMap;) N
(        snapshot << YAML::Key << ") S
(supplies) str
(" << YAML::Value << inventory_it->second) p n
(;) N
(        snapshot << YAML::EndMap;) N
(    }) N
(    snapshot << YAML::EndMap;) N
(    snapshot << YAML::EndMap;) N
(    }) N
() N
(    snapshot << YAML::EndMap;) N
(}) N
() N
(void) k
( Snapshot::updateProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\) {) p n
(    snapshot << YAML::Key << ") S
(projectiles) str
(";) p n
(    snapshot << YAML::Value << YAML::BeginSeq;) N
() N
(    ) S
(for) K
( \(std::map <) p
(int) k
(, Weapon*>::iterator it = weapons.begin\(\); it != weapons.e) p n
(nd\(\); ++it\) {) N
(        Weapon* weapon = it->second;) N
(        snapshot << YAML::BeginMap;) N
(        snapshot << YAML::Key << ") S
(id) str
(" << YAML::Value << weapon->getId\(\);) p n
(        snapshot << YAML::Key << ") S
(type) str
(" << YAML::Value << std::to_string\(weapon->) p n
(getType\(\)\);        ) N
(        snapshot << YAML::Key << ") S
(x) str
(" << YAML::Value << \() p
(int) k
(\) \(weapon->getPosX\(\) ) p n
(/  gConfiguration.SCALING_FACTOR\);) N
(        snapshot << YAML::Key << ") S
(y) str
(" << YAML::Value << \() p
(int) k
(\) \(weapon->getPosY\(\) ) p n
(/  gConfiguration.SCALING_FACTOR\);) N
(        snapshot << YAML::Key << ") S
(countdown) str
(" << YAML::Value << weapon->getCountdo) p n
(wn\(\);) N
(        snapshot << YAML::Key << ") S
(exploded) str
(" << YAML::Value << \() p
(int) k
(\) weapon->hasEx) p n
(ploded\(\);) N
(        snapshot << YAML::Key << ") S
(blast_radius) str
(" << YAML::Value << \() p
(int) k
(\) \(weapon->ge) p n
(tBlastRadius\(\) / gConfiguration.SCALING_FACTOR\);) N
(        snapshot << YAML::Key << ") S
(moving) str
(" << YAML::Value << \() p
(int) k
(\) \(weapon->isMov) p n
(ing\(\)\);) N
(        snapshot << YAML::Key << ") S
(angle_direction) str
(" << YAML::Value << weapon->getDire) p n
(ctionAngle\(\);) N
(        snapshot << YAML::EndMap;) N
(    }) N
(    snapshot << YAML::EndSeq;) N
(}) N
() N
(void) k
( Snapshot::updateGameStatus\(Match & match\) {) p n
(    snapshot << YAML::Key << ") S
(game_status) str
(";) p n
(    snapshot << YAML::Value << YAML::BeginMap;) N
(    snapshot << YAML::Key << ") S
(teams_health) str
(" << YAML::Value << match.getTeamInfo\(\);) p n
(    snapshot << YAML::Key << ") S
(wind_force) str
(" << YAML::Value << match.getWindForce\(\);) p n
(    snapshot << YAML::Key << ") S
(team_turn) str
(" << YAML::Value << match.getTeamTurn\(\);) p n
(    snapshot << YAML::Key << ") S
(protagonic_worm) str
(" << YAML::Value << match.getWormTurn\() p n
(match.getTeamTurn\(\)\);) N
(    snapshot << YAML::Key << ") S
(turn_timeleft) str
(" << YAML::Value << std::to_string\(match.) p n
(getTurnTimeleft\(\)\);) N
(    snapshot << YAML::Key << ") S
(finished) str
(" << YAML::Value << std::to_string\(match.fin) p n
(ished\(\)\);) N
(    snapshot << YAML::EndMap;) N
(}) N
(snapshot.cpp) (Page 2/3) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(const) K
( ) p
(char) k
(* Snapshot::getSnapshot\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->snapshot.c_str\(\);) p n
(}) N
() N
(void) k
( Snapshot::updateGameStatusLastSnapshot\(Match & match\) {) p n
(    snapshot << YAML::Key << ") S
(game_status) str
(";) p n
(    snapshot << YAML::Value << YAML::BeginMap;) N
(    snapshot << YAML::Key << ") S
(teams_health) str
(" << YAML::Value << match.getTeamInfo\(\);) p n
(    snapshot << YAML::Key << ") S
(wind_force) str
(" << YAML::Value << match.getWindForce\(\);) p n
(    snapshot << YAML::Key << ") S
(protagonic_worm) str
(" << YAML::Value << match.getWormTurn\() p n
(match.getTeamTurn\(\)\);) N
(    snapshot << YAML::Key << ") S
(turn_timeleft) str
(" << YAML::Value << std::to_string\(match.) p n
(getTurnTimeleft\(\)\);) N
(    snapshot << YAML::Key << ") S
(finished) str
(" << YAML::Value << std::to_string\(1\);) p n
(    snapshot << YAML::EndMap;) N
(}) S
(snapshot.cpp) (Page 3/3) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(snapshot.cpp) (38/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 39
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __SNAPSHOT_H__) p n
(#define) K
( __SNAPSHOT_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
() N
(class Snapshot {) N
(    private:) N
(        YAML::Emitter snapshot;) N
(    public:) N
(        Snapshot\(\);) N
(        ) S
(void) k
( updateTeams\(std::map<) p
(int) k
(, Team*> & teams\);) p n
(        ) S
(void) k
( updateProjectiles\(std::map<) p
(int) k
(, Weapon*> &\);) p n
(        ) S
(void) k
( updateGameStatus\(Match &\);) p n
(        ) S
(void) k
( updateGameStatusLastSnapshot\(Match &\);) p n
(        ) S
(const) K
( ) p
(char) k
(* getSnapshot\(\);   ) p n
(        ) S
(void) k
( updateGameStatusLastSnapshot\(\);) p n
(};) N
() N
(#endif) K
(snapshot.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(snapshot.h) str
(") p n
(#include) K
( ") p
(snapshot_sender.h) str
(") p n
(#include) K
( ") p
(socket_error.h) str
(") p n
(#include) K
( <iostream>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( ") p
(client.h) str
(") p n
() N
(SnapshotSender::SnapshotSender\(Queue<Snapshot*> & snapshots, Match & m, std::vec) N
(tor<Client*> cl\) : ) N
(snapshots\(snapshots\) ,) N
(match\(m\),) N
(clients\(cl\) {) N
(    ) S
(this) K
(->keep_running = ) p
(true) k
(;) p n
(}) N
() N
(SnapshotSender::~SnapshotSender\(\) {) N
(}) N
() N
(void) k
( SnapshotSender::run\(\) {) p n
(    ) S
(while) K
( \(keep_running\) {) p n
(        usleep\(16666\);) N
(        Snapshot* snapshot = ) S
(this) K
(->snapshots.pop\(\);) p n
(        ) S
(if) K
( \(keep_running && snapshot\) {) p n
(            sendSnapshot\(snapshot\);) N
(        }) N
(    }) N
(    std::cout << ") S
(Sacando la ultima foto con partida finished.) str
(" << std::endl;) p n
(    Snapshot* snapshot = ) S
(this) K
(->snapshots.pop\(\);) p n
(    sendLastSnapshot\(snapshot\);) N
(}) N
() N
(void) k
( SnapshotSender::sendSnapshot\(Snapshot * snapshot\) {) p n
(    snapshot->updateGameStatus\() S
(this) K
(->match\);) p n
(    std::stringstream ss;) N
(    ss << snapshot->getSnapshot\(\);) N
(    std::vector<Client*>::const_iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients.begin\(\); it != ) p
(this) K
(->clients.end\(\); it++\) {) p n
(        \(*it\)->sendSnapShot\(ss\);) N
(    }) N
(    ) N
(    ) S
(delete) K
( snapshot;   ) p n
(}) N
() N
(void) k
( SnapshotSender::sendLastSnapshot\(Snapshot * last_snapshot\) {) p n
(    last_snapshot->updateGameStatusLastSnapshot\() S
(this) K
(->match\);) p n
(    std::stringstream ss;) N
(    ss << last_snapshot->getSnapshot\(\);) N
(    std::cout << ss.str\(\) << std::endl;) N
(    std::vector<Client*>::const_iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->clients.begin\(\); it != ) p
(this) K
(->clients.end\(\); it++\) {) p n
(        std::cout << ") S
(Enviando ultima snapshot a cliente.) str
(" << std::endl;) p n
(        \(*it\)->sendSnapShot\(ss\);) N
(    }) N
(    ) N
(    ) S
(delete) K
( last_snapshot;  ) p n
(}) N
() N
(size_t SnapshotSender::getId\() S
(void) k
(\) ) p
(const) K
({) p n
(    ) S
(return) K
( 0;) p n
(}) N
() N
(bool) k
( SnapshotSender::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(snapshot_sender.cpp) (Page 1/2) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(snapshot.h, snapshot_sender.cpp) (39/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 40
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( ) p
(this) K
(->keep_running;) p n
(}) N
() N
(void) k
( SnapshotSender::stop\(\) {) p n
(    ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(}) N
(snapshot_sender.cpp) (Page 2/2) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( SNAPSHOT_SENDER_H) p n
(#define) K
( SNAPSHOT_SENDER_H) p n
() N
(#include) K
( ") p
(snapshot.h) str
(") p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( <vector>) p n
(#include) K
( <string>) p n
(#include) K
( ") p
(protocol.h) str
(") p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(match.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
() N
(class SnapshotSender : public Thread {) N
(    private:) N
(        Queue<Snapshot*> & snapshots;) N
(        Match & match;) N
(        std::vector<Client*> clients;) N
(        bool keep_running;) N
() N
(        virtual bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(        virtual size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(        ) S
(void) k
( sendSnapshot\(Snapshot *\);) p n
(        ) S
(void) k
( sendLastSnapshot\(Snapshot *\);) p n
() N
(    public:) N
(        SnapshotSender\(Queue<Snapshot*> &, Match &, std::vector<Client*>\);) N
(        ~SnapshotSender\(\);) N
(        virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(        ) S
(void) k
( stop\(\);) p n
(};) N
() N
(#endif) K n
(snapshot_sender.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(snapshot_sender.cpp, snapshot_sender.h) (40/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 41
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <iostream>) p n
(#include) K
( <map>) p n
(#include) K
( ") p
(team.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(Team::Team\() S
(int) k
( id\) {) p n
(    ) S
(this) K
(->team_id = id;) p n
(    ) S
(this) K
(->member_qty = 0;) p n
(}) N
() N
(void) k
( Team::addMember\(Worm * worm\) {) p n
(    ) S
(this) K
(->worms[worm->getId\(\)] = worm;) p n
(    ) S
(this) K
(->member_qty++;) p n
(}) N
() N
(void) k
( Team::print\() p
(void) k
(\) ) p
(const) K
( {) p n
(    std::map<) S
(int) k
(, Worm*>::const_iterator it;) p n
(    size_t i = 1;) N
(    std::cout << ") S
(*********************) str
(" << std::endl;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
(        std::cout << ") S
(Equipo ID: ) str
(" << ) p
(this) K
(->team_id << std::endl;) p n
(        std::cout << ") S
(Miembro ) str
(" << i++ << std::endl;) p n
(        std::cout << ") S
(Nombre: ) str
(" << it->second->getName\(\) << std::endl;) p n
(        std::cout << ") S
(Vida: ) str
(" << it->second->getHealth\(\) << std::endl;) p n
(        std::cout << ") S
(* * * * * * * * * * *) str
(" << std::endl; ) p n
(    }) N
(    std::cout << ") S
(*********************) str
(" << std::endl;) p n
(}) N
() N
(void) k
( Team::initializeInventory\(YAML::Node inventory_node\) {) p n
(    YAML::Node::const_iterator it;) N
(    ) S
(for) K
( \(it = inventory_node.begin\(\); it != inventory_node.end\(\); it++\) {) p n
(        weapon_t weapon_id = \(weapon_t\) it->first.as<) S
(int) k
(>\(\);) p n
(        ) S
(int) k
( supplies = it->second[") p
(supplies) str
("].as<) p
(int) k
(>\(\);) p n
(        ) S
(this) K
(->inventory.insert\(std::pair<weapon_t,) p
(int) k
(>\(weapon_id, supplies\)\);) p n
(    }) N
(}) N
() N
(std::vector<) S
(int) k
(> Team::getWormsID\() p
(void) k
(\) {) p n
(    std::vector<) S
(int) k
(> ids;) p n
(    std::map<) S
(int) k
(, Worm*>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
(        ids.push_back\(it->second->getId\(\)\);) N
(    }) N
(    ) S
(return) K
( ids;) p n
(}) N
() N
(int) k
( Team::getTeamId\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->team_id;) p n
(}) N
() N
(Team::~Team\() S
(void) k
(\) {) p n
(}) N
() N
(bool) k
( Team::haveAliveMember\() p
(void) k
(\) {) p n
(    std::map<) S
(int) k
(, Worm*>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
(        ) S
(if) K
( \(!it->second->isDead\(\)\) {) p n
(            ) S
(return) K
( ) p
(true) k
(;) p n
(        }) N
(    }) N
(team.cpp) (Page 1/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( ) p
(false) k
(;) p n
(}) N
() N
(int) k
( Team::getTotalLife\() p
(void) k
(\) {) p n
(    ) S
(int) k
( counter = 0;) p n
(    std::map<) S
(int) k
(, Worm*>::const_iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it++\) {) p n
(        counter += it->second->getHealth\(\);) N
(    }) N
(    ) S
(return) K
( counter;) p n
(}) N
() N
(std::map<) S
(int) k
(, Worm*> & Team::getWorms\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->worms;) p n
(}) N
() N
(std::map<weapon_t, ) S
(int) k
(> & Team::getInventory\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->inventory;) p n
(}) N
() N
(void) k
( Team::killAll\() p
(void) k
(\) {) p n
(    std::map<) S
(int) k
(, Worm*>::iterator it;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms.end\(\); it ++\) {) p n
(        it->second->kill\(\);) N
(    }) N
(}) N
() N
(bool) k
( Team::hasSupplies\(weapon_t weapon_id\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->inventory[weapon_id] > 0;) p n
(}) N
() N
(void) k
( Team::reduceSupplie\(weapon_t weapon_id\) {) p n
(    ) S
(this) K
(->inventory[weapon_id] -= 1;) p n
(}) S
(team.cpp) (Page 2/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(team.cpp) (41/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 42
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __TEAM_H__) p n
(#define) K
( __TEAM_H__) p n
() N
(#include) K
( <map>) p n
(#include) K
( <vector>) p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(class Team {) N
(    private:) N
(        ) S
(int) k
( team_id;) p n
(        ) S
(int) k
( member_qty;) p n
(        std::map<) S
(int) k
(, Worm*> worms;) p n
(        std::map<weapon_t, ) S
(int) k
(> inventory;) p n
() N
(    public:) N
(        Team\() S
(int) k
(\);) p n
(        ~Team\() S
(void) k
(\);) p n
(        std::map<) S
(int) k
(, Worm*>  & getWorms\(\);) p n
(        ) S
(void) k
( addMember\(Worm *\);) p n
(        ) S
(void) k
( initializeInventory\(YAML::Node inventory_node\);) p n
(        std::map<weapon_t, ) S
(int) k
(> & getInventory\(\);) p n
(        std::vector<) S
(int) k
(> getWormsID\() p
(void) k
(\);) p n
(        ) S
(void) k
( print\() p
(void) k
(\) ) p
(const) K
(;) p n
(        ) S
(int) k
( getTeamId\() p
(void) k
(\);) p n
(        bool haveAliveMember\() S
(void) k
(\);) p n
(        ) S
(int) k
( getTotalLife\() p
(void) k
(\);) p n
(        ) S
(void) k
( killAll\() p
(void) k
(\);) p n
(        bool hasSupplies\(weapon_t\);) N
(        ) S
(void) k
( reduceSupplie\(weapon_t\);) p n
(};) N
() N
(#endif) K n
(team.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Teleportation.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(Teleportation::Teleportation\(Worm* worm, ) S
(float) k
( posX, ) p
(float) k
( posY\) :) p n
(posX\(posX\),) N
(posY\(posY\) {) N
(    ) S
(this) K
(->worm = worm;) p n
() N
(}) N
(void) k
( Teleportation::teleport\(\) {) p n
(    ) S
(this) K
(->worm->setPosition\(posX, posY\);) p n
(    ) S
(//this->worm->addFootContact\(\);) c n
(}) p n
(Teleportation.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(team.h, Teleportation.cpp) (42/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 43
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( TELEPORT_H) p n
(#define) K
( TELEPORT_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(class Teleportation {) N
(private:) N
(    Worm* worm;) N
(    ) S
(float) k
( posX;) p n
(    ) S
(float) k
( posY;) p n
() N
(public:) N
(    Teleportation\(Worm* worm, ) S
(float) k
( posX, ) p
(float) k
( posY\);) p n
(    ) S
(void) k
( teleport\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(Teleportation.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <string>) p n
(#include) K
( ") p
(waiting_game.h) str
(") p n
(#include) K
( ") p
(client.h) str
(") p n
(#include) K
( <unistd.h>) p n
(#include) K
( ") p
(server_game.h) str
(") p n
() N
(WaitingGame::WaitingGame\(Client * cn, std::string & mn, size_t pq\) {) N
(    ) S
(this) K
(->members.push_back\(cn\);) p n
(    ) S
(this) K
(->match_name = mn;) p n
(    ) S
(this) K
(->players_qty = pq;) p n
(    ) S
(this) K
(->joined_players = 1;) p n
(    ) S
(this) K
(->finished = ) p
(false) k
(;) p n
(}) N
() N
(void) k
( WaitingGame::addPlayer\(Client * new_member\) {) p n
(    ) S
(this) K
(->members.push_back\(new_member\);) p n
(    ) S
(this) K
(->joined_players++;) p n
(}) N
() N
(std::string WaitingGame::getCreatorName\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->members.front\(\)->getPlayerName\(\);) p n
(}) N
() N
(std::string WaitingGame::getMatchName\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->match_name;) p n
(}) N
() N
(size_t WaitingGame::getPlayersQty\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->players_qty;) p n
(}) N
() N
(bool) k
( WaitingGame::hasFreeSlots\() p
(void) k
(\) {) p n
(    ) S
(return) K
( \() p
(this) K
(->players_qty - ) p
(this) K
(->joined_players\) > 0;) p n
(}) N
() N
(size_t WaitingGame::getJoinedPlayersQty\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->joined_players;) p n
(}) N
() N
(void) k
( WaitingGame::rmPlayer\(std::string & player_name\) {) p n
(    std::vector<Client *>::iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->members.begin\(\); it != ) p
(this) K
(->members.end\(\); it++\) {) p n
(        ) S
(if) K
( \(\(*it\)->getPlayerName\(\) == player_name\) {) p n
(            ) S
(this) K
(->members.erase\(it\);) p n
(            ) S
(this) K
(->joined_players--;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
(}) N
() N
(std::vector<std::string> WaitingGame::getWaitingPlayersName\() S
(void) k
(\) {) p n
(    std::vector<std::string> players_names;) N
(    std::vector<Client *>::iterator it;) N
(    ) S
(for) K
( \(it = ) p
(this) K
(->members.begin\(\); it != ) p
(this) K
(->members.end\(\); it++\) {) p n
(        players_names.push_back\(\(*it\)->getPlayerName\(\)\);) N
(    }    ) N
(    ) S
(return) K
( players_names;) p n
(}) N
() N
(void) k
( WaitingGame::notifyAllStartGame\() p
(void) k
(\) {) p n
(    std::vector<Client*>::iterator it;) N
(    std::string msg = ") S
(started) str
(";) p n
(waiting_game.cpp) (Page 1/2) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(Teleportation.h, waiting_game.cpp) (43/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 44
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    size_t team_id = 1;) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->members.begin\(\); it != ) p
(this) K
(->members.end\(\); it++\) {) p n
(        std::string tid = std::to_string\(team_id\);) N
(        \(*it\)->setIdInMatch\(team_id\);) N
(        \(*it\)->sendGameStart\(1, msg, tid\);) N
(        team_id++;) N
(    }) N
(}) N
() N
(void) k
( WaitingGame::notifyAllCancellGame\() p
(void) k
(\) {) p n
(    std::vector<Client*>::iterator it;) N
(    std::string msg = ") S
(aborted) str
(";) p n
(    ) S
(for) K
( \(it = ) p
(this) K
(->members.begin\(\); it != ) p
(this) K
(->members.end\(\); it++\) {) p n
(        ) S
(if) K
( \(\(*it\)->getPlayerName\(\) == ) p
(this) K
(->getCreatorName\(\)\) ) p
(continue) K
(;) p n
(        \(*it\)->sendResponse\(0, msg\);) N
(    } ) N
(}) N
() N
(void) k
( WaitingGame::startGame\(std::string & map_path\) {) p n
(    std::unique_lock<std::mutex> lock\() S
(this) K
(->mutex\);) p n
(    std::cout << ") S
(Iniciando partida.) str
(" << std::endl;) p n
(    ServerGame new_server_game\(members, map_path\);) N
(    new_server_game.startGame\(\);) N
(    ) S
(this) K
(->finished = ) p
(true) k
(;) p n
(    ) S
(this) K
(->cv.notify_all\(\);) p n
(    std::cout << ") S
(Partida finalizada) str
(" << std::endl;) p n
(}) N
() N
(bool) k
( WaitingGame::hasFinished\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->finished;) p n
(}) N
() N
(void) k
( WaitingGame::waitUntilFinish\() p
(void) k
(\) {) p n
(    std::cout << ") S
(Esperando a que termine la partida.) str
(" << std::endl;) p n
(    std::unique_lock<std::mutex> lock\() S
(this) K
(->mutex\);) p n
(    ) S
(while) K
( \(!) p
(this) K
(->finished\) {) p n
(        ) S
(this) K
(->cv.wait\(lock\);) p n
(    }) N
(    std::cout << ") S
(La partida termino, ya no esperar\303\251 mas.) str
(" << std::endl;) p n
(}) S
(waiting_game.cpp) (Page 2/2) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( __WAITING_GAME_H__) p n
(#define) K
( __WAITING_GAME_H__) p n
() N
(#include) K
( <string>) p n
(#include) K
( <vector>) p n
(#include) K
( <mutex>) p n
(#include) K
( <condition_variable>) p n
(#include) K
( ") p
(client.h) str
(") p n
() N
(class WaitingGame {) N
(    private:) N
(        std::vector<Client*> members;) N
(        std::string match_name;) N
(        size_t players_qty;) N
(        size_t joined_players;) N
(        std::mutex mutex;) N
(        std::condition_variable cv;) N
(        bool finished;) N
() N
(    public:) N
(        WaitingGame\(Client *, std::string &, size_t\);) N
(        std::string getCreatorName\() S
(void) k
(\);) p n
(        std::string getMatchName\() S
(void) k
(\);) p n
(        size_t getPlayersQty\() S
(void) k
(\);) p n
(        size_t getJoinedPlayersQty\() S
(void) k
(\);) p n
(        bool hasFreeSlots\() S
(void) k
(\);) p n
(        ) S
(void) k
( addPlayer\(Client *\);) p n
(        ) S
(void) k
( rmPlayer\(std::string &\);) p n
(        std::vector<std::string> getWaitingPlayersName\() S
(void) k
(\);) p n
(        ) S
(void) k
( notifyAllStartGame\() p
(void) k
(\);) p n
(        ) S
(void) k
( notifyAllCancellGame\() p
(void) k
(\);) p n
(        ) S
(void) k
( startGame\(std::string &\);) p n
(        bool hasFinished\() S
(void) k
(\);) p n
(        ) S
(void) k
( waitUntilFinish\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(waiting_game.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(waiting_game.cpp, waiting_game.h) (44/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 45
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Wall.h) str
(") p n
() N
(Wall::Wall\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( width, ) p
(float) k
( height\) :) p n
(world\(world\) {) N
(    b2BodyDef wallDef;) N
(    wallDef.type = b2_staticBody;) N
(    wallDef.position.Set\(posX, posY\);) N
(    wallDef.allowSleep = ) S
(true) k
(;) p n
(    b2Body* body = world.CreateBody\(&wallDef\);) N
(    body->SetAwake\() S
(false) k
(\);) p n
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    b2PolygonShape wallShape;) N
(    wallShape.SetAsBox\(width/2, height/2\);) N
() N
(    b2FixtureDef wallFixture;) N
(    wallFixture.shape = &wallShape;) N
(    wallFixture.density = 1;) N
(    wallFixture.friction = 0.3;) N
(    wallFixture.filter.categoryBits = STRUCTURE_PHYSIC;) N
(    wallFixture.filter.maskBits = WORM_PHYSIC;) N
() N
(    body->CreateFixture\(&wallFixture\);) N
(    ) S
(this) K
(->body = body;) p n
(}) N
() N
(Wall::~Wall\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Wall::update\(\) {) p n
(    ) S
(this) K
(->body->SetAwake\() p
(false) k
(\);) p n
(}) N
() N
(float) k
( Wall::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Wall::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) S
(Wall.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WALL_H) p n
(#define) K
( WALL_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( ") p
(PhysicEntity.h) str
(") p n
() N
(class Wall : public Entity {) N
(private:) N
(    b2World& world;) N
(    b2Body* body;) N
(public:) N
(    Wall\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( width, ) p
(float) k
( height\);) p n
(    virtual ~Wall\(\);) N
(    entity_t getEntityType\(\) {) S
(return) K
( WALL;}) p n
(    ) S
(void) k
( update\() p
(void) k
(\);) p n
(    ) S
(float) k
( getPosX\() p
(void) k
(\);) p n
(    ) S
(float) k
( getPosY\() p
(void) k
(\);) p n
(};) N
() N
(#endif) K
(Wall.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Wall.cpp, Wall.h) (45/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 46
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Water.h) str
(") p n
() N
(Water::Water\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( width, ) p
(float) k
( height\) ) p n
(:) N
(world\(world\) {) N
(    b2BodyDef waterDef;) N
(    waterDef.type = b2_staticBody;) N
(    waterDef.position.Set\(posX, posY\);) N
(    waterDef.allowSleep = ) S
(true) k
(;) p n
(    b2Body* body = world.CreateBody\(&waterDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
(    body->SetAwake\() S
(false) k
(\);) p n
(    b2PolygonShape waterShape;) N
(    waterShape.SetAsBox\(width/2, height/2\);) N
() N
(    b2FixtureDef waterFixture;) N
(    waterFixture.shape = &waterShape;) N
(    waterFixture.density = 1;) N
(    waterFixture.friction = 1;) N
(    waterFixture.restitution = 0;) N
(    waterFixture.filter.categoryBits = WATER_PHYSIC;) N
(    waterFixture.filter.maskBits = WORM_PHYSIC;) N
(    body->CreateFixture\(&waterFixture\);) N
() N
(    ) S
(this) K
(->body = body;) p n
(}) N
() N
(Water::~Water\(\) {) N
(    ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);) p n
(}) N
() N
(void) k
( Water::update\(\) {) p n
(    ) S
(this) K
(->body->SetAwake\() p
(false) k
(\);) p n
(}) N
() N
(float) k
( Water::getPosX\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Water::getPosY\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) S
(Water.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WATER_H) p n
(#define) K
( WATER_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( ") p
(PhysicEntity.h) str
(") p n
() N
(class Water : public Entity{) N
(private:) N
(    b2World& world;) N
(    b2Body* body;) N
() N
(public:) N
(    Water\(b2World& world, ) S
(float) k
( posX, ) p
(float) k
( posY, ) p
(float) k
( width, ) p
(float) k
( height\);) p n
(    virtual ~Water\(\);) N
(    entity_t getEntityType\(\) {) S
(return) K
( WATER;}) p n
(    ) S
(void) k
( update\() p
(void) k
(\);) p n
(    ) S
(float) k
( getPosX\(\);) p n
(    ) S
(float) k
( getPosY\(\);) p n
(};) N
() N
(#endif) K
(Water.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Water.cpp, Water.h) (46/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 47
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Weapon.h) str
(") p n
() N
(Weapon::Weapon\(weapon_t t\) {) N
(    ) S
(this) K
(->type = t;) p n
(    ) S
(this) K
(->countdown = -1;) p n
(    ) S
(this) K
(->exploded = ) p
(false) k
(;) p n
(    ) S
(this) K
(->direction_angle = 0;) p n
(    ) S
(this) K
(->wind_affected = ) p
(false) k
(;) p n
(}) N
() N
(Weapon::~Weapon\(\) {) N
(}) N
() N
(bool) k
( Weapon::hasExploded\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->exploded;) p n
(}) N
() N
(int) k
( Weapon::getCountdown\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->countdown;) p n
(}) N
() N
(int) k
( Weapon::getId\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->id;) p n
(}) N
() N
(weapon_t Weapon::getType\() S
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->type;) p n
(}) N
() N
(int) k
( Weapon::getBlastRadius\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->blast_radius;) p n
(}) N
() N
(int) k
( Weapon::getDirectionAngle\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->direction_angle;) p n
(}) N
() N
(int) k
( Weapon::addProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\) {) p n
(    ) S
(return) K
( 0;) p n
(}) S
(Weapon.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WEAPON_H) p n
(#define) K
( WEAPON_H) p n
() N
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( <map>) p n
() N
(class Weapon : public Entity {) N
(public:) N
(    virtual ~Weapon\(\);) N
(    virtual ) S
(void) k
( update\() p
(int) k
( current_time, ) p
(int) k
( wind_force\) = 0;) p n
(    virtual ) S
(void) k
( explode\() p
(void) k
(\) = 0;) p n
(    virtual weapon_t getType\() S
(void) k
(\);) p n
(    virtual bool isMoving\(\) = 0;) N
(    virtual ) S
(int) k
( getDirectionAngle\(\);) p n
(    virtual ) S
(int) k
( addProjectiles\(std::map<) p
(int) k
(, Weapon*> & weapons\);) p n
(    bool hasExploded\() S
(void) k
(\);) p n
(    virtual ) S
(int) k
( getCountdown\(\);) p n
(    ) S
(int) k
( getBlastRadius\(\);) p n
(    virtual ) S
(int) k
( getId\(\);) p n
(protected:) N
(    explicit Weapon\(weapon_t type\);) N
(    weapon_t type;) N
(    bool exploded;) N
(    bool wind_affected;) N
(    ) S
(int) k
( blast_radius;) p n
(    ) S
(int) k
( blast_power;) p n
(    ) S
(int) k
( countdown;) p n
(    ) S
(int) k
( id;) p n
(    ) S
(int) k
( direction_angle;) p n
(};) N
() N
(#endif) K
(Weapon.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Weapon.cpp, Weapon.h) (47/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 48
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(WeaponManager.h) str
(") p n
() N
(WeaponManager::WeaponManager\(std::map<) S
(int) k
(, Worm*> & worms, std::map<) p
(int) k
(, Team*> ) p n
(& teams, WorldPhysic & world\) :) N
(worms\(worms\),) N
(world\(world\),) N
(teams\(teams\) {) N
(    ) S
(this) K
(->weaponCounter = 0;) p n
(}) N
() N
(void) k
( WeaponManager::manageShoot\(Event & event, size_t id, ) p
(unsigned) k
( ) p
(int) k
( currentTi) p n
(me\) {) N
(    ) S
(if) K
( \(\() p
(this) K
(->weapons.size\(\) != 0\) || ) p
(this) K
(->worms[id]->didShootInTurn\(\)\) {) p n
(        ) S
(return) K
(;) p n
(    }) N
(    ) N
(    ) S
(const) K
( YAML::Node & nodeEvent = event.getNode\(\);) p n
(    weapon_t weapon = \(weapon_t\) nodeEvent[") S
(event) str
("][") p
(weapon) str
("].as<) p
(int) k
(>\(\);) p n
() N
(    ) S
(if) K
( \(!) p
(this) K
(->teams[) p
(this) K
(->worms[id]->getTeam\(\)]->hasSupplies\(weapon\)\) {) p n
(        std::cout << ") S
(Disparo ignorado, no quedan supplies.) str
(" << std::endl;) p n
(        ) S
(return) K
(;) p n
(    }) N
() N
(    Weapon* newWeapon = ) S
(NULL) K
(;) p n
() N
(    ) S
(if) K
( \(weapon == w_dynamite\) {) p n
(        newWeapon = ) S
(new) K
( Dynamite\() p
(this) K
(->weaponCounter,) p n
(        ) S
(this) K
(->world.getWorld\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosX\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosY\(\), ) p n
(        nodeEvent[") S
(event) str
("][") p
(countdown) str
("].as<) p
(int) k
(>\(\), ) p n
(        currentTime) N
(        \);            ) N
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_green_grenade || weapon == w_holy_grenade || weapon =) p n
(= w_banana\) {) N
(        newWeapon = ) S
(new) K
( Grenade\() p n
(        ) S
(this) K
(->weaponCounter, ) p n
(        ) S
(this) K
(->world.getWorld\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosX\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosY\(\), ) p n
(        ) S
(this) K
(->worms[id]->isMirrored\(\) , ) p n
(        nodeEvent[") S
(event) str
("][") p
(sight_angle) str
("].as<) p
(int) k
(>\(\) , ) p n
(        nodeEvent[") S
(event) str
("][") p
(power) str
("].as<) p
(int) k
(>\(\), ) p n
(        nodeEvent[") S
(event) str
("][") p
(countdown) str
("].as<) p
(int) k
(>\(\), ) p n
(        currentTime, ) N
(        weapon) N
(        \);) N
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_bazooka\) {) p n
(        newWeapon = ) S
(new) K
( Bazooka\() p
(this) K
(->weaponCounter, ) p n
(        ) S
(this) K
(->world.getWorld\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosX\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosY\(\),) p n
(        ) S
(this) K
(->worms[id]->isMirrored\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(sight_angle) str
("].as<) p
(int) k
(>\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(power) str
("].as<) p
(int) k
(>\(\),) p n
(        weapon) N
(        \);) N
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_air_strike\) {) p n
(        AirStrike air_strike\() S
(this) K
(->weaponCounter,) p n
(        ) S
(this) K
(->world.getWorld\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(remote_control_x) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALING_FAC) p n
(WeaponManager.cpp) (Page 1/3) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(TOR,) p n
(        1) N
(        \);) N
() N
(        std::vector<Missil*> missils = air_strike.getMissils\(\);) N
(        ) S
(for) K
( \(std::vector<Missil*>::iterator it = missils.begin\(\); it != missils.) p n
(end\(\); ++it\) {) N
(            ) S
(this) K
(->weapons.insert\(std::pair<) p
(int) k
(, Weapon*>\(\(*it\)->getId\(\), \(*it\)\)\)) p n
(;) N
(            ) S
(this) K
(->weaponCounter++;) p n
(            ) S
(this) K
(->worms[id]->shoot\(\);) p n
(        }) N
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_cluster\) {) p n
(        newWeapon = ) S
(new) K
( RedGrenade\() p
(this) K
(->weaponCounter,) p n
(        ) S
(this) K
(->world.getWorld\(\),) p n
(        ) S
(this) K
(->worms[id]->getPosX\(\),) p n
(        ) S
(this) K
(->worms[id]->getPosY\(\),) p n
(        ) S
(this) K
(->worms[id]->isMirrored\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(sight_angle) str
("].as<) p
(int) k
(>\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(power) str
("].as<) p
(int) k
(>\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(countdown) str
("].as<) p
(int) k
(>\(\), ) p n
(        currentTime, ) N
(        weapon) N
(        \);) N
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_mortar\) {) p n
(        newWeapon = ) S
(new) K
( Mortar\() p
(this) K
(->weaponCounter,) p n
(        ) S
(this) K
(->world.getWorld\(\),) p n
(        ) S
(this) K
(->worms[id]->getPosX\(\),) p n
(        ) S
(this) K
(->worms[id]->getPosY\(\),) p n
(        ) S
(this) K
(->worms[id]->isMirrored\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(sight_angle) str
("].as<) p
(int) k
(>\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(power) str
("].as<) p
(int) k
(>\(\), ) p n
(        weapon) N
(        \);) N
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_bat\) {) p n
(        Bat bat\() S
(this) K
(->world.getWorld\(\), ) p n
(        ) S
(this) K
(->worms[id]->getPosX\(\),) p n
(        ) S
(this) K
(->worms[id]->getPosY\(\),) p n
(        ) S
(this) K
(->worms[id]->isMirrored\(\),) p n
(        nodeEvent[") S
(event) str
("][") p
(sight_angle) str
("].as<) p
(int) k
(>\(\)\);) p n
(    } ) S
(else) K
( ) p
(if) K
( \(weapon == w_teleport\) {) p n
(        Teleportation teleportation\() S
(this) K
(->worms[id],) p n
(        \() S
(float) k
(\) nodeEvent[") p
(event) str
("][") p
(remote_control_x) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCA) p n
(LING_FACTOR,) N
(        \() S
(float) k
(\) nodeEvent[") p
(event) str
("][") p
(remote_control_y) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCA) p n
(LING_FACTOR\);) N
(        teleportation.teleport\(\);) N
(    }) N
() N
(    ) S
(if) K
( \(newWeapon\) {) p n
(        ) S
(this) K
(->weapons.insert\(std::pair<) p
(int) k
(, Weapon*>\() p
(this) K
(->weaponCounter, newWea) p n
(pon\)\);) N
(        ) S
(this) K
(->weaponCounter++;) p n
(    }) N
() N
(    ) S
(this) K
(->teams[) p
(this) K
(->worms[id]->getTeam\(\)]->reduceSupplie\(weapon\);) p n
(    ) S
(this) K
(->worms[id]->shoot\(\);) p n
(}) N
() N
(void) k
( WeaponManager::updateWeapons\() p
(unsigned) k
( ) p
(int) k
( currentTime, ) p
(int) k
( windForce\) {) p n
(    std::map<) S
(int) k
(, Weapon*>::iterator it;) p n
(    ) S
(for) K
(\(it=) p
(this) K
(->weapons.begin\(\);it != ) p
(this) K
(->weapons.end\(\);\) {) p n
(WeaponManager.cpp) (Page 2/3) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(WeaponManager.cpp) (48/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3,1) 49
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(if) K
( \(\(it\)->second->hasExploded\(\)\) {) p n
(            ) S
(int) k
( q_added = it->second->addProjectiles\() p
(this) K
(->weapons\);) p n
(            ) S
(this) K
(->weaponCounter = ) p
(this) K
(->weaponCounter + q_added;) p n
(            ) S
(delete) K
( \(it->second\);) p n
(            it = ) S
(this) K
(->weapons.erase\(it\);) p n
(        } ) S
(else) K
( {) p n
(            \(it\)->second->update\(currentTime, windForce\);) N
(            it++;) N
(        }) N
(    }) N
(}) N
() N
(std::map<) S
(int) k
(, Weapon*> & WeaponManager::getWeapons\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->weapons;) p n
(}) N
() N
(bool) k
( WeaponManager::hasAliveWeapons\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->weapons.size\(\);) p n
(}) N
() N
(WeaponManager.cpp) (Page 3/3) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WEAPON_MANGER_H) p n
(#define) K
( WEAPON_MANGER_H) p n
() N
(#include) K
( ") p
(Weapon.h) str
(") p n
(#include) K
( ") p
(WorldPhysic.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(Dynamite.h) str
(") p n
(#include) K
( ") p
(Bazooka.h) str
(") p n
(#include) K
( ") p
(AirStrike.h) str
(") p n
(#include) K
( ") p
(Bat.h) str
(") p n
(#include) K
( ") p
(Teleportation.h) str
(") p n
(#include) K
( ") p
(RedGrenade.h) str
(") p n
(#include) K
( ") p
(Mortar.h) str
(") p n
(#include) K
( ") p
(Missil.h) str
(") p n
(#include) K
( ") p
(team.h) str
(") p n
(#include) K
( <map>) p n
(#include) K
( <iostream>) p n
() N
(class WeaponManager {) N
(private:) N
(    std::map<) S
(int) k
(, Weapon*> weapons;) p n
(    std::map<) S
(int) k
(, Worm*> & worms;) p n
(    WorldPhysic & world;    ) N
(    std::map<) S
(int) k
(, Team*> & teams;) p n
() N
(    ) S
(int) k
( weaponCounter;) p n
(public: ) N
(    WeaponManager\(std::map<) S
(int) k
(, Worm*> & , std::map<) p
(int) k
(, Team*> &, WorldPhysic &) p n
(\);) N
(    ) S
(void) k
( manageShoot\(Event & event, size_t id, ) p
(unsigned) k
( ) p
(int) k
( currentTime\);) p n
(    ) S
(void) k
( updateWeapons\() p
(unsigned) k
( ) p
(int) k
( currentTime, ) p
(int) k
( windForce\);) p n
(    std::map<) S
(int) k
(, Weapon*> & getWeapons\(\);) p n
(    bool hasAliveWeapons\(\);) N
(};) N
() N
(#endif) K
(WeaponManager.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(WeaponManager.cpp, WeaponManager.h) (49/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 50
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Wind.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(Wind::Wind\(\) {) N
(    ) S
(this) K
(->max_wind_force = gConfiguration.MAX_WIND_FORCE;) p n
(    ) S
(this) K
(->min_wind_force = gConfiguration.MIN_WIND_FORCE;) p n
(    ) S
(this) K
(->wind_force = \(rand\(\)%\(max_wind_force - min_wind_force + 1 \)\) + min_win) p n
(d_force;) N
(}) N
() N
(Wind::~Wind\(\) {) N
() N
(}) N
() N
(int) k
( Wind::getWindForce\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->wind_force;) p n
(}) N
() N
(void) k
( Wind::updateWindForce\(\) {) p n
(    ) S
(this) K
(->wind_force = \(rand\(\)%\(max_wind_force - min_wind_force + 1 \)\) + min_win) p n
(d_force;) N
(}) S
(Wind.cpp) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WIND_H) p n
(#define) K
( WIND_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( <stdlib.h>) p n
() N
(class Wind {) N
(private:) N
(    ) S
(int) k
( max_wind_force;) p n
(    ) S
(int) k
( min_wind_force;) p n
(    ) S
(int) k
( wind_force;) p n
(public:) N
(    Wind\(\);) N
(    ~Wind\(\);) N
(    ) S
(void) k
( updateWindForce\(\);) p n
(    ) S
(int) k
( getWindForce\(\);) p n
(};) N
() N
(#endif) K
(Wind.h) (Page 1/1) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Wind.cpp, Wind.h) (50/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 51
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(World.h) str
(") p n
(#include) K
( <unistd.h>) p n
(#include) K
( <iostream>) p n
() N
(#define) K
( MAP_WIDTH 2500) p n
(#define) K
( MAP_HEIGTH 1500) p n
() N
(World::World\(std::string & map_path, Queue<Snapshot*> & snps\) :) N
(snapshots\(snps\),) N
(map_path\(map_path\) {) N
(    ) S
(this) K
(->map_node = YAML::LoadFile\(map_path\);) p n
(    initializeWorld\(\);) N
(    ) S
(this) K
(->keep_running = ) p
(true) k
(;) p n
(    ) S
(this) K
(->time_sec = 0;) p n
(    ) S
(this) K
(->weapon_counter = 0;) p n
(}) N
() N
(World::~World\(\) {) N
(    ) S
(for) K
( \(std::map<) p
(int) k
(, Girder*>::iterator it = ) p
(this) K
(->girders.begin\(\); it!= ) p
(this) K
(-) p n
(>girders.end\(\); ++it\) {) N
(        ) S
(delete) K
( it->second;) p n
(    }) N
() N
(    ) S
(for) K
( \(std::map<) p
(int) k
(, Worm*>::iterator it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->wo) p n
(rms.end\(\); ++it\) {) N
(        ) S
(delete) K
( it->second;) p n
(    }) N
() N
(    ) S
(for) K
( \(std::map<) p
(int) k
(, Team*>::iterator it = ) p
(this) K
(->teams.begin\(\); it != ) p
(this) K
(->te) p n
(ams.end\(\); ++it\) {) N
(        ) S
(delete) K
( it->second;) p n
(    }) N
() N
(    ) S
(delete) K
( ) p
(this) K
(->water;) p n
(    ) S
(delete) K
( ) p
(this) K
(->weaponManager;) p n
(    ) S
(delete) K
( ) p
(this) K
(->wind;) p n
(    ) S
(delete) K
( ) p
(this) K
(->ceiling;) p n
(    ) S
(delete) K
( ) p
(this) K
(->leftWall;) p n
(    ) S
(delete) K
( ) p
(this) K
(->rightWall;) p n
(}) N
() N
(size_t World::getId\() S
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( 0;) p n
(}) N
() N
(bool) k
( World::isRunning\() p
(void) k
(\) ) p
(const) K
( {) p n
(    ) S
(return) K
( ) p
(true) k
(;) p n
(}) N
() N
(std::map<) S
(int) k
(, Worm *> & World::getWorms\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->worms;) p n
(}) N
() N
(Wind* World::getWind\(\) {) N
(    ) S
(return) K
( ) p
(this) K
(->wind;) p n
(}) N
() N
(bool) k
( World::hasWormsMoving\(\) {) p n
(    ) S
(for) K
( \(std::map<) p
(int) k
(, Worm*>::iterator it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->wo) p n
(rms.end\(\); ++it\) {) N
(        ) S
(if) K
( \(it->second->isMoving\(\) && !it->second->isDead\(\)\) ) p
(return) K
( ) p
(true) k
(;) p n
(    }) N
(World.cpp) (Page 1/5) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( ) p
(false) k
(;) p n
(}) N
() N
(bool) k
( World::hasWormGotHurt\(size_t worm_id\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->worms[worm_id]->gotHurtInTurn\(\);) p n
(}) N
() N
(bool) k
( World::hasAliveProjectiles\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->weaponManager->hasAliveWeapons\(\);) p n
(}) N
() N
(bool) k
( World::hasWormsAffectedByExplosion\(\) {) p n
(    ) S
(for) K
( \(std::map<) p
(int) k
(, Worm*>::iterator it = ) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->wo) p n
(rms.end\(\); ++it\) {) N
(        ) S
(if) K
( \(it->second->isAffectedByExplosion\(\) && !it->second->isDead\(\)\) ) p
(return) K
() p n
( ) S
(true) k
(;) p n
(    }) N
(    ) S
(return) K
( ) p
(false) k
(;) p n
(}) N
() N
(bool) k
( World::hasWormShooted\(size_t worm_id\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->worms[worm_id]->didShootInTurn\(\);) p n
(}) N
() N
(std::map<) S
(int) k
(, Team*> & World::getTeams\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->teams;) p n
(}) N
() N
(void) k
( World::initializeWorld\(\) {) p n
(    ) S
(float) k
( water_posX = \(MAP_WIDTH / 2\) * gConfiguration.SCALING_FACTOR;) p n
(    ) S
(float) k
( water_posY = \(MAP_HEIGTH - 100\) * gConfiguration.SCALING_FACTOR ;) p n
(    ) S
(float) k
( water_height = ) p
(this) K
(->map_node[") p
(static) str
("][") p
(water_level) str
("].as<) p
(int) k
(>\(\) * gConfigu) p n
(ration.SCALING_FACTOR;) N
(    ) S
(float) k
( water_width =   MAP_WIDTH * gConfiguration.SCALING_FACTOR;) p n
() N
(    ) S
(this) K
(->water = ) p
(new) K
( Water\() p
(this) K
(->worldPhysic.getWorld\(\), water_posX, water_posY) p n
(, water_width, water_height\);) N
() N
(    ) S
(this) K
(->wind = ) p
(new) K
( Wind\(\);) p n
() N
() N
(    ) S
(float) k
( ceiling_posX = \(MAP_WIDTH / 2\) * gConfiguration.SCALING_FACTOR;) p n
(    ) S
(float) k
( ceiling_posY = 0;) p n
(    ) S
(float) k
( ceiling_height = 1; ) p n
(    ) S
(float) k
( ceiling_width = MAP_WIDTH * gConfiguration.SCALING_FACTOR;) p n
(    ) S
(float) k
( wall_height = MAP_HEIGTH * gConfiguration.SCALING_FACTOR;) p n
(    ) S
(float) k
( wall_width = 1;) p n
(    ) S
(float) k
( left_wall_posX = 0;) p n
(    ) S
(float) k
( right_wall_posX = MAP_WIDTH * gConfiguration.SCALING_FACTOR;) p n
(    ) S
(float) k
( wall_posY = \(MAP_HEIGTH / 2\) * gConfiguration.SCALING_FACTOR;) p n
() N
(    ) S
(this) K
(->ceiling = ) p
(new) K
( Wall\() p
(this) K
(->worldPhysic.getWorld\(\), ceiling_posX, ceiling) p n
(_posY, ceiling_width, ceiling_height\);) N
(    ) S
(this) K
(->leftWall = ) p
(new) K
( Wall\() p
(this) K
(->worldPhysic.getWorld\(\), left_wall_posX, wall) p n
(_posY, wall_width, wall_height\);) N
(    ) S
(this) K
(->rightWall = ) p
(new) K
( Wall\() p
(this) K
(->worldPhysic.getWorld\(\), right_wall_posX, wa) p n
(ll_posY, wall_width, wall_height\);) N
() N
(    ) S
(const) K
( YAML::Node & static_node = ) p
(this) K
(->map_node[") p
(static) str
("];) p n
(    ) S
(const) K
( YAML::Node & dynamic_node = ) p
(this) K
(->map_node[") p
(dynamic) str
("];) p n
() N
(    ) S
(const) K
( YAML::Node& short_girders_node = static_node[") p
(short_girders) str
("];) p n
(World.cpp) (Page 2/5) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(World.cpp) (51/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 52
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(const) K
( YAML::Node& long_girders_node = static_node[") p
(long_girders) str
("];) p n
(    ) S
(const) K
( YAML::Node& worms_teams_node = dynamic_node[") p
(worms_teams) str
("];) p n
() N
(    ) S
(// Initialize de vigas cortas) c n
(    ) p
(for) K
( \(YAML::const_iterator it = short_girders_node.begin\(\); it != short_girde) p n
(rs_node.end\(\); ++it\) {) N
(        ) S
(const) K
( YAML::Node &  short_girder = *it;) p n
(        ) S
(int) k
( id = short_girder[") p
(id) str
("].as<) p
(int) k
(>\(\);) p n
(        ) S
(float) k
( posX = \() p
(float) k
(\) short_girder[") p
(x) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALIN) p n
(G_FACTOR;) N
(        ) S
(float) k
( posY = \() p
(float) k
(\) short_girder[") p
(y) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALIN) p n
(G_FACTOR;) N
(        ) S
(float) k
( angle = \() p
(float) k
(\) short_girder[") p
(angle) str
("].as<) p
(int) k
(>\(\) * GRADTORAD;) p n
(        Girder* girder_ptr = ) S
(new) K
( Girder\() p
(this) K
(->worldPhysic.getWorld\(\), posX, posY) p n
(, -angle, 0.8, 3\);) N
(        ) S
(this) K
(->girders.insert\(std::pair<) p
(int) k
(, Girder*>\(id, girder_ptr\)\);) p n
(    }) N
() N
(    ) S
(// Initialize de vigas largas) c n
(    ) p
(for) K
( \(YAML::const_iterator it = long_girders_node.begin\(\); it != long_girders) p n
(_node.end\(\); ++it\) {) N
(        ) S
(const) K
( YAML::Node&  long_girder = *it;) p n
(        ) S
(int) k
( id = long_girder[") p
(id) str
("].as<) p
(int) k
(>\(\);) p n
(        ) S
(float) k
( posX = \() p
(float) k
(\) long_girder[") p
(x) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALING) p n
(_FACTOR;) N
(        ) S
(float) k
( posY = \() p
(float) k
(\) long_girder[") p
(y) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALING) p n
(_FACTOR;) N
(        ) S
(float) k
( angle = \() p
(float) k
(\) long_girder[") p
(angle) str
("].as<) p
(int) k
(>\(\) * GRADTORAD;) p n
(        Girder* girder_ptr = ) S
(new) K
( Girder\() p
(this) K
(->worldPhysic.getWorld\(\), posX, posY) p n
(, -angle, 0.8, 6\);) N
(        ) S
(this) K
(->girders.insert\(std::pair<) p
(int) k
(, Girder*>\(id, girder_ptr\)\);) p n
(    }) N
() N
(    ) S
(// Initialize team) c n
(    ) p
(int) k
( id, tid, health;) p n
(    ) S
(float) k
( x;) p n
(    ) S
(float) k
( y;) p n
(    std::string name;) N
(    ) S
(int) k
( aux = 0;) p n
(    ) S
(int) k
( wormsHealth = ) p
(this) K
(->map_node[") p
(static) str
("][") p
(worms_health) str
("].as<) p
(int) k
(>\(\);) p n
(    ) S
(int) k
( maxTeamHealtlh = 0;) p n
() N
(    ) S
(for) K
( \(YAML::const_iterator it = worms_teams_node.begin\(\); it != worms_teams_n) p n
(ode.end\(\); it++\) {) N
(        aux = it->second[") S
(worms) str
("].size\(\) * wormsHealth;) p n
(        ) S
(if) K
( \(aux > maxTeamHealtlh\) {) p n
(            maxTeamHealtlh = aux;) N
(        }) N
(    }) N
() N
() N
(    ) S
(for) K
( \(YAML::const_iterator it = worms_teams_node.begin\(\); it != worms_teams_n) p n
(ode.end\(\); it++\) {) N
(        tid = it->first.as<) S
(int) k
(>\(\);) p n
(        Team* new_team = ) S
(new) K
( Team\(tid\);) p n
(        ) S
(const) K
( YAML::Node& worms_node = it->second[") p
(worms) str
("];) p n
(        ) S
(int) k
( wormsQuantity = it->second[") p
(worms) str
("].size\(\);) p n
(        ) S
(for) K
( \(YAML::const_iterator worms_it = worms_node.begin\(\); worms_it != wor) p n
(ms_node.end\(\); worms_it++\) {) N
(            ) S
(const) K
( YAML::Node& worm = *worms_it;) p n
(            name = worm[") S
(name) str
("].as<std::string>\(\);) p n
(            id = worm[") S
(id) str
("].as<) p
(int) k
(>\(\);) p n
(World.cpp) (Page 3/5) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            health = maxTeamHealtlh / wormsQuantity;) p n
(            x = \() S
(float) k
(\) worm[") p
(x) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALING_FACTOR;) p n
(            y = \() S
(float) k
(\) worm[") p
(y) str
("].as<) p
(int) k
(>\(\) * gConfiguration.SCALING_FACTOR;) p n
(            Worm * new_worm = ) S
(new) K
( Worm\(name, id, tid, health, ) p
(this) K
(->worldPhysic.) p n
(getWorld\(\), x, y\);) N
(            ) S
(this) K
(->worms.insert\(std::pair<) p
(int) k
(, Worm*>\(id, new_worm\)\);) p n
(            new_team->addMember\(new_worm\);) N
(        }) N
(        new_team->initializeInventory\(dynamic_node[") S
(worms_teams) str
("][tid][") p
(inventory) str
("]\)) p n
(;) N
(        ) S
(this) K
(->teams.insert\(std::pair<) p
(int) k
(, Team*>\(tid, new_team\)\);) p n
(    }) N
() N
(    ) S
(this) K
(->weaponManager = ) p
(new) K
( WeaponManager\() p
(this) K
(->worms, ) p
(this) K
(->teams, ) p
(this) K
(->worl) p n
(dPhysic\);) N
(}) N
() N
(void) k
( World::updateBodies\(\) {) p n
(    ) S
(this) K
(->weaponManager->updateWeapons\(getTimeSeconds\(\), wind->getWindForce\(\)\);) p n
(    ) S
(for) K
( \(std::map<) p
(int) k
(,Worm*>::iterator it=) p
(this) K
(->worms.begin\(\); it != ) p
(this) K
(->worms) p n
(.end\(\); ++it\) {) N
(        Worm* worm = it->second;) N
(        ) S
(//if \(!worm->isDead\(\)\)) c n
(            worm->update\(\);) p n
(    }) N
(}) N
() N
(void) k
( World::run\(\) {) p n
(    ) S
(unsigned) k
( ) p
(int) k
( step_counter = 0;) p n
(    ) S
(while) K
( \() p
(this) K
(->keep_running\) { ) p n
(        ) S
(this) K
(->worldPhysic.step\(\);) p n
(        ) S
(this) K
(->worldPhysic.clearForces\(\);) p n
(        step_counter++;) N
(        ) S
(if) K
( \() p
(this) K
(->worldPhysic.aliveBodies\(\) || step_counter == 60 ) p
(/*|| this->wea) c n
(pons.size\(\) > 0*/) S
(\) {) p n
(            Snapshot* snapshot = ) S
(new) K
( Snapshot\(\);            ) p n
(            snapshot->updateTeams\() S
(this) K
(->teams\);) p n
(            snapshot->updateProjectiles\() S
(this) K
(->weaponManager->getWeapons\(\)\);) p n
(            ) S
(this) K
(->snapshots.push\(snapshot\);) p n
(        }) N
(        updateBodies\(\);) N
(        ) S
(if) K
( \(step_counter == 60\) {) p n
(            ) S
(this) K
(->time_sec++;) p n
(            step_counter = 0;) N
(        }) N
(        usleep\(16666\);) N
(    }) N
() N
(    ) S
(for) K
( \() p
(int) k
( i = 0; i < 2; i++\) {) p n
(        Snapshot* snapshot = ) S
(new) K
( Snapshot\(\);            ) p n
(        snapshot->updateTeams\() S
(this) K
(->teams\);) p n
(        snapshot->updateProjectiles\() S
(this) K
(->weaponManager->getWeapons\(\)\);) p n
(        ) S
(this) K
(->snapshots.push\(snapshot\);) p n
(    }) N
() N
(}) N
() N
(void) k
( World::stop\(\) {) p n
(    ) S
(this) K
(->keep_running = ) p
(false) k
(;) p n
(}) N
() N
(unsigned) k
( ) p
(int) k
( World::getTimeSeconds\() p
(void) k
(\) {) p n
(World.cpp) (Page 4/5) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(World.cpp) (52/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5,1) 53
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( ) p
(this) K
(->time_sec;) p n
(}) N
() N
(void) k
( World::executeAction\(Event & event, size_t id\) {) p n
(    YAML::Node eventNode = event.getNode\(\);) N
(    action_t action = \(action_t\) eventNode[") S
(event) str
("][") p
(action) str
("].as<) p
(int) k
(>\(\);) p n
(    ) S
(switch) K
(\(action\) {) p n
(        ) S
(case) K
( a_moveLeft:) p n
(            ) S
(this) K
(->worms[id]->moveLeft\(\);) p n
(            ) S
(break) K
(;) p n
(        ) S
(case) K
( a_moveRight:) p n
(            ) S
(this) K
(->worms[id]->moveRight\(\);) p n
(            ) S
(break) K
(;) p n
(        ) S
(case) K
( a_frontJump:) p n
(            ) S
(this) K
(->worms[id]->frontJump\(\);) p n
(            ) S
(break) K
(;) p n
(        ) S
(case) K
( a_backJump:) p n
(            ) S
(this) K
(->worms[id]->backJump\(\);) p n
(            ) S
(break) K
(;) p n
(        ) S
(case) K
( a_shoot : {) p n
(            ) S
(this) K
(->weaponManager->manageShoot\(event, id, getTimeSeconds\(\)\);) p n
(            ) S
(break) K
(;) p n
(        }) N
(        ) S
(case) K
( a_pickWeapon:) p n
(            ) S
(this) K
(->worms[id]->pickWeapon\(\(weapon_t\) eventNode[") p
(event) str
("][") p
(weapon) str
("].as) p n
(<) S
(int) k
(>\(\)\);) p n
(        ) S
(default) K
(: ) p
(break) K
(;) p n
(    }) N
(}) S
(World.cpp) (Page 5/5) (jun 26, 18 12:27) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WORLD_H) p n
(#define) K
( WORLD_H) p n
() N
(#include) K
( <map>) p n
(#include) K
( ") p
(WorldPhysic.h) str
(") p n
(#include) K
( ") p
(Girder.h) str
(") p n
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( ") p
(yaml.h) str
(") p n
(#include) K
( ") p
(Water.h) str
(") p n
(#include) K
( ") p
(thread.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
(#include) K
( ") p
(ContactListener.h) str
(") p n
(#include) K
( <sstream>) p n
(#include) K
( ") p
(blocking_queue.h) str
(") p n
(#include) K
( ") p
(event.h) str
(") p n
(#include) K
( ") p
(snapshot.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(Wind.h) str
(") p n
(#include) K
( ") p
(Teleportation.h) str
(") p n
(#include) K
( ") p
(Wall.h) str
(") p n
(#include) K
( ") p
(WeaponManager.h) str
(") p n
() N
(#define) K
( GRADTORAD 0.0174533) p n
() N
(class World : public Thread {) N
(private:) N
(    Queue<Snapshot*> & snapshots;) N
(    bool keep_running;) N
(    WorldPhysic worldPhysic;) N
(    std::map<) S
(int) k
(, Girder *> girders;) p n
(    std::map<) S
(int) k
(, Worm *> worms;) p n
(    std::map<) S
(int) k
(, Team *> teams;) p n
(    ) S
(int) k
( weapon_counter;) p n
(    Water * water;) N
(    ) S
(unsigned) k
( ) p
(int) k
( time_sec;) p n
(    std::string & map_path;) N
(    Wind* wind;) N
(    Wall* ceiling;) N
(    Wall* leftWall;) N
(    Wall* rightWall;) N
(    virtual bool isRunning\() S
(void) k
(\) ) p
(const) K
(;) p n
(    virtual size_t getId\() S
(void) k
(\) ) p
(const) K
(;) p n
(    ) S
(void) k
( updateBodies\(\);) p n
(    YAML::Node map_node;) N
(    WeaponManager* weaponManager;) N
() N
(public:) N
(    World\(std::string &, Queue<Snapshot*> &\);) N
(    ~World\() S
(void) k
(\);) p n
(    ) S
(void) k
( initializeWorld\(\);) p n
(    std::map<) S
(int) k
(, Worm *> & getWorms\(\);) p n
(    std::map<) S
(int) k
(, Team*> & getTeams\(\);) p n
(    Wind* getWind\(\);) N
(    virtual ) S
(void) k
( run\() p
(void) k
(\);) p n
(    ) S
(void) k
( stop\(\);) p n
(    ) S
(void) k
( executeAction\(Event &, size_t\);) p n
(    ) S
(unsigned) k
( ) p
(int) k
( getTimeSeconds\() p
(void) k
(\);) p n
(    bool hasWormsMoving\() S
(void) k
(\);) p n
(    bool hasAliveProjectiles\() S
(void) k
(\);) p n
(    bool hasWormsAffectedByExplosion\() S
(void) k
(\);) p n
(    bool hasWormGotHurt\(size_t\);) N
(    bool hasWormShooted\(size_t\);) N
(World.h) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(World.cpp, World.h) (53/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 54
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(};) p n
() N
(#endif) K
(World.h) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(WorldPhysic.h) str
(") p n
(#include) K
( <iostream>) p n
(b2Vec2 WorldPhysic::_generateGravity\(\) {) N
(    b2Vec2 gravity\(0.0f, 9.8f\);) N
(    ) S
(return) K
( gravity;) p n
(}) N
() N
(WorldPhysic::WorldPhysic\(\) : world\(_generateGravity\(\)\) {) N
(    ) S
(this) K
(->world.SetAllowSleeping\() p
(true) k
(\);) p n
(    ) S
(this) K
(->world.SetContactListener\(&contactListener\);) p n
(}) N
() N
(b2World& WorldPhysic::getWorld\(\) {) N
(    ) S
(return) K
( ) p
(this) K
(->world;) p n
(}) N
() N
(bool) k
( WorldPhysic::aliveBodies\(\) {) p n
(    ) S
(for) K
( \(b2Body* b = ) p
(this) K
(->world.GetBodyList\(\); b; b = b->GetNext\(\)\) {) p n
(        ) S
(if) K
( \(b->IsAwake\(\)\) {) p n
(            entity_t entity = ) S
(static_cast) k
(<Entity*>\(b->GetUserData\(\)\)->getEntityT) p n
(ype\(\);) N
(            ) S
(if) K
( \(entity == STRUCTURE || entity == WATER || entity == WALL\) {) p n
(                ) S
(continue) K
(;) p n
(            }) N
(            ) S
(return) K
( ) p
(true) k
(;) p n
(        }) N
(    }) N
(    ) S
(return) K
( ) p
(false) k
(;) p n
(}) N
() N
(void) k
( WorldPhysic::step\(\) {) p n
(    ) S
(this) K
(->world.Step\(gConfiguration.WORLD_TIME_STEP, gConfiguration.WORLD_VELOCI) p n
(TY_ITERATIONS, gConfiguration.WORLD_POSITION_ITERATIONS\);) N
(}) N
() N
(void) k
( WorldPhysic::clearForces\(\) {) p n
(    ) S
(this) K
(->world.ClearForces\(\);) p n
(}) N
(WorldPhysic.cpp) (Page 1/1) (jun 26, 18 12:27) title
border
grestore
(Printed by Gabriel Robles) rhead
(World.h, WorldPhysic.cpp) (54/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1,1) 55
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WORLD_PHYSIC_H) p n
(#define) K
( WORLD_PHYSIC_H) p n
() N
(#include) K
( ") p
(Box2D.h) str
(") p n
(#include) K
( ") p
(ContactListener.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
() N
(class WorldPhysic {) N
(public:) N
(    WorldPhysic\(\);) N
(    b2World& getWorld\(\);) N
(    ) S
(void) k
( step\(\);) p n
(    ) S
(void) k
( clearForces\(\);) p n
(    bool aliveBodies\(\);) N
(private:) N
(    ContactListener contactListener;) N
(    b2Vec2 _generateGravity\(\);) N
(    b2World world;) N
(};) N
() N
(#endif) K
(WorldPhysic.h) (Page 1/1) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( ") p
(Worm.h) str
(") p n
(#include) K
( <iostream>) p n
() N
(Worm::Worm\(std::string n, ) S
(int) k
( id, ) p
(int) k
( team_id, ) p
(int) k
( h, b2World& world, ) p
(float) k
( posX) p n
(, ) S
(float) k
( posY\) : ) p n
(world\(world\) {) N
() N
(    b2BodyDef wormDef;) N
(    wormDef.type = b2_dynamicBody;) N
(    wormDef.fixedRotation = ) S
(true) k
(;) p n
(    wormDef.allowSleep = ) S
(true) k
(;) p n
(    wormDef.position.Set\(posX, posY\);) N
(    b2Body* body = world.CreateBody\(&wormDef\);) N
(    body->SetUserData\() S
(this) K
(\);) p n
() N
(    ) S
(//b2PolygonShape wormShape;) c n
(    ) p
(//wormShape.SetAsBox\(WORM_WIDTH/2, WORM_HEIGHT/2\);) c n
() p n
(    b2CircleShape wormShape;) N
(    wormShape.m_radius = WORM_RADIUS;) N
() N
(    b2FixtureDef wormFixture;) N
(    wormFixture.shape = &wormShape;) N
(    wormFixture.density = WORM_DENSITY;) N
(    wormFixture.friction = WORM_FRICTION;) N
(    wormFixture.filter.categoryBits = WORM_PHYSIC;) N
(    wormFixture.filter.maskBits = STRUCTURE_PHYSIC | WATER_PHYSIC;) N
(    body->CreateFixture\(&wormFixture\);) N
() N
(    ) S
(this) K
(->body = body;) p n
(    ) S
(this) K
(->numFootContacts = 0;) p n
() N
() N
(    ) S
(this) K
(->id = id;) p n
(    ) S
(this) K
(->inclination = NONE;) p n
(    ) S
(this) K
(->health = h;) p n
(    ) S
(this) K
(->team_id = team_id;) p n
(    ) S
(this) K
(->name = n;) p n
(    ) S
(this) K
(->angle = 0;) p n
(    ) S
(this) K
(->falling = ) p
(false) k
(;) p n
(    ) S
(this) K
(->mirrored = ) p
(false) k
(;) p n
(    ) S
(this) K
(->hurtInTurn = ) p
(false) k
(;) p n
(    ) S
(this) K
(->affectedByExplosion = ) p
(false) k
(;) p n
(    ) S
(this) K
(->shootedInTurn = ) p
(false) k
(;) p n
(    ) S
(this) K
(->weapon = w_null;) p n
(    ) S
(this) K
(->direction_angle = 0;) p n
(    ) S
(this) K
(->fallenDistance = 0;) p n
(    ) S
(this) K
(->falled = ) p
(false) k
(;) p n
(}) N
() N
(Worm::~Worm\() S
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->body\) {) p n
(        ) S
(this) K
(->world.DestroyBody\() p
(this) K
(->body\);            ) p n
(    }) N
(}) N
() N
(void) k
( Worm::frontJump\() p
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->numFootContacts <= 0\) ) p
(return) K
(;) p n
(    ) S
(float) k
( factor;) p n
(    mirrored == ) S
(true) k
( ? factor = 1.0 : factor = -1.0;) p n
(    ) S
(float) k
( x_impulse = ) p
(this) K
(->body->GetMass\(\) * gConfiguration.WORM_FRONT_JUMP_X_I) p n
(MPULSE;) N
(Worm.cpp) (Page 1/6) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(WorldPhysic.h, Worm.cpp) (55/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2-3) 56
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(float) k
( y_impulse = ) p
(this) K
(->body->GetMass\(\) * gConfiguration.WORM_FRONT_JUMP_Y_I) p n
(MPULSE;) N
(    ) S
(this) K
(->body->ApplyLinearImpulse\(b2Vec2\(x_impulse * factor,-y_impulse\), ) p
(this) K
(->) p n
(body->GetWorldCenter\(\), ) S
(true) k
(\);) p n
(}) N
() N
(void) k
( Worm::backJump\() p
(void) k
(\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->numFootContacts <= 0\) ) p
(return) K
(;) p n
(    ) S
(float) k
( factor;) p n
(    mirrored == ) S
(true) k
( ? factor = 1.0 : factor = -1.0;) p n
(    ) S
(float) k
( x_impulse = ) p
(this) K
(->body->GetMass\(\) * gConfiguration.WORM_BACK_JUMP_X_IM) p n
(PULSE;) N
(    ) S
(float) k
( y_impulse = ) p
(this) K
(->body->GetMass\(\) * gConfiguration.WORM_BACK_JUMP_Y_IM) p n
(PULSE;) N
(    ) S
(this) K
(->body->ApplyLinearImpulse\(b2Vec2\(-x_impulse * factor, -y_impulse\), ) p
(this) K
() p n
(->body->GetWorldCenter\(\), ) S
(true) k
(\);) p n
(}) N
() N
(void) k
( Worm::moveRight\() p
(void) k
(\) {) p n
(    ) S
(if) K
( \(isGrounded\(\) && !affectedByExplosion\) {) p n
(        b2Vec2 velocity;) N
(        velocity.x = cosf\(angle\) * gConfiguration.WORM_SPEED;) N
(        velocity.y = sinf\(angle\) * gConfiguration.WORM_SPEED;) N
(        ) S
(this) K
(->body->SetLinearVelocity\(velocity\);) p n
(        ) S
(this) K
(->mirrored = ) p
(true) k
(;) p n
(    }) N
(}) N
() N
(void) k
( Worm::moveLeft\() p
(void) k
(\) {) p n
(    ) S
(if) K
( \(isGrounded\(\) && !affectedByExplosion\) {) p n
(        b2Vec2 velocity; ) S
(// = this->body->GetLinearVelocity\(\);) c n
(        velocity.x = cosf\(angle\) * -gConfiguration.WORM_SPEED;) p n
(        velocity.y = sinf\(angle\) * -gConfiguration.WORM_SPEED;) N
(        ) S
(this) K
(->body->SetLinearVelocity\(velocity\);) p n
(        ) S
(this) K
(->mirrored = ) p
(false) k
(;) p n
(    }) N
(}) N
() N
(bool) k
( Worm::isMirrored\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->mirrored;) p n
(}) N
() N
(float) k
( Worm::getPosX\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).x;) p n
(}) N
() N
(float) k
( Worm::getPosY\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->body->GetPosition\(\).y;) p n
(}) N
() N
(int) k
( Worm::getId\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->id;) p n
(}) N
() N
(int) k
( Worm::getTeam\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->team_id;) p n
(}) N
() N
(int) k
( Worm::getHealth\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->health;) p n
(}) N
() N
(Worm.cpp) (Page 2/6) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(std::string Worm::getName\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->name;) p n
(}) N
() N
(void) k
( Worm::addFootContact\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->numFootContacts++;) p n
(}) N
() N
(void) k
( Worm::deleteFootContact\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->numFootContacts--;) p n
(}) N
() N
(void) k
( Worm::shoot\(\) {) p n
(    ) S
(this) K
(->shootedInTurn = ) p
(true) k
(;) p n
(    ) S
(this) K
(->weapon = w_null;) p n
(}) N
() N
(void) k
( Worm::hurt\() p
(int) k
( damage\) {) p n
(    ) S
(if) K
( \() p
(this) K
(->health - damage < 0\) {) p n
(        kill\(\);) N
(    } ) S
(else) K
( {) p n
(        ) S
(this) K
(->health -=damage;) p n
(    }) N
(    ) S
(this) K
(->hurtInTurn = ) p
(true) k
(;) p n
(}) N
() N
(bool) k
( Worm::isWalking\() p
(void) k
(\) {) p n
(    b2Vec2 velocity = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(return) K
( \(velocity.y || velocity.x\) && isGrounded\(\);) p n
(}) N
() N
(bool) k
( Worm::isMoving\() p
(void) k
(\) {) p n
(    b2Vec2 velocity = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(return) K
( velocity.y || velocity.x;) p n
(    ) S
(//return this->wormPhysic.haveHorizontalSpeed\(\) || this->wormPhysic.haveVert) c n
(icalSpeed\(\);) N
(}) p n
() N
(bool) k
( Worm::isFalling\() p
(void) k
(\) {) p n
(    b2Vec2 velocity = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
(    ) S
(return) K
( !isGrounded\(\) && velocity.y;) p
(// && !jumping;) c n
(}) p n
() N
(bool) k
( Worm::isGrounded\() p
(void) k
(\) {) p n
(    ) S
(return) K
( numFootContacts > 0;) p n
(}) N
() N
(bool) k
( Worm::isDead\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->health == 0;) p n
(}) N
() N
(void) k
( Worm::setAngle\() p
(float) k
( angle\) {) p n
(    ) S
(this) K
(->angle = angle;) p n
(}) N
() N
(void) k
( Worm::setFalling\() p
(bool) k
( falling\) {) p n
(    ) S
(this) K
(->falling = falling;) p n
(}) N
() N
(void) k
( Worm::update\(\) {) p n
(    ) S
(if) K
( \(!) p
(this) K
(->isGrounded\(\)\) {) p n
(        ) S
(if) K
( \() p
(this) K
(->falled && \(getPosY\(\) < ) p
(this) K
(->fallenDistance\)\) {) p n
(Worm.cpp) (Page 3/6) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(Worm.cpp) (56/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4-5) 57
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            ) p
(this) K
(->fallenDistance = getPosY\(\);) p n
(        } ) S
(else) K
( ) p
(if) K
( \(!) p
(this) K
(->falled\){) p n
(            ) S
(this) K
(->fallenDistance = getPosY\(\);) p n
(            ) S
(this) K
(->falled = ) p
(true) k
(;) p n
(        }) N
(    } ) S
(else) K
( ) p
(if) K
( \(isGrounded\(\) && \(falled\)\) {) p n
(        ) S
(this) K
(->fallenDistance = getPosY\(\) - ) p
(this) K
(->fallenDistance; ) p n
(        ) S
(if) K
( \() p
(this) K
(->fallenDistance > gConfiguration.WORM_MAX_FALL_DISTANCE\) {) p n
(            hurt\() S
(this) K
(->fallenDistance\);) p n
(        }) N
(        ) S
(this) K
(->falled = ) p
(false) k
(;) p n
(        ) S
(this) K
(->fallenDistance = 0;) p n
(    }) N
() N
(    ) S
(if) K
( \(!) p
(this) K
(->body->GetLinearVelocity\(\).x && !) p
(this) K
(->body->GetLinearVelocity\(\).y) p n
(\) {) N
(        ) S
(this) K
(->affectedByExplosion = ) p
(false) k
(;) p n
(    }) N
() N
(    b2Vec2 mov_speed = ) S
(this) K
(->body->GetLinearVelocity\(\);) p n
() N
(    ) S
(if) K
( \(round\(mov_speed.x\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.y > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 180;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.y < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 0;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(if) K
( \(round\(mov_speed.y\) == 0\) {) p n
(        ) S
(if) K
( \(mov_speed.x > 0\) {) p n
(            ) S
(this) K
(->direction_angle = 90;) p n
(            ) S
(return) K
(;) p n
(        }) N
() N
(        ) S
(if) K
( \(mov_speed.x < 0\) {) p n
(            ) S
(this) K
(->direction_angle = 270;) p n
(            ) S
(return) K
(;) p n
(        }) N
(    }) N
() N
(    ) S
(int) k
( ang = atan\(mov_speed.x/mov_speed.y\) * gConfiguration.RADTODEG;) p n
() N
(    ) S
(// Primer cuad rante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = -ang;) p n
(    }) N
() N
(    ) S
(// Segundo cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y < 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 360 - ang;) p n
(    }) N
() N
(    ) S
(// Tercer cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x < 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
() N
(Worm.cpp) (Page 4/6) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(// Cuarto cuadrante) c n
(    ) p
(if) K
( \(mov_speed.y > 0 && mov_speed.x > 0\) {) p n
(        ) S
(this) K
(->direction_angle = 180 - ang;) p n
(    }) N
() N
(    ) N
() N
(    ) S
(if) K
( \(getPosY\(\) > gConfiguration.WORLD_Y_LIMIT\) {) p n
(        ) S
(this) K
(->kill\(\);) p n
(    }) N
() N
(    ) S
(if) K
( \(normalX < 0 && normalY < 0 && !mirrored\) {) p n
(        ) S
(this) K
(->inclination = DOWN;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(normalX > 0 && normalY  < 0 && !mirrored\) {) p n
(        ) S
(this) K
(->inclination = UP;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(normalX < 0 && normalY  < 0 && mirrored\) {) p n
(        ) S
(this) K
(->inclination = UP;) p n
(    } ) S
(else) K
( ) p
(if) K
( \(normalX > 0 && normalY  < 0 && mirrored\) {) p n
(        ) S
(this) K
(->inclination = DOWN;) p n
(    } ) S
(else) K
( ) p
(this) K
(->inclination = NONE;) p n
(}) N
() N
(bool) k
( Worm::isAffectedByExplosion\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->affectedByExplosion;) p n
(}) N
() N
(void) k
( Worm::setAffectedByExplosion\(\){) p n
(    ) S
(this) K
(->affectedByExplosion = ) p
(true) k
(;) p n
(}) N
() N
(void) k
( Worm::kill\(\) {) p n
(    ) S
(this) K
(->health = 0;) p n
(    ) S
(this) K
(->hurtInTurn = ) p
(true) k
(;) p n
(}) N
() N
(void) k
( Worm::refreshByNewTurn\() p
(void) k
(\) {) p n
(    ) S
(this) K
(->hurtInTurn = ) p
(false) k
(;) p n
(    ) S
(this) K
(->shootedInTurn = ) p
(false) k
(;) p n
(}) N
() N
(bool) k
( Worm::gotHurtInTurn\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->hurtInTurn;) p n
(}) N
() N
(bool) k
( Worm::didShootInTurn\() p
(void) k
(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->shootedInTurn;) p n
(}) N
() N
(void) k
( Worm::setPosition\() p
(float) k
( posX, ) p
(float) k
( posY\) {) p n
(    ) S
(this) K
(->body->SetTransform\(b2Vec2\(posX, posY\), ) p
(this) K
(->body->GetAngle\(\)\);) p n
(    ) S
(this) K
(->body->SetAwake\() p
(true) k
(\);) p n
(}) N
() N
(void) k
( Worm::setNormal\(b2Vec2 normal\) {) p n
(    ) S
(this) K
(->normalX = normal.x;) p n
(    ) S
(this) K
(->normalY = normal.y;) p n
(}) N
() N
(worm_inclination_t Worm::getInclination\(\) {) N
(    ) S
(return) K
( ) p
(this) K
(->inclination;) p n
(}) N
() N
(Worm.cpp) (Page 5/6) (jun 25, 18 20:58) title
border
grestore
(Printed by Gabriel Robles) rhead
(Worm.cpp) (57/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (6,1) 58
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(int) k
( Worm::getDirectionAngle\(\) {) p n
(    ) S
(return) K
( ) p
(this) K
(->direction_angle;) p n
(}) N
() N
(void) k
( Worm::pickWeapon\(weapon_t weapon\) {) p n
(    ) S
(this) K
(->weapon = weapon;) p n
(}) S
(Worm.cpp) (Page 6/6) (jun 25, 18 20:58) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#ifndef) K
( WORM_H) p n
(#define) K
( WORM_H) p n
() N
(#include) K
( ") p
(Box2D/Box2D.h) str
(") p n
(#include) K
( ") p
(Entity.h) str
(") p n
(#include) K
( <string>) p n
(#include) K
( ") p
(PhysicEntity.h) str
(") p n
(#include) K
( ") p
(Configuration.h) str
(") p n
(#include) K
( ") p
(types.h) str
(") p n
() N
(#define) K
( WORM_HEIGHT 0.8f) p n
(#define) K
( WORM_RADIUS 0.54f) p n
(#define) K
( WORM_WIDTH 0.8f) p n
(#define) K
( WORM_DENSITY 1.0f) p n
(#define) K
( WORM_FRICTION 0.3f) p n
() N
(class Worm : public Entity {) N
(    private:) N
(        ) S
(int) k
( health;) p n
(        ) S
(int) k
( id;) p n
(        ) S
(int) k
( team_id;) p n
() N
(        ) S
(float) k
( posX;) p n
(        ) S
(float) k
( posY;) p n
(        ) S
(float) k
( angle;) p n
(        ) S
(float) k
( fallenDistance;) p n
(        worm_inclination_t inclination;) N
(        weapon_t weapon;) N
() N
(        bool affectedByExplosion;) N
(        bool falled;        ) N
(        bool mirrored;) N
(        bool falling;) N
(        bool hurtInTurn;) N
(        bool shootedInTurn;) N
(        ) S
(int) k
( numFootContacts;) p n
(        ) S
(float) k
( normalX;) p n
(        ) S
(float) k
( normalY;) p n
(        ) S
(int) k
( direction_angle;) p n
(        std::string name;) N
(        b2World& world;) N
(        b2Body* body;) N
(    public:) N
(        ) S
(// mirrored = true significa mirando a derecha) c n
(        Worm\(std::string, ) p
(int) k
( id, ) p
(int) k
( team_id, ) p
(int) k
( h, b2World& World, ) p
(float) k
( posX) p n
(, ) S
(float) k
( posY\);) p n
(        virtual ~Worm\() S
(void) k
(\);) p n
(        ) S
(void) k
( hurt\() p
(int) k
(\);) p n
(        ) S
(void) k
( frontJump\() p
(void) k
(\);) p n
(        ) S
(void) k
( backJump\() p
(void) k
(\);) p n
(        ) S
(void) k
( moveLeft\() p
(void) k
(\);) p n
(        ) S
(void) k
( moveRight\() p
(void) k
(\);) p n
(        ) S
(void) k
( pointHigher\() p
(void) k
(\);) p n
(        ) S
(void) k
( pointMoreDown\() p
(void) k
(\);) p n
(        ) S
(float) k
( getPosY\() p
(void) k
(\);) p n
(        ) S
(float) k
( getPosX\() p
(void) k
(\);) p n
(        ) S
(void) k
( setAngle\() p
(float) k
( angle\);) p n
(        ) S
(int) k
( getId\() p
(void) k
(\);) p n
(        ) S
(int) k
( getTeam\() p
(void) k
(\);) p n
(        ) S
(int) k
( getHealth\() p
(void) k
(\);) p n
(        std::string getName\() S
(void) k
(\);) p n
(        entity_t getEntityType\(\) {) S
(return) K
( WORM;}) p n
(Worm.h) (Page 1/2) (jun 25, 18 20:09) title
border
grestore
(Printed by Gabriel Robles) rhead
(Worm.cpp, Worm.h) (58/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2,1) 59
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(void) k
( addFootContact\() p
(void) k
(\);) p n
(        ) S
(void) k
( deleteFootContact\() p
(void) k
(\);) p n
(        bool isMirrored\() S
(void) k
(\);) p n
(        ) S
(void) k
( shoot\() p
(/* entity_t weapon */) c
(\);) p n
(        bool isWalking\() S
(void) k
(\);) p n
(        bool isFalling\() S
(void) k
(\);) p n
(        bool isGrounded\() S
(void) k
(\);) p n
(        bool isDead\() S
(void) k
(\);) p n
(        bool gotHurtInTurn\() S
(void) k
(\);) p n
(        bool didShootInTurn\() S
(void) k
(\);) p n
(        ) S
(void) k
( setAffectedByExplosion\(\);) p n
(        ) S
(void) k
( setFalling\(bool\);) p n
(        ) S
(void) k
( update\() p
(void) k
(\);) p n
(        ) S
(void) k
( kill\() p
(void) k
(\);) p n
(        bool isMoving\() S
(void) k
(\);) p n
(        bool isAffectedByExplosion\() S
(void) k
(\);) p n
(        ) S
(void) k
( refreshByNewTurn\() p
(void) k
(\);) p n
(        ) S
(void) k
( setPosition\() p
(float) k
( posX, ) p
(float) k
( posY\);) p n
(        ) S
(void) k
( setNormal\(b2Vec2 normal\);) p n
(        worm_inclination_t getInclination\(\);) N
(        ) S
(int) k
( getDirectionAngle\(\);) p n
(        ) S
(void) k
( pickWeapon\(weapon_t weapon\);) p n
(};) N
() N
(#endif) K n
(Worm.h) (Page 2/2) (jun 25, 18 20:09) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Table of Contents) K n
( 1 ) p
(AirStrike.cpp.......) k
( sheets   1 to   1 \( 1\) pages   1-  1   31 lines) p n
( 2 ) S
(AirStrike.h.........) k
( sheets   1 to   1 \( 1\) pages   2-  2   25 lines) p n
( 3 ) S
(Bat.cpp.............) k
( sheets   2 to   2 \( 1\) pages   3-  3   47 lines) p n
( 4 ) S
(Bat.h...............) k
( sheets   2 to   2 \( 1\) pages   4-  4   28 lines) p n
( 5 ) S
(Bazooka.cpp.........) k
( sheets   3 to   4 \( 2\) pages   5-  7  125 lines) p n
( 6 ) S
(Bazooka.h...........) k
( sheets   4 to   4 \( 1\) pages   8-  8   34 lines) p n
( 7 ) S
(client.cpp..........) k
( sheets   5 to   5 \( 1\) pages   9- 10  110 lines) p n
( 8 ) S
(client.h............) k
( sheets   6 to   6 \( 1\) pages  11- 11   47 lines) p n
( 9 ) S
(Configuration.cpp...) k
( sheets   6 to   8 \( 3\) pages  12- 16  229 lines) p n
(10 ) S
(Configuration.h.....) k
( sheets   9 to   9 \( 1\) pages  17- 18   88 lines) p n
(11 ) S
(ContactListener.cpp.) k
( sheets  10 to  10 \( 1\) pages  19- 20  111 lines) p n
(12 ) S
(ContactListener.h...) k
( sheets  11 to  11 \( 1\) pages  21- 21   23 lines) p n
(13 ) S
(Dynamite.cpp........) k
( sheets  11 to  12 \( 2\) pages  22- 23   65 lines) p n
(14 ) S
(Dynamite.h..........) k
( sheets  12 to  12 \( 1\) pages  24- 24   33 lines) p n
(15 ) S
(Entity.h............) k
( sheets  13 to  13 \( 1\) pages  25- 25   26 lines) p n
(16 ) S
(event_receiver.cpp..) k
( sheets  13 to  13 \( 1\) pages  26- 26   52 lines) p n
(17 ) S
(event_receiver.h....) k
( sheets  14 to  14 \( 1\) pages  27- 27   28 lines) p n
(18 ) S
(ExplosionManager.cpp) k
( sheets  14 to  14 \( 1\) pages  28- 28   48 lines) p n
(19 ) S
(ExplosionManager.h..) k
( sheets  15 to  15 \( 1\) pages  29- 29   24 lines) p n
(20 ) S
(Fragment.cpp........) k
( sheets  15 to  16 \( 2\) pages  30- 31  121 lines) p n
(21 ) S
(Fragment.h..........) k
( sheets  16 to  16 \( 1\) pages  32- 32   30 lines) p n
(22 ) S
(Girder.cpp..........) k
( sheets  17 to  17 \( 1\) pages  33- 33   52 lines) p n
(23 ) S
(Girder.h............) k
( sheets  17 to  17 \( 1\) pages  34- 34   28 lines) p n
(24 ) S
(Grenade.cpp.........) k
( sheets  18 to  18 \( 1\) pages  35- 36   92 lines) p n
(25 ) S
(Grenade.h...........) k
( sheets  19 to  19 \( 1\) pages  37- 37   35 lines) p n
(26 ) S
(lobby_attendant.cpp.) k
( sheets  19 to  20 \( 2\) pages  38- 40  152 lines) p n
(27 ) S
(lobby_attendant.h...) k
( sheets  21 to  21 \( 1\) pages  41- 41   37 lines) p n
(28 ) S
(main.cpp............) k
( sheets  21 to  22 \( 2\) pages  42- 43   80 lines) p n
(29 ) S
(match.cpp...........) k
( sheets  22 to  24 \( 3\) pages  44- 48  250 lines) p n
(30 ) S
(match.h.............) k
( sheets  25 to  25 \( 1\) pages  49- 49   62 lines) p n
(31 ) S
(Missil.cpp..........) k
( sheets  25 to  26 \( 2\) pages  50- 51  117 lines) p n
(32 ) S
(Missil.h............) k
( sheets  26 to  26 \( 1\) pages  52- 52   30 lines) p n
(33 ) S
(Mortar.cpp..........) k
( sheets  27 to  27 \( 1\) pages  53- 53   20 lines) p n
(34 ) S
(Mortar.h............) k
( sheets  27 to  27 \( 1\) pages  54- 54   18 lines) p n
(35 ) S
(PhysicEntity.h......) k
( sheets  28 to  28 \( 1\) pages  55- 55   20 lines) p n
(36 ) S
(protected_waiting_games.cpp) k
( sheets  28 to  29 \( 2\) pages  56- 57   80 lines) p n
(37 ) S
(protected_waiting_games.h) k
( sheets  29 to  29 \( 1\) pages  58- 58   33 lines) p n
(38 ) S
(QueryCallback.cpp...) k
( sheets  30 to  30 \( 1\) pages  59- 59    7 lines) p n
(39 ) S
(QueryCallback.h.....) k
( sheets  30 to  30 \( 1\) pages  60- 60   14 lines) p n
(40 ) S
(RayCastClosestCallBack.cpp) k
( sheets  31 to  31 \( 1\) pages  61- 61   12 lines) p n
(41 ) S
(RayCastClosestCallBack.h) k
( sheets  31 to  31 \( 1\) pages  62- 62   16 lines) p n
(42 ) S
(RedGrenade.cpp......) k
( sheets  32 to  32 \( 1\) pages  63- 63   19 lines) p n
(43 ) S
(RedGrenade.h........) k
( sheets  32 to  32 \( 1\) pages  64- 64   21 lines) p n
(44 ) S
(server.cpp..........) k
( sheets  33 to  33 \( 1\) pages  65- 66  115 lines) p n
(45 ) S
(server_error.cpp....) k
( sheets  34 to  34 \( 1\) pages  67- 67   15 lines) p n
(46 ) S
(server_error.h......) k
( sheets  34 to  34 \( 1\) pages  68- 68   21 lines) p n
(47 ) S
(server_game.cpp.....) k
( sheets  35 to  36 \( 2\) pages  69- 71  118 lines) p n
(48 ) S
(server_game.h.......) k
( sheets  36 to  36 \( 1\) pages  72- 72   29 lines) p n
(49 ) S
(server.h............) k
( sheets  37 to  37 \( 1\) pages  73- 73   37 lines) p n
(50 ) S
(snapshot.cpp........) k
( sheets  37 to  38 \( 2\) pages  74- 76  116 lines) p n
(51 ) S
(snapshot.h..........) k
( sheets  39 to  39 \( 1\) pages  77- 77   25 lines) p n
(52 ) S
(snapshot_sender.cpp.) k
( sheets  39 to  40 \( 2\) pages  78- 79   68 lines) p n
(53 ) S
(snapshot_sender.h...) k
( sheets  40 to  40 \( 1\) pages  80- 80   34 lines) p n
(54 ) S
(team.cpp............) k
( sheets  41 to  41 \( 1\) pages  81- 82   97 lines) p n
(55 ) S
(team.h..............) k
( sheets  42 to  42 \( 1\) pages  83- 83   35 lines) p n
(56 ) S
(Teleportation.cpp...) k
( sheets  42 to  42 \( 1\) pages  84- 84   15 lines) p n
(57 ) S
(Teleportation.h.....) k
( sheets  43 to  43 \( 1\) pages  85- 85   20 lines) p n
(58 ) S
(waiting_game.cpp....) k
( sheets  43 to  44 \( 2\) pages  86- 87  103 lines) p n
(59 ) S
(waiting_game.h......) k
( sheets  44 to  44 \( 1\) pages  88- 88   38 lines) p n
(60 ) S
(Wall.cpp............) k
( sheets  45 to  45 \( 1\) pages  89- 89   42 lines) p n
(61 ) S
(Wall.h..............) k
( sheets  45 to  45 \( 1\) pages  90- 90   22 lines) p n
(Table of Content) (Page 1/2) (jun 26, 18 12:49) title
border
grestore
(Printed by Gabriel Robles) rhead
(Worm.h, Table of Content) (59/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 60
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(62 ) p
(Water.cpp...........) k
( sheets  46 to  46 \( 1\) pages  91- 91   42 lines) p n
(63 ) S
(Water.h.............) k
( sheets  46 to  46 \( 1\) pages  92- 92   23 lines) p n
(64 ) S
(Weapon.cpp..........) k
( sheets  47 to  47 \( 1\) pages  93- 93   41 lines) p n
(65 ) S
(Weapon.h............) k
( sheets  47 to  47 \( 1\) pages  94- 94   34 lines) p n
(66 ) S
(WeaponManager.cpp...) k
( sheets  48 to  49 \( 2\) pages  95- 97  136 lines) p n
(67 ) S
(WeaponManager.h.....) k
( sheets  49 to  49 \( 1\) pages  98- 98   38 lines) p n
(68 ) S
(Wind.cpp............) k
( sheets  50 to  50 \( 1\) pages  99- 99   21 lines) p n
(69 ) S
(Wind.h..............) k
( sheets  50 to  50 \( 1\) pages 100-100   21 lines) p n
(70 ) S
(World.cpp...........) k
( sheets  51 to  53 \( 3\) pages 101-105  250 lines) p n
(71 ) S
(World.h.............) k
( sheets  53 to  54 \( 2\) pages 106-107   66 lines) p n
(72 ) S
(WorldPhysic.cpp.....) k
( sheets  54 to  54 \( 1\) pages 108-108   37 lines) p n
(73 ) S
(WorldPhysic.h.......) k
( sheets  55 to  55 \( 1\) pages 109-109   22 lines) p n
(74 ) S
(Worm.cpp............) k
( sheets  55 to  58 \( 4\) pages 110-115  309 lines) p n
(75 ) S
(Worm.h..............) k
( sheets  58 to  59 \( 2\) pages 116-117   87 lines) p n
(Table of Content) (Page 2/2) (jun 26, 18 12:49) title
border
grestore
(Printed by Gabriel Robles) rhead
(Table of Content) (60/60) (martes junio 26, 2018) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
